exit
quit
import subprocess
from pathlib import Path
import json
# import touch
import clipboard
import os
pip3 install clipboard
import sqlite3
conn = sqlite3.connect("/home/steff007/.ipython/profile_default/history.sqlite")
c = conn.cursor()
ip = c.execute("SELECT source from history")
ip
print(ip)
for row in ip:
print(row)
for row in ip:
	print(row)
fileName = r"ipy"
f = open(fileName, "w", encoding="utf-8")
mapping = dict.fromkeys(range(32))
for row in ip:
    # print(len(str(row)))
    myRow = row[0].translate(mapping)
    if len(myRow) != 0:
        print(myRow.strip(), file=f)
print("-" * 10)
ls
!ls
print(ip)
myRpw
myRow
for row in ip:
    # print(len(str(row)))
    myRow = row[0].translate(mapping)
    if len(myRow) != 0:
        print(myRow.strip(), file=f)
f
import sqlite3
conn = sqlite3.connect("/home/steff007/.ipython/profile_default/history.sqlite")
c = conn.cursor()
ip = c.execute("SELECT source from history")
ip
for row in ip:
	print(row)
mapping = dict.fromkeys(range(32))
for row in ip:
    # print(len(str(row)))
    myRow = row[0].translate(mapping)
    if len(myRow) != 0:
		print(myRow)
for row in ip:
    # print(len(str(row)))
    myRow = row[0].translate(mapping)
    if len(myRow) != 0:
        print(myRow.strip())
for row in ip:
	print(row)
conn = sqlite3.connect("/home/steff007/.ipython/profile_default/history.sqlite")
c = conn.cursor()
ip = c.execute("SELECT source from history")
for row in ip:
	print(row)
for row in ip:
	print(row)
ip
list(ip)
conn = sqlite3.connect("/home/steff007/.ipython/profile_default/history.sqlite")
c = conn.cursor()
ip = c.execute("SELECT source from history")
x=list(ip)
x
type(x)
for a in x:
	print(a)
for row in ip:
    # print(len(str(row)))
    myRow = row[0].translate(mapping)
    if len(myRow) != 0:
        print(myRow.strip())
os.getcwd()
import os
os.getcwd()
print(f'current {os.getcwd()}')
import sqlite3
conn = sqlite3.connect("/home/steff007/.ipython/profile_default/history.sqlite")
c = conn.cursor()
ip = c.execute("SELECT source from history")
fileName = r"ipy"
mapping = dict.fromkeys(range(32))
for row in ip:
    # print(len(str(row)))
    # myRow = row[0].translate(mapping)
    if len(Row) != 0:
        print(Row.strip())
import sqlite3
conn = sqlite3.connect("/home/steff007/.ipython/profile_default/history.sqlite")
c = conn.cursor()
ip = c.execute("SELECT source from history")
fileName = r"ipy"
mapping = dict.fromkeys(range(32))
for row in ip:
    # print(len(str(row)))
    # myRow = row[0].translate(mapping)
    if len(row) != 0:
        print(row.strip())
import sqlite3
conn = sqlite3.connect("/home/steff007/.ipython/profile_default/history.sqlite")
c = conn.cursor()
ip = c.execute("SELECT source from history")
fileName = r"ipy"
mapping = dict.fromkeys(range(32))
for row in ip:
    # print(len(str(row)))
    # myRow = row[0].translate(mapping)
    if len(row) != 0:
        print(row)
import sqlite3
conn = sqlite3.connect("/home/steff007/.ipython/profile_default/history.sqlite")
c = conn.cursor()
ip = c.execute("SELECT source from history")
ipl=list(ip)
ipl
for a in ipl:
	print(a)
import clipboard
apps
import requests
from pathlib import Path
import json
# import touch
import os
with open(r'/mnt/c/all/bash/b.json', 'r') as f:  data = json.load(f)
from pathlib import Path
import json
# import touch
import os
with open(r'/mnt/c/all/bash/b.json', 'r') as f:  data = json.load(f)
s=json.dumps(data, indent = 4, sort_keys=True)
from pathlib import Path
import json
# import touch
import os
with open(r'/mnt/c/all/bash/b.json', 'r') as f:  
    data = json.load(f)
s=json.dumps(data, indent = 4, sort_keys=True)
fulltitle=data['fulltitle']
description=data['description']
with open(r'/mnt/c/all/bash/b.json', 'r') as f:
print(f)
with open(r'/mnt/c/all/bash/b.json', 'r') as f:
	print(f)
with open(r'/mnt/c/all/bash/b.json', 'r') as f:
	data = json.load(f)
data
s=json.dumps(data, indent = 4, sort_keys=True)
s
fulltitle=data['fulltitle']
fulltitle
from pathlib import Path
import json
import os
with open(r'/mnt/c/all/bash/b.json', 'r') as f:  
    data = json.load(f)
s=json.dumps(data, indent = 4, sort_keys=True)
from pathlib import Path
import json
import os
with open(r'/mnt/c/all/bash/b.json', 'r') as f:  
    data = json.load(f)
data
s=json.dumps(data, indent = 4, sort_keys=True)
s
from pathlib import Path
import json
import os
with open(r'/mnt/c/all/bash/b.json', 'r') as f:  
    data = json.load(f)
p3
from pathlib import Path
import json
import os
with open(r'/mnt/c/all/bash/b.json', 'r') as f:  
    data = json.load(f)
s=json.dumps(data, indent = 4, sort_keys=True)
s
with open(r'/mnt/c/all/bash/b.json', 'r') as f:  
    data = json.load(f)
import json
with open(r'/mnt/c/all/bash/b.json', 'r') as f:  
    data = json.load(f)
data
def fib(n):
	if n in {0,1}:
		return n
	return fib(n-1) + fib(n-2)
fib(4)
fib(99)
fib(5)
fib(8)
fib(20)
import ffmpeg
import sys
from pprint import pprint # for printing Python dictionaries in a human-readable way
exit
import re
import sys
from IPython import start_ipython
if __name__ == '__main__':
    sys.argv[0] = re.sub(r'(-script\.pyw|\.exe)?$', '', sys.argv[0])
    sys.exit(start_ipython())
y
!ls
import os
import subprocess
subprocess.call('ls')
subprocess.call('ls', '-a')
subprocess.call(['ls', '-a'])
jim=['ls','-a']
subprocess.call(jim)
jim=['rg' '-h']
subprocess.call(jim)
subprocess.call('alias')
subprocess.call(['alias'])
import sys
results = [m.__name__ for m in sys.modules.values() if m]
results = sorted(results)
print(results)
type(results)
for a in results:
	print(a)
dir(zipimport)
dir(types)
dir(type)
site
results = [m.__name__ for m in sys.modules.values() if m]
dir()
import os
dir()
help("modules")
re
modules re
help("modules") re
import re
help
help(dir)
help(re)
import os
dir_path='.'
for path in os.scandir(dir_path):
    if path.is_file():
        files.append(path.name)
        print(path.name)
files=[]
import os
dir_path='.'
for path in os.scandir(dir_path):
    if path.is_file():
        files.append(path.name)
        print(path.name)
files
for a in files:
	print(a)
import clipboard
exit
history
exit
import mysql.connector
import os
help os
exit
import numpy
exit()
import numpy
numpy.__version__
x=dir(numpy)
x
x[4:8]
len(x)
import os
os.uname()
os.system('ls')
os.system('fd')
os.system('fd /')
os.system('fd //')
os.system('fd ~')
os.system('fd . ~')
exit()
exit
exit()
import sys
sys.executable
exit
exit()
import mysql.connector
db=mysql.connector.connect()
db=mysql.connector.connect(host="localhost" ,user="wordpress", passwd="wordpress")
mycursor=db.cursor()
db=mysql.connector.connect()
mycursor=db.cursor()
exit
exit()
print("linux version")
exit()
exit
dir()
exit
