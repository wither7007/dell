\l
\h
\?
\?
q
\q
\dt *.*
SELECT pg_size_pretty(pg_total_relation_size('__table_name__'));
create table if not exists product (  id              SERIAL,  name            VARCHAR(100) NOT NULL,  sku             CHAR(8));
\dt
\dt
\dt
select * from product;
INSERT INTO product VALUES(DEFAULT, 'Carrots', 4562),(DEFAULT, 'Durian', 5228);
select * from product;
\t
\dt
select * from articles;
SELECT schema_nameFROM information_schema.schemata;
SELECT schema_nameFROM information_schema.schemata;
SELECT * FROM pg_catalog.pg_tables;
SELECT version();
\q
select * from schema.table;
select * from schema.table;
select * from articles;
\dt
SELECT * FROM pg_catalog.pg_tables;
\t
\dt *.*
SELECT * FROM pg_catalog.pg_tables;
\h
SELECT * FROM pg_catalog.pg_tables;
\l
\c myproject
\dn
select nspname from pg_catalog.pg_namespace;
SELECT datname FROM pg_database WHERE datistemplate = false;
DROP DATABASE myproject;
SELECT *FROM pg_catalog.pg_tablesWHERE schemaname != 'pg_catalog' AND     schemaname != 'information_schema';
select version();
\l
\c template0
\c postgres
select datname,numbackends from  pg_stat_database;
use textdb;
select datname,numbackends from  pg_stat_database;
use tempdb;
SELECT datname FROM pg_database;
SELECT session_user, current_database();
select datname,numbackends from  pg_stat_database;
set search_path = myproject;
select datname,numbackends from  pg_stat_database;
SELECT session_user, current_database();
SELECT session_user, current_database();
SELECT *FROM pg_catalog.pg_tablesWHERE schemaname != 'pg_catalog' AND     schemaname != 'information_schema';
select * from product;
\c
SELECT datname FROM pg_database WHERE datistemplate = false;
\c myproject 
SELECT datname FROM pg_database WHERE datistemplate = false;
SELECT *FROM pg_catalog.pg_tablesWHERE schemaname != 'pg_catalog' AND     schemaname != 'information_schema';
SELECT *FROM pg_catalog.pg_tables;
SELECT * FROM pg_catalog.pg_tables;
SELECT * FROM pg_catalog.pg_tables order by schemaname;
select * from information_schema.sql_languages;
select * from information_schema.sql_languages;
SELECT current_schema();
SHOW search_path;
CREATE DATABASE db;
db=# \connect postgres
SELECT  *FROM pg_stat_activityWHERE datname = 'db';
SELECT  *FROM pg_stat_activityWHERE datname = 'db';
CREATE DATABASE sales;
\l
CREATE DATABASE hr WITH    ENCODING = 'UTF8'   OWNER = hr   CONNECTION LIMIT = 100;
CREATE DATABASE hr WITH    ENCODING = 'UTF8'   OWNER = steff007   CONNECTION LIMIT = 100;
\l
\l
\?
\d+
\d+
\?
\e nvim
\e
\?
\s
\?
\i my.sql
\l
SELECT session_user, current_database();
\t
\dt
\h
\t
\d
\dt
\l
\c sales
\dt
\dt
\c hr
\dt
\c testdb
\dt
\l
c\ template0
\c template0
\c template1
\dt
\c
\c postgres 
\dt
\c
\c testdb
CREATE TABLE leads (id INTEGER PRIMARY KEY, name VARCHAR);
CREATE TABLE leads (id INTEGER PRIMARY KEY, name VARCHAR);
\dt
\dt+
SELECT *FROM pg_catalog.pg_tablesWHERE schemaname NOT IN ('pg_catalog','information_schema');
\st
\dt
SELECT *FROM pg_catalog.pg_tablesWHERE schemaname NOT IN ('pg_catalog','information_schema');
SELECT *FROM pg_catalog.pg_tablesWHERE schemaname NOT IN ('pg_catalog','information_schema') order by tablename;
\l
\db
\e
SELECT *FROM pg_catalog.pg_tablesWHERE schemaname NOT IN ('pg_catalog','information_schema') order by tablename;
\e
SELECT *FROM pg_catalog.pg_tablesWHERE schemaname NOT IN ('pg_catalog','information_schema') order by tablename;
\h
\?
\r
\e
SELECT *FROM pg_catalog.pg_tablesWHERE schemaname NOT IN ('pg_catalog','information_schema') order by tablename;
\e
SELECT current_schema();
\e
CREATE TABLESPACE ts_primary LOCATION '/home/steff007/junk/ts';
\e
CREATE TABLESPACE ts_primary LOCATION '/mnt/c/projects/junk/';
\db
\db+
\t
\dt
\l
\c testdb
\dt
\dt
\l
\c tempdb
\dt
\dt
\l
\c testdb 
\dt
\l
\c tempdb 
\dt
\dt
\l
\c testdb 
\dt
\dt
\l
\c tempdb
\lt
\dt
\dt
\l
\c db
drop tempdb
\l
\c tempdb
\l
CREATE DATABASE newdb;
\h
\?
\r
CREATE DATABASE newdb;
\l
\c newdb 
\dt
\l
\dt
\l
\c newdb 
\lt
\dt
\l
\c newdb 
\dt
\l
\c db
drop database newdb;
\l
CREATE DATABASE newdb;
\l
\c newdb
\dt
\l
\c newdb 
\dt
select * from author;
\l
\c newdb 
select * from author;
\newdb
\c newdb
select * from author;
