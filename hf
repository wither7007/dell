unalias wi
fdi mp3
fdi 'mp.*'
exiftool -T -FileModifyDate ex.mp4
exiftool -T -Description ex.mp4
ex ex.mp4
fd fun
se 'descri'
se 'exi.*-T'
ls py
rg mp4
rg mp4 | v -
alias | rg tras
rmt alpha-prj
se 'within'
fd --changed-within=1d
fd -E ex --changed-within=1d
fd -E ex --changed-within=5d
fd -E ex --changed-within=2weeks
pip list 2>/dev/null
pip list 2>/dev/null | rg ff
p3 ffm.py ex.mp4
p3 ffm.py ex.mp4 |v -\n: 1660977729:0;p3 ffm.py ex.mp4 |v -
fd -a ffm
p3 /home/steff007/ffm.py ex.mp4
alias ffm="p3 /home/steff007/ffm.py "
fd 'mp4
fdi 'mp4'
ffm 'Build YOUR OWN Dockerfile, Image, and Container - Docker Tutorial.mp4' | v -
alias ffm
cd zsh
fd -d 1 tf
head -n 2 a.js
cat services.txt
cat services.txt | clip
head -n 1 $(fd -d 1 -tf)
head -n 1 $(fd -d 1 -tf) | less
fd 2
fd -d 1 2
fdi 2
ls | rg 2
rm 2
rm *.jpg
rmt string.txt uni.txt
rm paul.pdf speedtest.py typ.py vsc1.py class.py
rm a.js file.txt 
rm re.mp3
fdi -tf | column
rm duh duh.txt
v walk
p3 walk.py
rm walk.py his a.sh services.txt
cd his
rm -rf his
rm -rf newdebug sql
wi z
man zip
sudo apt -y install p7Zip-full #! zip per https://7ziphelp.com/7zip-for-linux
https://7ziphelp.com/7zip-for-linux
printenv | rg -i histor
echo $HISTORY
echo HISTORY
alias omz_history
fdi history
fdi ex
fd -H -I history
fd -E local -H -I history
fd -E .local -H -I history
fd -E .local -H -I '$history'
fd -E .local -H -I '$y'
ls .bash_history
ll .bash_history
fd -E .local -H -I '_history'
fd -H --changed-within=1d
fd -E ex -H --changed-within=1d
fd -E 'ex|local' -H --changed-within=1d
fd -E 'ex' -E 'local' -H --changed-within=1d
fd -E 'ex' -H --changed-within=1d
fd -E 'ex' -H --changed-within=1h
v .cache/p10k-steff007/prompt-19
fd  -H -I --changed-within=1h
v cache/zsh/history
tmux kill-session -a #! kill all
tmux kill-session -a
pkill -f tmux #! kill all
fd -E 'ex' -H -I --changed-within=1h
ls | rg du
sudo apt install sd
rg .
rg . -name "a"
fd . "a"
fd -d 1 txt
fd -d 2 txt
fd $py
fd '$py'
fd 'py$'
fd 'e$'
fd 'mp4$'
fd -I 'mp4$'
fd -I 'mp\d$'
fd -I 'mp3$'
fd -I -i 'roll'
fd -I -i 'beat'
fd -I -i 'roll' | column
fd -I -i -a 'roll' | column
fd -I -i 'roll' 
fd tdxt
fd txt
fd "*.txt"
fd dates
sed 
sed dates.txt
sed '/s/http/xxx' dates.txt
sed '/s/h/xxx' dates.txt
sed '/s/a/xxx' dates.txt
sed '/s/htt/xxx' dates.txt
sed '/s/htt/xxx' p
sed '/s/h/xxx' p
sed '/s/h/xxx/' p
sed '/s/h/xxx/g' p
sed 's/h/xxx/g' p
sed -i 's/h/xxx/g' p
fd '.*\d'
fd '\sI'
fd '\sIt'
fd '\d\s'
ls | rg 'su'
ll | rg 'sug'
find . | rg 'sub'
find . | rg 'sug'
ls Brown\ Sugar\ \(2009\ Remaster\).mp3
ll Brown\ Sugar\ \(2009\ Remaster\).mp3
fd 'sug'
fd 'sug' -x ll
fd 'sug' -x ls
ls -arht
fd -e sh
fd -e sh -X nvim
convert
fd -e jpg
git clone https://github.com/jez/as-tree\ncd as-tree\nmake install
sh d.sh
bash d.sh
./d.sh
ls | sort -V
ll -sh
ll -sh | rg '\dM'
ll -sh | rg '\d+M'
ll -sh | rg '\d+M|G'
ll -sh | rg '\d+[M|G]'
ll -r -sh | rg '\d+[M|G]'
ll -r
se tmux
history | rg 'tmux'
pkill -f tmux
pkill -f tmux && exit
comgen -A function
compgent -a function
compgeng -a function
compgen -A function | column | rg -v "^_"
ls -sh
dpkg -l
sudo apt-qq list p7Zip-full
sudo apt list p7Zip-full
free -h 
vim ~/.zsh_history
echo $(data)
echo $(dat3)
date > clip
alias cdc
echo test | clip
echo $(date) | clip
v $(echo $HISTFILE)
alias ehis="v $(echo $HISTFILE)"
man 7z
man df
df -h #! disk usage
cd mnt
free -w
free -wh
apt list --installed | rg v
apt list --installed | rg time
bash -c ls
uname -c cat /etc/os-version
uname -c cat /etc/os-release
bash -c uname -a
bash -c cat /etc/os-release
bash -c 'cat /etc/os-release'
bash -c 'ps'
for f in *; echo f; done
for f in *; do echo f; done
for f in *; do echo $f; done #~ quick loop
for f in *; do echo $f; done #! quick loop
ls | sort -k1.3,1n
rev duh.txt
rev duh.txt | sort | rev
ls -lX
read -p "Please type the desired hostname: " NEW_HOSTNAME
read  "Please type the desired hostname: " NEW_HOSTNAME
md input
rm input
rd input
alias | rg tmux
alias axit'pkill -f tmux && exit '
compgen -A function
compgen -A function | column
detect-clipboard
compgen -A function | rg -v '^+'
compgen -A function | rg -v '^_' | sort
zsh_stats
fc -l 1
declare -f zsh_stats
declare -f fc
alias fc
man zshbuiltins
man ps
ps -ejH
ps axms
ps axms | wc
ps axms | v -
fd sh
sh x.sh
take v
rm -rf v
fdi alp
fdi activ
fdi ss
se 'duh.txt'
rm -rf as-tree
df -h -T
df -h -T | rg -v 'tmp'
df -Th | rg -v 'tmp'
watch df -Th | rg -v 'tmp'
watch df -Th
sudo du etc
sudo du /etc
sudo du -h /etc
sudo du -h ~/.local
cd .local/share
cd ex
ll -h
ncdu
zsh-syntax-highlighting
cat /etc/os-release > os-8-21
v os-8-21
wi alias
whereis alias
whence alis
v .save.js
node
chmod +x interesting.sh
sh interesting.sh
bash interesting.sh
source interesting.sh
se '\./'
v interesting.sh
./interesting.sh
cat /etc/os
caot /etc/os-release
cat os-8-21
rm null
alias rm
fdi py
fd --changed-within=2d
fd --changed-within=3d
fd --changed-within=4d
fd -E stable --changed-within=4d
cd stable
fdi act
cd in
fd | les
se 'venv'
for a in $(ls *.sh); do head $a; done
for a in $(ls *.sh); do {head $a}; done
for a in $(ls *.sh); do {head $a; echo '-------'}; done
manv head
unalias rg
fd \.con
fd -d 1 \.
cd Users
take jim
rd jim
se 'decl'
se 'decl' | v -
echo ${testvar[0]}
declare testvar[1]="200"
declare testvar[0]="200"
declare testvar[2]="200"
echo ${testvar[*]}
$testvar
for a in $testvar; echo $a; done;
for a in $testvar; do echo $a; done;
for a in ls; do echo $a; done;
for a in $(fd -d 1); do echo $a; done;
for a in $(fd -d 1 sh); do echo $a; done;
source for.sh
v for.sh
head 2 reg.html
source ~/functions.sh
ll du*
se 'head'
head -n 2 duh.txt
for a in $(fd -d 1 sh); \n: 1661139489:0;ls sh
ll sh
for a in $(fd -d 1 sh); \ndone;
se 'for\s\n: 1661139707:0;se 'for\s'
for a in $(fd -d 1 sh); do head -n 2 $a $a; done;
for a in $(fd -d 1 sh); do head -n 2 $a $a; done; | v -
man take
sudo apt install network-manager
nmcli d wifi list
nmcli
lspci
for a in $(fd -d 1 sh); do head -n 2 $a $a; done; > a
for a in $(fd -d 1 sh); do head -n 2 $a $a; done; 
for a in $(fd -d 1 \.sh); do head -n 2 $a $a; done; 
alias g
sh functions.sh
bash functions.sh
declare -f git
gwch
alias | rg git
declare -f mkvenv
zplug "MichaelAquilina/zsh-autoswitch-virtualenv"
echo 'deb http://download.opensuse.org/repositories/shells:/zsh-users:/zsh-autosuggestions/Raspbian_9.0/ /' | sudo tee /etc/apt/sources.list.d/shells:zsh-users:zsh-autosuggestions.list\ncurl -fsSL https://download.opensuse.org/repositories/shells:zsh-users:zsh-autosuggestions/Raspbian_9.0/Release.key | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/shells_zsh-users_zsh-autosuggestions.gpg > /dev/null\nsudo apt update\nsudo apt install zsh-autosuggestions
python 
capsh
captoinfo
exa --tree
exa --tree tmp
exa --tree .docker
exa -1
exa --long --header --git | less
exa --long --header --git | tail
exa --long --header --git | head
exa --long --header --git
exa --recurse
exa --recurse | v -
exa *.sh
exa --long --header *.sh
exa --long --header *.py | rg 'aug'
exa --long --header *.py | rg 'Aug'
exa --long --header *.py | rg '\d*k'
exa --long --header *.py | rg '\dk'
exa --long --header *.py | rg '\d'
exa --long --header  | rg 'k\d'
exa --long --header *.py
man exa
exa -m
exa -l
manv exa
exa -s accessed
exa long -s accessed
exa -long -s accessed
exa --long -s accessed
exa -r -L 1
exa -r -L 1 -T
exa -r -L 2 -T
exa -r -L 2 -T | less
exa -r -L 2 -T | v -
alias exat='exa -r -L 2 -T | v -'
alias exat='exa -r -L 3 -T | v -'
alias exat
exa -r -L 3 -T 
exat | less
alias lf
exa  -a --group-directories-first -s modified
exa  -a --group-directories-first -s modified -X
exa  -a --group-directories-first -s modified -x
alias exam='exa  -a --group-directories-first -s modified -x'
rm files.7z
v extensions.txt
ls rea
ls rea*
exa -F
lr -h
rm lnl
rm -rf lnl
cd tpro
rd tpro
rm -rf tpro
se 'doc'
se 'doc' | less
curl  https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh
curl https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh
curl https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh | v -
rg python
rg -m 1 python
rg -max-depth 1 python
rg -max-depth 1 bash
rg --max-depth 1 googl
rg --max-depth 2 googl
cd powerlevel10k
load
wi dpkg
cp zsh-autosuggestions_0.7.0-1+3.1_amd64.deb ~/
dpkg -i zsh-autosuggestions_0.7.0-1+3.1_amd64.deb
sudo dpkg -i zsh-autosuggestions_0.7.0-1+3.1_amd64.deb
apt list | rg zsh
exa bin
git clone https://github.com/zsh-users/zsh-autosuggestions ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions % git clone https://github.com/zsh-users/zsh -syntax-highlighting.git ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting % source ~/.zshr
git clone https://github.com/zsh-users/zsh-autosuggestions ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions 
ls sw*
exa 35.sh
apt list| rg 'zsh'
printenv | rg -i editor
echo $EDITOR
source ~/.zshrc
export EDITOR=nvim
bind
bindkey
bindkey '"\C-u":"Hello!"'
bindkey -X
man bindkey
help
lfcd size
lfcd -s inode
se 'dec
declare -f se
man declare
compgen -A function | rg -v '^_'
compgen -A function | rg -v '^_' | sort | column
declare -f url-quote-magic
declare -f url-quote-magic | less
docker run -i --rm itchyny/gojq
docker ls
docker run -i --rm ghcr.io/itchyny/gojq
gojq
0install run https://apps.0install.net/gui/vs-code.xml
apt list --installed | rg go
echo 'libpangoft2-1.0-0/fo'
echo 'libpangoft2-1.0-0/fo' | grep '.*p
echo 'libpangoft2-1.0-0/fo' | grep '.*p'
echo 'libpangoft2-1.0-0/fo' | grep '.*/'
echo 'libpangoft2-1.0-0/fo' | rg '.*/'
abc|rg 'a'
echo abc|rg 'a'
ls | rg '2'
ls | sed "s/a/xxx/g"
ls | sed "s/s/xxx/g"
ls | rg s | sed "s/s/xxx/g"
ls | rg s | sed "s/s/bat/g"
ls | rg sh | sed "s/s/bat/g"
ls | rg sh | sed "s/sh/bat/g"
ls | rg \.sh | sed "s/sh/bat/g"
ls | rg \.sh 
ls | rg '\.sh'
ls | rg '\.sh' | sed "s/sh/bat/g"
ll z*
ll .z*
ls | head -n1
ls | head -n3
ls | head -n33
netstat -anp
netstat -anp | tail
netstat -anp | tail n2
netstat -anp | tail -
netstat -anp | tail -n2
ls > x
sed 's/h/xxx/g' x
sed -i 's/h/xxx/g' x
sed -i 's/\d/xxx/g' x
cat x > grep '\d'
cat x | grep 'x'
cat x | grep '\d'
cat x | grep '/\d/'
cat x | grep '/x/'
grep -rIl '[[:space:]]$' .
grep 'goog'
grep 'ls\s'
printf "today is `date`\n"
grep 'ls\s' | grep '\d'
grep 'ls\s' | grep 't'
printf "today is `date`\n" | grep 'a'
printf "today is `date`\n" | grep '\d'
printf "today is `date`\n" | grep '/\d/'
grep bash /etc/passwd
grep ste /etc/passwd
compgen -c | columns
compgen -c | column
alias vi
alias gupa
for x in ${compgen -a}; do echo $x; done 
for x in $(compgen -a); do echo $x; done 
for x in $(compgen -a); do alias $a $x; done 
for x in $(compgen -a); do alias $x; done 
for x in $(compgen -a); do alias $x >>alt; done 
v alt
echo $(sort alt)
cat alt
sort alt
echo "$(sort alt)"
alias | sort
alias | sort | v -
printf "$USER user can run $(compgen -c | wc -l) commands on $HOSTNAME.\n"
ps -aux | grep $d
su root
systemctl
ls -1 *.h | sed 's/^/    /' | sed 's/$/ \\/'
ls -1 *.sh | sed 's/^/    /' | sed 's/$/ \\/'
ls -1 *.sh | sed 's/^/    /' | sed 's/$/ ppppp/'
ls -2
ls -1 *.sh | sed 's/^/    /' | sed 's/$/ \n/'
ls -1 *.sh | sed 's/^/ echo    /' | sed 's/$/ \n/'
ls -1 *.sh | sed 's/^/ cat    /' | sed 's/$/ \n/' > n.sh
source n.sh
ls -1 *.sh | sed 's/^/ cat/' 
ls -1 *.sh | sed 's/^/ cat /' 
for a in $(ls -1 *.sh | sed 's/^/ cat /'); do echo $a; done
duh > duh.txt
for x in alias; do echo $x; done
for x in $(alias); do echo $x; done
for x in $(alias); do {echo $x; echo '--------'}; done
fd 'ip.*py'
fd 'ipys.*py'
mv ipysql.py scripts
v ipysql.py 
wi python3.10 | sed '/s/\s/\n/g'
wi python3.10 | sed '/s/a/bbbbb/g'
echo 'abc' | sed '/s/a/c'
echo 'abc' | sed 's/a/c'
echo 'abc' | sed 's/a/c/g'
echo 'abc' | sed 's/a/c/'
wi python3.10 | sed 's/a/bbbbb/g'
wi python3.10 | sed 's/\d/bbbbb/g'
wi python3.10 | sed 's/p/bbbbb/g'
wi python3.10 | sed 's/p/\n/g'
wi python3.10 | sed 's/\s/\n/g'
wi python3.10 
c you
ls | sed 's/\s/---\n/g'
ls | sed 's/\s/xxx\n/g'
ls | sed 's/\s/\n/g'
ls | sed 's/\s/\n---/g'
abc| sed '/s/a/c/'
echo abc| sed '/s/a/c/'
echo abc| sed 's/a/c/'
ls | sed 's/\s/---/g'
ls | sed 's/s/---/g'
ls | sed 's/s/---/g' | tail
ls | sed 's/s/---/g' | tail -n2
rgi ex\s
rgi exif\s
se 'install'
fd -d 1 ^\.
ls ffm
ls ffm.py
ll ffm.py
fd -d 1 -x head n1
fd -d 1 -x head ll
fd -d 1 -x head 
fd -d 1 -tf -x head n1
fd -d 1 -tf -x head 
fd -d 1 -tf -x { head n1 }
find . -name "*.py" -exec echo {} \;
fd d 1 . -name "*.py" -exec echo {} \;
fd d 1 . -name "*.py" -x echo {} \;
fd d 1 "*.py" -x echo {} \;
fd -d 1 "*.py" -x echo {} \;
fd -d 1 -tf -x 'head n1'
fd -d 1 -tf -x echo
fd -d 1 -tf -x echo {}
alias ex
exif
lt mp4
fd mp4
find . -maxdepth 1 -name "*.py" -exec echo {} \;
find . -maxdepth 1 -name "*.py" -exec ll {} \;
find . -maxdepth 1 -name "*.py" -exec ls {} \;
find . -maxdepth 1 -name "*.py" -exec ls -l {} \;
find . -maxdepth 2 -name "*.py" -exec ls -l {} \;
ps | sed 's/a/xxxxxxxxxx/g'
ps | awk 'BEGIN{FS="|"} {print $2 " " $1}'
ps | awk  {print $2 " " $1}'
ps | awk  '{print $2 " " $1}'
pstree #! system tree
exiftool -T -Description -FileModifyDate ex.mp4
exiftool -T -Description -FileModifyDate ex.mp4 |awk  '{print $2 " " $1}'
exiftool -j -Description -FileModifyDate ex.mp4
curl "https://8000-cs-338141290872-default.cs-us-central1-pits.cloudshell.dev/dotfiles/"
curl "https://8000-cs-338141290872-default.cs-us-central1-pits.cloudshell.dev/ap.txt"
wget "https://8000-cs-338141290872-default.cs-us-central1-pits.cloudshell.dev/ap.txt"
v ap.txt
docker run -d -p 80:80 \\n: 1661328281:0;docker rmi $(docker ps -a -q) #!remove all images
tree -d | v -
tree -f
tree -f | less
tree | wc -l
tree wc
find . | wc
find . | wc -l
find . | wc -lh
alias 'user'
fd config
fd -td config
fd -tdH config
fd -td -H config
v nvim
exa -r
exat
landscape-sysinfo
lt | rg sh
rm -rf ex
rm zsh-autosuggestions_0.7.0-1+3.1_amd64.deb
exa -tree
se 'exa'
eams
exam
#!/bin/bash\ninput=".bashrc"\nwhile IFS= read -r line\ndone < "$input"
du .
man du
alias du
ll -S
ll -S -l
ll -l -S
alias ll
ls -l -S
ls -h
ll -H
ls -lSr #! sort by size
cargo install du-dust
sudo apt install tealdeer
sudo npm install -g tldr
more /etc/passwd
ls -lSh #sort size revers
ls -Sh #sort size revers
ls -sh #sort size revers
ls -lsh #sort size revers
ls -lS
echo "
echo "jim $PATH"
v read.sh
source read.sh
alias | rg ls
tldr
tldr ps
ls find
v .fdignore
fd -H -I .
fd -H -I -E .cache
fd -H -I -E .cache -E .local
fd -H -I -E .cache -E .local -E .config
ls |sed -e 's/\b[0-9]\{4\}\b/number/g'
echo '12345' |sed -e 's/\b[0-9]\{4\}\b/number/g'
v live.txt
sed -e 's/\b[0-9]\{4\}\b/number/g' live.txt
cat live.txt
sed -e 's/\b[0-9]\{3\}\b/number/g' live.txt
sed -e 's/\bof\b/xxx/g' live.txt
ls | sed 's/[a-z]/vvv/g'
ls | sed 's/\.sh/bat/g'
ls | sed 's/\.sh/\.bat/g'
ls | sed 's/\n/\.bat/g'
ls | sed 's/\n\n/\.bat/g'
ls | sed 's/\w/\.bat/g'
ls | sed 's/\s/\.bat/g'
ls | sed 'g/\./\.bat/g'
ls | sed 's/\./\.bat/g'
m=$(ls)
for a in $m; do echo $a; done
source k.sh
v =$(ll)
v =$(ls -lhrt)
v =$(ls)
v k.sh
f=$(ls)
v=$(ls)
echo $v
tr -cd "[:print:]"
tr -cd "[:print:]" < $(ls)
tldr tr
ls | tr "\n" "x"
ls | tr "\n" ", "
ls | tr "\n" "\t    "
ll | cut -f1 -d
ll | echo "Hello: world" | cut -f1 -d":"
echo "Hello: world" | cut -f1 -d":"
ll | -cut -f1 -d"\s"
ll | cut -f1 -d"\s"
ll | cut -f1 -d" "
ll | cut -f1 -d" " --complement
python3 -m timeit '"-".join(str(n) for n in range(100)); print(n)'
alias python='python3'
python -c "import math;print(math.sin(1)"
python -c "import math;print(math.tan(1))"
python -c "import math;print(math.tan(math.pi))"
se 'tim'
python3 -m timeit '"-".join(str(n) for n in range(100)): print(n)'
python3 -m timeit '"-".join(str(n) for n in range(100))
python3 -m timeit '"-".join(str(n) for n in range(100))'
se 'tr\s'
fdi -epy
cd you/class
stat
stat output.log
fd -epy -x stat | rg 'Access'
fd -epy -x fd -epy -x fd -epy -x stat | rg 'Access'
fd -epy -x fd -epy -x fd -epy -x 
fd -epy -x fd -epy -x fd -epy -x ls
fd -epy -x fd -epy -x fd -epy -x ll
fd -epy -x fd -epy -x fd -epy -x ls -a
fd -epy -x fd -epy -x fd -epy -x ls -al
fd -epy -x fd -epy -x fd -epy -x ls -al; stat
fd -epy -x fd -epy -x fd -epy -x stat | rg 'Access.*2'
fd -epy -x fd -epy -x fd -epy -x stat 
fd -epy -x fd -epy -x fd -epy -x stat | rg 'file'
fd -epy -x fd -epy -x fd -epy -x stat | rg 'ile'
fd -epy -x fd -epy -x fd -epy -x stat | rg 'File'
fd -epy -x fd -epy -x fd -epy -x stat | rg 'acces'
fd -epy -x fd -epy -x fd -epy -x stat | rg -i 'acces'
fd -epy -x fd -epy -x fd -epy -x stat | rg -i 'acces.*2'
fd -epy -x stat | rg 'Access.*2'
fd -epy -x stat | rg 'Access.*2' | sed 's/c/xxx/g'
ls | sed 's/\r/\.bat/g'
fd -epy > /mnt/all/pys
fd -epy > /mnt/c/all/pys
man time
/usr/bin/time -f "%E real,%U user,%S sys" sleep 2
/usr/bin/time -f "%E real,%U user,%S sys" fd .
ls &> out.log
v out.log
/usr/bin/time -f "%E real,%U user,%S sys" fd . %> ou
/usr/bin/time -f "%E real,%U user,%S sys" fd . &> ou
/usr/bin/time -f "%E real,%U user,%S sys" fd -H -I . &> ou
v Users/jayst/AppData/Local/pypa/virtualenv/wheel/3.9/image/1/CopyPipInstall/pip-21.2.3-py3-none-any/pip/_vendor/urllib3/contrib/_securetransport/bindings.py
cat "Users/jayst/AppData/Local/pypa/virtualenv/wheel/3.9/image/1/CopyPipInstall/pip-21.2.3-py3-none-any/pip/_vendor/urllib3/contrib/_securetransport/bindings.py"
v ou
ls &>/dev/null &
fdfind command
fd | wc &
which fdfind
ln -s $(which fd) ~/findy
ln -s $(which fd) ~/findy #! cool alias
which  findy
which python
which python3
pushd scripts
pushd .npm
pushd
ls &>/dev/null tee> ~/xx &
v ~/xx
fg 2
cd /all
fd -epy 
fd -epy -l
fd -epy -X ls -lhd --color=always
ls -lhd
fd -epy --list-details
fd --list-details
fd -X -l
fd -X stats
fd -X stats > a
fd -X stats 
fd -X stats  | less
fd -epy -x stat
fd -epy -x stat > kk &
fd -epy -x stat | rg 'File'
fd -epy -x stat | rg 'File' | wc
fd -epy -x stat | rg 'File' | v -
fd -epy -x stat | rg -i 'File.*all' | v -
fd -py
fd -e py
tldr find
fd -a -e py
fd -a -e py > pys &
fd -a -e py -x ls 
fd -a -e py -x head -n1
fd -a -e py -x head -n1 | v -
fd -a -e py -x stat
fd -a -e py -x stat | v -
fd -a -e py -x stat > /mnt/c/all/pss &
fd -a -e py | awk '{for (i=1;i<3;i++) {getline};\nprint NR,$0}'
v employee.txt
cat employee.txt |  awk '/manager/ {print}' employee.txt
cat employee.txt |  awk '{print NR,$0}'
fd -a -e py | awk '{print NR,$0}'
fd -a -e py -x stat 
v key
cat key | awk 'NR%2{printf "%s ",$0;next;}1'
fd -a -e py -x stat | awk 'NR%2{printf "%s ",$0;next;}1'
fd -a -e py -x stat | grep 'File'
fd -a -e py -x stat | grep 'File:Access'
fd -a -e py -x stat | grep 'File|Access'
fd -a -e py -x stat | grep 'Access'
fd -a -e py -x stat | grep 'Access.*\d'
fd -a -e py -x stat | grep 'Access.*\2'
vim -c ":% normal Jj" key
v -c ":% normal Jj" key
cat key
fd -a -e py -x stat | grep 'Access.*2'
fd -a -e py -x stat | awk 'Access.*2'xxxxx
fd -a -e py -x stat | awk 'Access.*2'xxxxx'
fd -a -e py -x stat | awk 'Access.*2'
fd -a -e py -x stat | awk '/Access.*2/'
awk 'BEGIN { printf "Sr No\vName\vSub\vMarks\n" }'
awk 'BEGIN { fd }'
awk 'BEGIN { fd . }'
fd -a -e py -x stat | grep -E "Access|File"
fd -a -e py -x stat | grep -E "Access.*2|File"
v /mnt/c/projects/git/realPython/materials/python-sqlite-sqlalchemy/project/examples/example_3/app/albums/routes.py
v /mnt/c/projects/git/pTodo/venv/Lib/site-packages/pip/_internal/operations/install/legacy.py
cd pTodo
cd venv
tree -ds
rm -rf 2021-dataclasses GO-Gin-REST-API
ls -l | awk '{for (i=1;i<3;i++) {getline};\nprint NR,$0}'
for a in $(fd - 1 -td); echo $a; done
for a in $(fd - 1 -td); do echo $a; done
for a in $(fd d- 1 -td); do echo $a; done
for a in $(fd -d 1 -td); do echo $a; done
fd -a -e py -x stat | grep -E "Access.*2|File" > pys
v pys
se 'v.*j'
v -c ":% normal Jj" pys
cd app333
cd projects/jamessteffes.github.io
rm -rf app333
alias rmdir
cd youtube
popd
rm -rf youtube
rm -rf node_modules
rm -rf derived
rm -rf mm
ls temp
rm proj.tar
tar cfv /mnt/c/temp/proj.tar projects
fd -H -I -e mp4
fd -H -I -e mp4 -x stat
fd -H -I -e mp4 -x stat | rg "File|Size"
time fd -epy
fd /user/bin
fd /usr/bin
stat time
time pwd
/usr/bin/time fd
time ping howtoforge.com
man ping
time ping -c 5 howtoforge.com
wget https://github.com/sharkdp/hyperfine/releases/download/v1.14.0/hyperfine_1.14.0_amd64.deb\nsudo dpkg -i hyperfine_1.14.0_amd64.deb
time fd
time fd > x
hyperfine fd
wi time
time -o ttt fd .
time -o ~/zzz fd /mnt/c
/usr/bin/time -o /home/time-output.txt ping howtoforge.com
/usr/bin/time -o /home/steff007/time-output.txt ping howtoforge.com
/usr/bin/time -o /home/steff007/time-output.txt ping -c 5 howtoforge.com
v time-output.txt
script s
cat s
script p
fd --changed-within=2m
fd --changed-within=5
fd --changed-within=8
fd -H -I --changed-within=8min
cd /users
cd Users/jayst/Downloads
cd AppData/Roaming
xxx npm
rm -rf npm
find AndroidStudioProjects
rm -rf AndroidStudioProjects
fd stree
sudo bash
fd . /mnt/c
hyperfine fd /mnt/c
hyperfine --show-output fd /mnt/c
se 'tmux'
ls -ahr
ls -lhr
ls -lhr | tail
--shell zsh 'for i in {1..10000}; do echo test; done'
shell zsh 'for i in {1..10000}; do echo test; done'
mkdir input
ll | rg '^l'
cd python3.10
p3 -m pip list
se 'pip.*lis'
docker run -ti ubuntu:latest bash
docker ps --format $FORMAT
docker ps -l
docker commit ea391c73e8c6 
docker tag b6ed5785687bf77dc5b34732b013c76a0369f96344fed4c201330241d9fc3c89 my-image
docker run -ti my-image
docker commit adoring_austin image2
docker run -ti image2
docker commit amazing_sammet image3
docker run -ti image3
docker commit sharp_mendel image4
docker run -ti image4
docker commit keen_lewin image5
docker run -ti image5
docker attach sharp_shtern
docker run --name example -d ubuntu bash -c "sleep 4; echo sleep"
docker logs example
docker run --name example -d ubuntu bash -c "sleep 4; echo sleepier"
docker run --name example2 -d ubuntu bash -c "sleep 4; echo sleepier"
docker logs example2
ptre
ptree
watch pstree
p3 pro.py
take maria
declare -f take | clip
fd act
source /bin/-activate
source activate
p3 -m pip install mariadb
p3 -m pip install mysqlient
p3 -m pip install mysqclient
pip install mysqlclient
pip3 install mysqlclient
sudo apt install -y python3-dev default-libmysqlclient-dev build-essential
p3 -m pip install mysqlclient
sudo apt-get install libmysqlclient-dev
sudo apt-get install python3-dev  # for python3.x installs
p3 -m pip install mysqlclient 2> er
v er
rm -rf maria
pip3 install pipenv
p3 -m pip install pipenv
pip install mysql-connector-python
se 'python'
se 'ipython'
se 'p.*env'
su py
ls -l home
sudo useradd py
cat /etc/passwd | grep py
sudo useradd -m py
cat /etc/passwd | sort
cat /etc/passwd | grep 'x:'
cat /etc/passwd | grep 'x:[0-5]'
cat /etc/passwd | grep 'x:[0-5]{1}'
cat /etc/passwd | grep 'x:[0-5]{1,}'
cat /etc/passwd | grep 'x:[5-9]'
cat /etc/passwd | rg nologin
cat /etc/passwd | rg nologin | sed 's/\d/xx'
cat /etc/passwd | rg nologin | sed 's/\d/xx/g'
cat /etc/passwd | rg nologin | sed 's/\d/xxxxx/g'
cat /etc/passwd | rg nologin | sed 's/nologin/xxxxx/g'
sudo useradd -r sysuser
cat /etc/passwd | v -
cat /etc/passwd | rg 'x:[2-9]
cat /etc/passwd | rg 'x:[2-9]'
cat /etc/passwd | rg 'x:^[2-9]'
cat /etc/passwd | rg 'x:[1-2]'
login py
sudo login py
se 'user'
sudeo userdel py
sudo userdel py
cat /etc/passwd | rg 'x:[1-2]' | sort
\tcat /etc/shadowsudo
sudo\tcat /etc/shadowsudo
stat -c %s 
stat -ch %s Schopenhauer.mp3
stat -c %s Schopenhauer.mp3
stat -c %s lazy
stat -c %s lazy/
fd -H | xargs l -l
fd -H | xargs ls -l
fd -H -tf | xargs ls -l
fd -H -tf | xargs stat
fd -H -tf 
stat Charlie\ Parker\ -\ The\ \ Levin_Wilson\ Controversy\ part\ 1..mp3
stat %s Charlie\ Parker\ -\ The\ \ Levin_Wilson\ Controversy\ part\ 1..mp3
stat -c %s Charlie\ Parker\ -\ The\ \ Levin_Wilson\ Controversy\ part\ 1..mp3
fd -H -tf -x stat -c %s
fd -H -tf -x stat -c %n %s
fd -H -tf -x stat -c %ns
fd -H -tf -x stat -c %n
du --apparent-size --block-size=1  "/etc/passwd"\nfileName="/etc/hosts"\nmfs=$(du --apparent-size --block-size=1  "$fileName" | awk '{ print $1}')\necho "$fileName size = ${mfs}"
md linux
md /mnt/c/you/linux
alias python3
mp4/bin/activate
source mp4/bin/activate
source m/mnt/c/all/bash/p4/bin/activate
source /mnt/c/all/bash/p4/bin/activate
fd -a activat
v fix_corrupt
se 'sd'
fd -h ac
fd -H ac
fd -H -d 1
hyperfine --shell zsh 'for i in {1..10000}; do echo test; done'
$SHELL
env | grep -v 'LS'
cat /etc/passwd | grep 'nol'
cat /etc/passwd | grep -v 'nol'
fd . | grep 'awk'
find . -iregex 'awk'
find . -regex 'awk'
find . -regex 'awk.*'
find . -regex '.*awk.*'
find . -regex '.*awk'
find . -regex '^L'
find . -regex '^L.*'
find . -name '^L.*'
find . -name '*.*'
find ./ -type f -regex '\.\/c*'
find ./ -type f -regex '\.\/C*'
find ./ -type f -regex '\.\/L*'
find ./ -type f -regex '\.L*'
find ./ -type f -regex '\.*L'
find ./ -type f -regex '.*L'
find ./ -type f 
find ./ -type f -regex '.*'
find ./ -type f -regex '.*x'
find ./ -type f -regex '.*x.*'
a=find ./ -type f -regex '.*x.*'
a=(find ./ -type f -regex '.*x.*')
a=$(find ./ -type f -regex '.*x.*')
a=$(find ./ -type f -regex '.*awk.*')
echo $a | less
ls "*.*"
fd d 1
fd -d 1 *.mp4
fd -d 1 '*.mp4'
fd -d 1 'mp4'
fd 'mp4'
fd 'mp4' |  sed -e 's/ /_/g'`; done
ls | sed 's/sys/\.bat/g'
ls | sed 's/ /\.bat/g'
ls | sed 's/ /_/g'
ls | sed 's/'Linux /_/g'
ls | sed 's/\'Linux /_/g'
ls | sed 's/\\'Linux /_/g'
ls | sed 's/\''Linux /_/g'
ls | sed 's/\''Linux.*- /_/g'
ls | sed 's/\''Linux.*- //g'
fd 'mp4' | sed 's/\''Linux.*- //g'
fd 'mp4' | echo $0
fd 'mp4' | -x echo {}
fd 'mp4' -x echo {}
fd 'mp4' | xargs echo {} | sed 's/\''Linux.*- //g'
curl "https://raw.githubusercontent.com/wither7007/all/main/.bash_history" > google_hist
v google_hist
fd -H -esh | xargs -I {} sh -c 'stat {}'
fd -H -d 1 -esh | xargs -I {} sh -c 'stat {}'
stat --format='%n --- %x' $(ls)
fd -H -d 1 -esh | xargs -I {} sh -c 'echo '========';stat {}'
fd -H -d 1 -emp4 | xargs -I {} sh -c 'echo '========';stat {}'
fd -H -d 1 -emp4 | xargs -I {} sh -c 'echo '========' {}'
fd -H -tf -d 1 -emp4 | xargs -I {} sh -c 'echo '========' {}'
fd 'under'
fd 'under' -x echo {}
fd 'under' -x echo cp {} x
fd -H -tf -d 1 -emp4 'wget' | xargs -I {} sh -c 'echo ' {}'
fd -H -tf -d 1 -emp4 'wget' | xargs -I {} sh -c 'echo  {}'
fd -H -tf -d 1 -emp4 'tar' | xargs -I {} sh -c 'echo  {}'
ls | cat
for f in *; do\ndone
fd 'cros'
for f in *; do echo $f; done
find . -type f -print0 | while IFS= read -r -d '' filename; do\necho $IFS  ...\ndone
ls | while read filename; do\noned...
ls | while read filename; do\necho change\ndone
ls | while read filename; do;echo change;done
# Good!\nfor f in *; do\ndone
# Good!;for f in *; do;    [[ -e $f ]] || continue;  echo $f;done
for f in *; do;    [[ -e $f ]] || continue;  echo $f;done
wc -c b.json
for a in $(ls); 
for a in $(ls); do echo $a; done;
shopt -s nullglob
touch ' ( noth ) '
for i in *'('*')'*\ndone
ls -d -- *\(*\)* | sed 's/\(.*\) (.*)\(.*\)/mv -- "&" "\1\2"/'
for file in ./*; do mv "$file" "${file/ (*)/}"; done
7za a -t7z files.7z *.*
cp files.7z /mnt/c/all
ls -S
ls -Sl
ls -Slr
cat ou
rm hyperfine_1.14.0_amd64.deb ou files.7z
ls -Slra #!sort by size reverse
rm ex.mp4
rename
se 'update'
sudo apt install rename
rename employee.txt rname
wi rename
wc -c b
wc -c p
stat p
cat p
touch x.pdf
take non
touch x.pdf a.txt
rename -v 's/.txt/.pdf/' *.txt
rename '' '_' *
rename 'a' '_' *
find * -type f -name "* *" 
find * -type f -name "*.*" -exec rename "s/\s/_/g" {} \;
find * -type f -name "*.*" 
mv 'jim is' jim is.txt
mv 'jim is' 'jim is.txt'
mv 'jim is.txt' `this is`
mv 'jim is.txt' "this is".txt
find * -type f -name "*"
fd ','
fd -H '.*,'
fd -H '.*,.*'
fd -H '-'
fd -H '('
find * -type f -name "*" -exec rename "s/\(/_/g" {} \;
fd -H '\('
fd -H '\)'
fd -H '\,'
fd -H ','
fd -H 'e,'
fd -H 'Docker'
find * -type f -name "*" -exec rename "s/,/_/g" {} \;
fd -H -I 'Docker'
fd 'mp4' -x echo {} | sed 's/\''Linux.*- //g'
fd 'mp4' -x echo {}; sed 's/\''Linux.*- //g'
se 'fd.*bash'
se 'xa.*bash'
se 'fin.*bash'
fd '\('
fd '\(.*'
fd '\(.*no'
fd '\(.*no' 
ls *.pdf
se '7z'
7z t archive.zip *.* -r
7z a archive.7z .
7z.exe a -t7z archive.7z . -xr
7z a -t7z archive.7z . -xr
7z a -t7z archive.7z -xr.
7z a -tzip archive.zip *.txt -x
manv 7z
fd -H -d 1 -td
v ex.txt
tar --exclude='file1.txt' --exclude='.cache' -zcvf backup.tar.gz .
tar --exclude='file1.txt' --exclude={'.cache', '.rustup'} -zcvf backup.tar.gz .
tar --exclude={'.cache', '.rustup'} -zcvf backup.tar.gz .
tar --exclude='file1.txt' --exclude='.cache' --exclude='.rustup' -zcvf backup.tar.gz .
tar --exclude='.cache' --exclude='.rustup' -zcvf backup.tar.gz .
tar --exclude='.cache' --exclude='.rustup' --exclude '.npm' -zcvf backup.tar.gz .
tar --exclude='.cache' --exclude='.rustup' --exclude '.npm' --exclude '.config' -zcvf backup.tar.gz .
tar --exclude='.cache' --exclude='.rustup' --exclude '.npm' --exclude '.config' --exclude '.local' -zcvf backup.tar.gz .
npm list
npm list -g
find * -type f -name "*" -exec rename "s/\s/_/g" {} \;
find * -type f -name "*" -exec rename "s/'/_/g" {} \;
find * -type f -name "*" -exec rename "s/'//g" {} \;
find * -type f -name "*" -exec rename "s/\'//g" {} \;
fd -I '''
fd -I "'"
fd -I 
fd -I 'bg'
cp Linux_Crash_Course_-_Data_Streams_\(stdin,_stdout_\&_stderr\).mp4 x.mp4
sudo -v ; curl https://rclone.org/install.sh | sudo bash
rclone config
fd -HI 'hi'
fd -d 1 -HI 'history'
fd -d 1 -HI '\.git'
take dots
md you/bash
ls you/
cd all/bas
cd all/bash
fd -e mp4
fd -I -H -emp4
fd -I -H -emp4 -x mv /mnt/c/all/bash/
ln -l .bash_history /mnt/c/all/bhist
ln  .bash_history /mnt/c/all/bhist
ln  .bash_history /mnt/c/all/
ln  .bash_history /mnt/c/all
cp .bash_history /mnt/c/all/whis.txt
se 'env'
fd -I -H -emp4 
fd -I -H -emp4 | less
se 'fd.*rename'
se 'name'
take te
se 'gh'
gh repo create words --public
echo "# words" >> README.md\ngit init\ngit add README.md\ngit commit -m "first commit"\ngit branch -M main\ngit remote add origin git@github.com:wither7007/words.git\ngit push -u origin main
fd -I -H -ejs
fd -I -H -ejs | xargs echo
fd -I -H -ejs | xargs echo {}
printf "%s\n" *lt
printf "%s\n" *
fd -I -H -ejs | xargs -n1 echo
fd -d 1 -I -H -ejs | xargs -n1 echo
fd -d 2 -I -H -ejs | xargs -n1 echo
fd -d 2 -I -H -ejs | rg 'a.*' |xargs -n1 echo
fd -d 2 -I -H -ejs | rg 'goog.*' |xargs -n1 echo
v pup/search.js
fd -d 2 -I -H -ejs | rg 'pup.*' |xargs -n1 echo
fd -d 2 -I -H -ejs | rg 'sheet.*' |xargs -n1 echo
fd -d 3 -I -H -ejs | rg 'sheet.*' |xargs -n1 echo
fd -d 3 -I -H -ets | rg 'sheet.*' |xargs -n1 echo
v esbuild/src/sheet.js
fd -ets -x rg 'sheet'
fd -ets -x rg 'sheet' | v -
curl  "https://sheets.googleapis.com/v4/spreadsheets/1AeXz0cVvC6iY6wDqsXkXYwowRjfJyLoWGltHJEUCD4Y/values/data?alt=json&key=AIzaSyCZ3y8Es42zvNGON7ezA6q4dxe8RNcyQIs"
curl  "https://sheets.googleapis.com/v4/spreadsheets/1AeXz0cVvC6iY6wDqsXkXYwowRjfJyLoWGltHJEUCD4Y/values/data?alt=json&key=AIzaSyCZ3y8Es42zvNGON7ezA6q4dxe8RNcyQIs" #! sheets api
curl  "https://sheets.googleapis.com/v4/spreadsheets/1AeXz0cVvC6iY6wDqsXkXYwowRjfJyLoWGltHJEUCD4Y/physics/data?alt=json&key=AIzaSyCZ3y8Es42zvNGON7ezA6q4dxe8RNcyQIs" #! sheets api
curl  "https://sheets.googleapis.com/v4/spreadsheets/1AeXz0cVvC6iY6wDqsXkXYwowRjfJyLoWGltHJEUCD4Y/values/physics?alt=json&key=AIzaSyCZ3y8Es42zvNGON7ezA6q4dxe8RNcyQIs" #! sheets api
sudo apt install -y jq
jq -h
curl  "https://sheets.googleapis.com/v4/spreadsheets/1AeXz0cVvC6iY6wDqsXkXYwowRjfJyLoWGltHJEUCD4Y/values/physics?alt=json&key=AIzaSyCZ3y8Es42zvNGON7ezA6q4dxe8RNcyQIs" >j.json #! sheets api
jq --version
alias curl='curl -L -s'
jq '.values' j.json
echo $PATH | perl -pe 's/:/\n/g' #! split path
cat j.json | jq '.'
for a in $(cat plays); echo $a; done
for a in $(cat plays); do echo $a; done
cat plays | while IFS= read -r i; do echo -n "$i" 
cat plays | while IFS= read -r i; do echo -n "$i" | echo; done
cat plays | while IFS= read -r i; do echo -n "$i" | wc -c; done
cat plays | while IFS= read -r i; do echo -n "$i" |  done
cat plays | while IFS= read -r i; do echo -n "$i";  done
man mapfile
printf "Line 1\nLine 2\nLine 3\nLine 4\nLine 5" | mapfile
fd -d 1 'pl'
fd 'sql'
fd -d 2 'sql'
fd -d 2 'ip'
fd -d 2 'sq'
cp ip
cp ipysql.py ~
mv ipysql.py pys
/usr/bin/python3.10 ipysql.py
wi neovim
/usr/libexec/neovim
wi v
wi nvim
/usr/bin/nvim
v ~/pys/ipysql.py
chmod +x ipy.sh
/usr/bin/python3.10 ~/pys/ipysql.py
cp Misterioso.mp3 ~/non
cd con
stat Misterioso.mp3
stat x.pdf
fd --changed-within=8min
fd --changed-within=8min | xargs stat
fd --changed-within=10min | xargs stat
ls M*
ls M?
ls [a-c]
ls [a-c]*
ls [a-z]*
ls [a|t]*
ls [a-t]*
ls [aliasz]*
lt *.json
hyperfine -w 3 'sed -E "s/\"/\'/g" *.json
hyperfine -w 3 'sed -E "s/\"/\'/g" *.json'
hyperfine -w 3 'sed -E "s/\"/\'/g" *.json >/dev/null' 'sd "\"" "\'" *.json >/dev/null' --export-markdown out.md\n: 1661843257:0;hyperfine ls -lhr | tail
hyperfine 'ls -lhr | tail'
hyperfine 'ls -lhr | tail' --export-markdown out.md
cat out.md
cat out.md | clip
find ~/.cache
hyperfine 'find /'
cat bash_benchmark_script \n#!/bin/bash\nfor i in $(seq 1 1000);\ndo bash -c ":" ;\ndone
se 'cat.*>'
cat > a
time bash a
hyperfine 'bash a'
bash -c ":"
bash -c "echo jim"
bash -c "echo jim; echo steffes"
bash -c "echo jim; echo steffes; find ."
time 'bash -c "echo jim; echo steffes; find ."'
hpyerfine bash -c "echo jim; echo steffes; find ."
hyperfine bash -c "echo jim; echo steffes; find ."
time bash -c "echo jim; echo steffes; find ."
fd . --changed-within=5mins
fd . --changed-within=5months
fd . --changed-within=1months
exiftool -j -Description -FileModifyDate Build\ a\ custom\ Linux\ Desktop\ in\ Docker\!.mp4
se '!# size'
se '!#'
se '#!.*si'
fd "_-"
cd te
fd ip
which ipysql
which ipysql.py
se 'backup'
se 'backup' | v -
tar --exclude='.cache' --exclude='.rustup' --exclude '.npm' --exclude '.config' --exclude '.local' --exclude 'db' --exclude '.oh-my-zsh'  -zcvf backup.tar.gz .
tar --exclude='.cache' --exclude='.tldr' --exclude='.rustup' --exclude '.npm' --exclude '.config' --exclude '.local' --exclude 'db' --exclude '.oh-my-zsh'  -zcvf backup.tar.gz .
fd 'histo'
fd -HI 'history'
fd -HI 'z.*history'
alias history
cd .cache
du -h | sort
du -h | rg '\d\dM'
du -h | rg '\d\dM' | v -
rm -rf bazel
rm -rf bazel_binaries
fd 'cach.*his'
fd -H -I 'cach.*his'
fd -H -I 'histor'
fd -H -I 'c.*histor'
fd -H -I 'z.*histor'
fd -H -I -a 'z.*histor'
fd -H -I -a | rg 'z.*history'
fd -H -I -a | rg 'z.*history$'
cd findy
findy
rm findy
fd mp.*
fd 'mp.*'
cd you/linux
cp Linux_Crash_Course_-_Bash_Aliases.mp4 ~/
p3 ffm.py Linux_Crash_Course_-_Bash_Aliases.mp4| v -
p3 ffm.py Misterioso.mp3| v -
p3 ffm.py Misterioso.mp3 | v -
exiftool -j Misterioso.mp3
exiftool -j Misterioso.mp3 | v -
exiftool -j Misterioso.mp3 | jq '.'
exiftool -j Misterioso.mp3 | jq '.' |v -
p3 ffm.py Linux_Crash_Course_-_Bash_Aliases.mp4| jq '.'
p3 ffm.py Linux_Crash_Course_-_Bash_Aliases.mp4 | v -
jq '.values' mp4.json
p3 ffm.py Linux_Crash_Course_-_Bash_Aliases.mp4 | jq '.'
p3 ffm.py Linux_Crash_Course_-_Bash_Aliases.mp4 > mp4.json
v mp4.json
bind -p
while read line; do\necho $line\ndone >plays
v plays
rm plays
while read line; do\necho $line\ndone > ffm.py
while read line; do\necho $line\ndone < ffm.py
cat ffm.py
v backup.tar.gz
md tar
tar -xf backup.tar.gz ~/tar/
tar -xf backup.tar.gz -C ~/tar/
v ffm.py
cat plays
rm ffm.py
tar -xf backup.tar.gz ffm.py
tar -tf backup.tar.gz
\twi gzip
wi hyperfine
sh time.sh
seq -s "jim" 10
seq -s "jim " 10
seq -s " jim " 10
seq -s " jim " 1000
fc -e 3
fc -e vi 1 5
alias hf='hyperfine'
hf 'for x i in `seq 3`; do echo $x; done'
for x i in `seq 3`; do echo $x; done
hf 'for x i in `seq 3`; do echo $x; done' --s
hf --s 'for x i in `seq 3`; do echo $x; done'
hf ls
fd -th
fd -d 2 -tf
md sh
cd projects/
cd sh
sc r
source r.sh
day=$(date +"%a")
echo day
day=$(date +"%a%m")
day=$(date +"%a %m")
day=$(date +"%a %m/%d")
day=$(date +"%hr %a %m/%d")
day=$(date +"%h %a %m/%d")
day=$(date +"%t %a %m/%d")
echo $day
date +"%D"
n=$(date +"%D")
echo n
NOW=$(date +"%m-%d-%Y")
echo $NOW
printf "%s\n" $NOW
printf "%s\n\N" $NOW
printf "%s\n\n" $NOW
for x i in `seq 1 3`; do echo $x; done
for x i in `seq 1 30`; do echo $x; done
for x i in `seq 30`; do echo $x; done
fd -d 1 'z'
se 'tar.*z'
fd -d 1 ff
alias f1='fd -d 1 '
f1 'py'
tar -tf backup.tar.gz ./ffm.py
f1 'ff'
tar -tf backup.tar.gz | rg 'py$'
tar -tf backup.tar.gz ./proc.py
f1 'proc'
v proc.py
v pa proc.py
fd -d 1 'his'
strings -eS ~/.cache/zsh/history > ~/.cache/zsh/history.bak
fd -H -I --changed-within=10min   
fd -H -I --changed-within=10min   | stat
fd -H -I --changed-within=10min  | xargs stat
ag canbus
ag python
rm -rf db
stat -f DumpStack.log
stat -fh DumpStack.log
stat -fH DumpStack.log
stat -f /
stat --print='%n\n' /etc/passwd
stat --printf='%n\n%a\n%b\n' /
stat --printf='%U\n%G\n%C\n%z\n' /
stat --printf='%U\n%G\n%C\n%z\n' /mnt/c/
stat -f /home
stat /home
stat --printf='%x' /mnt/c/
stat --printf='%x\n' /mnt/c/
stat --printf='%x\n' duh2.txt
fd 'duh.txt'
stat --printf='%y\n' duh2.txt
stat --printf='%z\n' duh2.txt
lt duh.txt
stat --printf='%2\n' duh2.txt
stat --printf='%w\n' duh2.txt
stat --printf='%w\n%y\n' duh2.txt
stat --printf='%w\n access %y\n' duh2.txt
v duh2
lt duh2.txt
stat --printf='access %y\n' duh2.txt
stat --printf='access %y\n' dd.txt
cd AppData/Local
rm rf Yarn
rm -rf Yarn
docker rm $(docker ps -a -q) 
cd Users/jayst/
duh > dd.txt &
lt git.sh
k=(1 2 3)
${k[1]}
fc 2933
fc 2929
echo $k[1]
fc 2930
echo ${k[1]}
alias fcl="fc -l"
fc 2924
stat git.sh
fc 2910
fd 'yarn'
winsh
stat phelp
stat --printf='access %y\n' *
stat --printf='access %y\n' * | sort
stat --printf='access %y name %n\n' * | sort
stat --printf='access %y name %n\n' * | sort | v -
20:25:34.247368500 -0500\n17:48:21.886724700 -0500\n17:48:21.887727700 -0500\n17:48:21.898247900 -0500\n17:48:21.899685600 -0500\n17:48:21.946562900 -0500\n17:48:21.946562900 -0500\n17:48:21.946562900 -0500\n17:48:21.946562900 -0500\n17:48:21.946562900 -0500\n17:48:21.946562900 -0500\n17:48:21.946562900 -0500\n17:48:21.946562900 -0500\n17:48:21.946562900 -0500\n17:48:21.946562900 -0500\n17:48:21.962187300 -0500\n17:48:23.382622800 -0500\n17:50:46.474657800 -0500\n17:52:08.176372300 -0500\n23:35:53.161752200 -0500\n19:53:01.901248300 -0500\n12:34:32.948387200 -0500\n16:27:24.771689100 -0500\n22:52:58.098610600 -0500\n20:00:01.914456300 -0500\n22:44:09.193459000 -0500\n15:38:05.040856200 -0500\n15:51:48.183654300 -0500\n23:56:44.159188200 -0500\n16:04:55.925133900 -0500\n08:47:03.464118200 -0500\n17:36:57.069281700 -0500\n06:51:08.800383900 -0500\n19:43:13.701630500 -0500\n10:45:00.819786900 -0500\n08:11:12.529622800 -0500\n11:49:35.634385900 -0600\n16:44:47.405421800 -0600\n17:08:32.377324100 -0600\n23:17:52.321060500 -0600\n09:31:17.113861800 -0600\n22:15:25.280495700 -0600\n02:45:06.303052500 -0600\n14:03:05.048558200 -0600\n23:37:00.311601100 -0500\n15:11:41.203458900 -0500\n03:31:51.474237800 -0500\n13:24:07.467083600 -0500\n19:31:58.748263700 -0500\n01:00:55.257433900 -0500\n21:03:25.314174600 -0500\n21:08:01.078353300 -0500\n22:26:53.427449400 -0500\n11:34:09.451474300 -0500\n15:27:37.461481500 -0500\n15:28:19.609332300 -0500\n10:29:54.229624400 -0500\n18:53:50.372032600 -0500\n23:10:08.237507400 -0500\n23:10:08.253124400 -0500\n21:03:41.408234000 -0500\n11:52:33.370989500 -0500\n12:39:16.582676200 -0500\n12:39:16.582676200 -0500\n12:39:16.598309100 -0500\n22:28:34.816515400 -0500\n00:02:34.156023600 -0500\n11:17:28.173540300 -0500
11:03:28.354167600 -0500
11:46:33.054292600 -0500
13:48:12.292595800 -0500
13:48:41.746130000 -0500
fd -H -I --changed-before=1mnth
manv fd
fd -H -I --change-older-than 2months
fd -d 1 -H -I --change-older-than 2months | xargs echo
fd -d 1 -H -I --change-older-than 2months | xargs echo {}
fd -d 1 -H -I --change-older-than 2months  
fd -d 1 -H -I --change-older-than 2months  | xargs -n1 echo
fd -d 1 -H -I --change-older-than 2months  | xargs -n1 stat
fd -d 1 -H -I --change-older-than 2months  | xargs -n1 ls -lhrt | v -
se 'fd.*zip'
se 'find.*zip'
se 'find.*'
fd -d 1 -H -I --change-older-than 2months
v ntuser.dat.log1
fd -d 1 -H -I --change-older-than 2months | ls
fd -d 1 -H -I --change-older-than 2months | column
fd -d 1 -H -I --change-newer-than 2months | column
fd -d 2 -H -I --change-older-than 2months | column
fd -d 2 -H -I --change-older-than 2months | v -
fd -d 2 -H -I --change-older-than 1months | v -
fd -d 2 -H -I  | v -
fd -H -I  | v -
heading() {\n: 1662159571:0;heading
heading "No pattern"
fd duh
fd1 duh
cat duh
v duh.txt
alias rg 'duh'
fd -d 1 epy
fd -d 2 -epy
v pys/ipysql.py
./ipy.sh
export PATH="$HOME/pys:$PATH"
du --all --human-readable
du --all --human-readable \\n--one-file-system \\n--max-depth=1 /var
du --all --human-readable \\n--one-file-system \\n--max-depth=1 2>/dev/null /var
du --all --human-readable \\n--one-file-system \\n--max-depth=1 2>/dev/null /
du --all --human-readable \\n--one-file-system \\n--max-depth=1 2>/dev/null / | sort -k1 -rh
du --all --human-readable \\n--one-file-system \\n--max-depth=1 2>/dev/null / | sort -k1 -rh | rg -v "^0"
dufun .
dufun /mnt/c/Users/jayst
dufun ~/script
dufun ~/script/
ls ~/scripts
dufun ~/scripts/
dufun()\ndu --all --human-readable \\n--one-file-system \\n--max-depth=1 2>/dev/null $1 | sort -k1 -rh | rg -v "^0" #! cool sort https://www.redhat.com/sysadmin/sort-du-output\n: 1662180237:0;dufun ~
dufun ~ | v -
declare -f dufun
du --all --human-readable \\n--one-file-system \\n--max-depth=0 . 2> /dev/null | sort -k1 -rh | rg -v "^0"
duh |  sort -k1 -rh | rg '^0'
duh |  sort -k1 -rh | rg -v '^0'
duh |  sort -k1 -rh | rg -v '^0' | v -
alias duh='du -h --max-depth=1'\nalias ddh="duh |  sort -k1 -rh | rg -v '^0' | v -"
ddh 2>/dev/null &
killall5 -9
fd -d 1 -H -I --change-older-than 2months  | xargs -n1 ls -lhrt
du -h
echo -e "Tecmint \bis \ba \bcommunity \bof \bLinux \bNerds"
echo  "Tecmint \bis \ba \bcommunity \bof \bLinux \bNerds"
echo "Tecmint \nis \na \ncommunity \nof \nLinux \nNerds"
bash -c echo "Tecmint \nis \na \ncommunity \nof \nLinux \nNerds"
echo *
echo *.sh
echo "file are $(ls)"
echo "file are $(ls)" | less
tput cols
tput columns
tput lines
printf "\t%s\n\n" $NOW
printf "\t%s\n\n" $HOST
printf "%113s"
printf "%113s" "x"
printf "%113s" "x" | tr " 
printf "%113s" "x" | tr " " "-"
VAR="hello"\necho '$VAR' => $ VAR\necho "$VAR" => hello
echo '$VAR'
echo "$VAR"
printf $VAR
manv printf
manv printf\n
printf jim\n
printf here are some words
se 'zip'
fd -H -I | wc
rm -rf newhome
rm -rf greetings
rm -rf link phelp position
rm -rf IdeaProjects PycharmProjects
ls -d */
lcd () { \n: 1662227708:0;lcd () { \n: 1662227782:0;lcd () { \n: 1662227785:0;lcd
test -n "$ZSH_VERSION" && echo $funcstack[1]; test -n "$BASH_VERSION" && echo ${FUNCNAME[0]}"
file="/etc/passwd"; if [ -e $file ]; then echo "whew"; else echo "uh-oh"; fi
file="/etc/passwds"; if [ -e $file ]; then echo "whew"; else echo "uh-oh"; fi
if test false; then \n: 1662229404:0;test false
test true
test -e git.sh; echo $?
test -e ~/git.sh; echo $?
test -e ~/git.shs; echo $?
if test -d /home; then echo "/home is a directory"; fi
if test -d /homes; then echo "/home is a directory"; fi
if test -d /homes; then echo "/home is a directory"; else echo "no"; fi
if test -d /home; then echo "/home is a directory"; else echo "no"; fi
if test -e /home; then echo "/home is a directory"; else echo "no"; fi
if test -e /homes; then echo "/home is a directory"; else echo "no"; fi
se 'Path'
fd -H -I 'z.*'
fd -d 2 -H -I 'z.*'
fd -d 2 -esh
fd -d 1 fun
p3 ipysql.py
cd bb
rm -rf bb
fd -ejpg
fd -ejpg | xargs -n1 ls -lhrt
fd -ejpg | xargs -n1 ls echo
fd -ejpg  
take junk
for a in [\n]; do echo $a; done
for a in (1,3,3); do echo $a; done
a = [\n: 1662260050:0;myArray=("cat" "dog" "mouse" "frog)
n=("We is","also is","have is","another is","alternative is")
echo $n[2]
for a in ${n[@]}; do echo $a; done
for a in ${n[@]}; do printf $a; done
for a in ${n[@]}; do printf\n $a; done
for a in ${n[@]}; do printf "$a\n"; done
for a in ${n[@]}; do printf $a\n; done
myArray=("cat" "dog" "mouse" "frog")
myArray[1]
for str in ${myArray[@]}; do\ndone
echo $myArray[1]
n=("We is" "also is" "have is" "another is" "alternative is")
for str in $n; do echo $str; done
for F in `find -type f`; do\ndone
n=("We is" "also is" "have is\nbreak" "another is" "alternative is")
find -type f | while read F; do\ndone
chmod +x work_on_file.sh
./work_on_file.sh 'have is'
find -type f -exec ./work_on_file.sh {} \;
find -type f -print0
find -type f -printf
fd 'have'
fd 'have' -exec ./work_on_file.sh {} \;
v work_on_file.sh
fd 'is' -exec ./work_on_file.sh {} \;
n=(American professional baseball pitcher for the Minnesota Twins of Major League Baseball (MLB). He made his MLB debut in 2017 with the Cincinnati Reds.)
for str in $n; do touch $str; done
v e.sh
chmod +x e.sh
./e.sh x
`ls`
$`ls`
$"ls"
a =$(ls)
se '$'
printf "%s\n\n" "${n[@]}"
p = $( ls )
p =3
p=$( ls )
echo $p
for a in $P; do rm $a; done
for a in $P; do echo $a; done
for a in $p; do echo $a; done
declare -a mahabharata
mahabharata[0]="Krishna"\nmahabharata[1]="Yudhishthira"\nmahabharata[2]="Bheema"\nmahabharata[3]="Arjuna"\nmahabharata[4]="Draupadi"\nmahabharata[5]="Duryodhana"
mahabharata[1]="Yudhishthira"
mahabharata[2]="Bheema"\nmahabharata[3]="Arjuna"\nmahabharata[4]="Draupadi"\nmahabharata[5]="Duryodhana"
echo $mahabharata
chmod +x she.sh
source she.sh
cat she.sh
echo ${ZSH_VERSION}
foo=2
[ -n "$foo" ] && echo "foo is not null"
man z
man if
man &&
if [ -n $string1 ]    # string1 has not been declared or initialized.\nthen\nelse  \nfi                    # Wrong result.\n# Shows $
echo $string1
ech [ -n $string1 ]
echo [ -n $string1 ]
echo `if [ -n $string1 ]`
file e.sh
fd 'have' -exec file {} \;
which 2017
which she.sh
fd  -exec file {} \;
ps -f
ps -x
ps -e
ps -ef
cat /etc/passwd | sed '1d' |more
cat /etc/passwd | sed '3d' |more
cat /etc/passwd | sed '8d'
cat /etc/passwd | sed '28d'
cat /etc/passwd | sed '1, 5d' |more
cat /etc/passwd | sed '1, 25d' |more
cat /etc/passwd | sed '3, 25d' |more
cat /etc/passwd | sed '3, 125d' |more
cat /etc/passwd | sed '3, 225d' |more
cat /etc/passwd | sed '1, 225d' |more
./she.sh
./she.sh 2 3
printf "%s\n" "${n[@]}"
echo $!
[ -b she.sh ] is false.
[ -b she.sh ]  
if [ -b she.sh ]  \necho 'x'\ndone
if [ -b she.sh ]  \necho 'x'\n: 1662268008:0;if 1=1\nthen echo one\n: 1662268064:0;if [ -b she.sh ]  \necho "she"\n: 1662268096:0;if [ -b she.sh ]  \nthen echo she\n: 1662268135:0;if [ -c she.sh ]  \nthen echo she\nfi
if [ -c she.sh ]  then echo she\n: 1662268215:0;if [ -c she.sh ]\nthen echo "she"\n: 1662268301:0;-c e.sh
echo [ -b she.sh ]  
source b.sh
expr ss64 : ss6
expr abc : 'a\(.\)c'
ls -Slra
wc -l she.sh
wc -c she.sh
wc  she.sh
read m
echo $mjim
echo "$m jim"
echo "rm $m jim"
type history
type omz_history
read -a m
bash -c "read -a m\nthis is\n: 1662309464:0;echo $00
echo ?
k=`date`
set this is
IFS=:
a=$PATH
set $a
echo $a[2]
md /mnt/c/you/linux2
man dd
file *
ls *.py
ls -l *.py
ls -lh *.py
ls -lhrt *.py
ls -lht *.py
if ls; echo yes; fi
if 2=2; echo yes; fi
if 2=2; echo yes; fi;
if 2=2; do echo yes; fi;
2=2 && echo yes
2=2 && echo yes || echo no
ls && echo yes 
lsq && echo yes 
2 -eq 2
2=3 && echo yes || echo no
if 2=2; then echo yes; fi;
if 2=3; then echo yes; fi;
if 2=3; then echo yes; else echo no;fi;
if [2=3]; then echo yes; else echo no;fi;
if [ 2=3 ]; then echo yes; else echo no;fi;
if [ 2 -eq 3 ]; then echo yes; else echo no;fi;
if [ 2 == 2 ]; then echo yes; else echo no;fi;
echo $$$$
lsq 2>/dev/null
lsq 2>/dev/null; if [ $? -eq 0 ]; then echo good; else echo bad; fi
ls 2>/dev/null; if [ $? -eq 0 ]; then echo good; else echo bad; fi
lst 2>/dev/null; if [ $? -eq 0 ]; then echo good; else echo bad; fi
ltt && echo no
ltt 2>/dev/null && echo no
ls>ls 2>/dev/null && echo no
ltt>ls 2>/dev/null && echo no
cat ls
ls -l | sed 's/d/xxxxxxxxxxxxx/g'
ls -l | sed 's/Aug/August/g'
ls | sed 's/Aug/August/g'
ls -l | sed 's/Aug August g'
find /etc -type f > etc
find /etc -type f 2>/dev/null > etc
se 's/a/xxxxx/' etc
sed 's/a/xxxxx/' etc
sed 's.a.xxxxx.' etc
sed 's/[a-z]/xxxxx/' etc
sed 's/[a-z]/xxxxx/g' etc
sed 's/[a-z]/xxxxx/g' `ls /ect`
sed 's/[a-z]/xxxxx/g' $(ls /etc)
sed 's/[a-z]/xxxxx/g' $(ls /etc 2>/dev/null)
sed 's/[a-z]/xxxxx/g' $(ls)
sed 's/[a-z]/xxxxx/g' $(find type=f)
sed 's/[a-z]/xxxxx/g' $(find -type f)
find -type f
cd linux2
lt | wc
fd '"'
fd "\'"
fd "Shel.*\-"
fd "Shel.*\-" | sed -i 's/shell//g'
fd "Shel.*\-"  
fd "Shel.*\-" | sed 's/shell//g'
fd "Shel.*\-" | sed 's/Shell//g'
fd -i 'sleep'
fd "Shel.*\-" | sed 's/Shell.*\-\s//g' > files
se 'exec
fd "Shel.*\-" -exec echo {}
fd "Shel.*\-" | -exec echo sed 's/Shell.*\-\s//g' > files
fd "Shel.*\-"  -exec echo sed 's/Shell.*\-\s//g' > files
fd "Shel.*\-"  -exec echo sed 's/Shell.*\-\s//g' 
fd "Shel.*\-" | -exec echo sed -p 's/Shell.*\-\s//g
fd "Shel.*\-"  -exec echo sed -p 's/Shell.*\-\s//g' 
fd "Shel.*\-"  -exec  sed -p 's/Shell.*\-\s//g' 
fd "Shel.*\-"  -exec sed 's/Shell.*\-\s//g' 
fd "Shel.*\-" | -exec echo sed 's/Shell.*\-\s//g'
fd "Shel.*\-"  -exec echo sed 's/Shell.*\-\s//g'
fd "Shel.*\-"  -exec sed 's/Shell.*\-\s//g'
take t
rm files
fd "Shel.*\-" | sed 's/Shell.*\-//g'
fd "Shel.*\-" | sed 's/Shell.*\-//g' >files
rm t/files
v files
fd "Shel.*"
fd "Shel.*" > files
mv files t
cd t
cat files
which ipy.sh
v ipy.sh
fd -a 'l'
fd "Shel.*\-" | sed 's/Shell.*\-\s//g'
find * -type f -name "* *" -exec rename "s/\s/_/g" {} \;
find * -type f -name "*" -exec rename "s/Shell.*\-\s//g" {} \;
fd "mp4" -exec echo {} \;
fd "mp4" -exec echo {}  
fd "mp4" -exec rename "s/\s/_/g" {} \;
fd -d 1 -x stat --printf='access %y name %n\n' * | sort | v -
fd -d 1 |
fd -d 1 | xargs ls 
find * -type f -name "*" -exec rename "s/\''//g" {} \;
find * -type f -name "*" -exec rename "s/,//g" {} \;
fd -d 1 "'" -exec rename "s/\'//g" {} \;
fd -d 1 "'" -exec rename "s/\&//g" {} \;
fd -d 1 "'" -exec rename "s/&//g" {} \;
fd -d 1 "&" -exec rename "s/&//g" {} \;
fd -d 1 "'"
fd -d 1 "#"
fd -d 1 "__" -exec rename "s/__/_/g" {} \;
fd -d 1 "__"
apt install -y banner
sudo apt install -y banner
banner hello
ls; cal && echo sucess
lst; cal && echo sucess
lst && echo sucess
lst || echo sucess
lst && echo sucess || echo fail
ls && echo sucess || echo fail
ls 2>/dev/null && echo sucess || echo fail
ls 2>/dev/null >f && echo sucess || echo fail
ls1 2>/dev/null >f && echo sucess || echo fail
3 \* 4
expr 3 \* 4
echo `ll`
echo `ls`
a=echo `ls`
a=echo `fd 'loop'`
@a=echo `fd 'loop'`
echo `fd 'loop'`
fd d 1 | rg -v "\.sh"
fd -d 1 | rg -v "\.sh"
fd -d 1 | rg -v "\.sh" | xargs echo
fd -d 1 | rg -v "\.sh"  
sh arr.sh
cat arr.sh nl
cat arr.sh -nl
cat arr.sh |-nl
cat arr.sh | nl
bash arr.sh
chmod +x arr.sh
./arr.sh
v arr.sh
text="Welcome to GeeksforGeeks"\n# Set space as the delimiter\nIFS=' '\n# Read the split words into an array\n# based on space delimiter\nread -ra newarr <<< "$text"
set i am me
IFS=,
set jim is me
echo $1
echo /usr/bin/env bash
env | rg -v 'LS'
sh count.sh
v count.sh
bash count.sh
2 = 3
echo $2
cat python3
fd -d 1 | rg -v "\.sh"  | xargs head
fd -d 1 | rg  "\.sh"  | xargs head
fd -d 1 | rg  "\.sh"  | xargs head -n 2
fd -d 1 | rg  "\.sh"  | xargs files
fd "sh" -exec echo \;
md copy
ls sh
sh *.sh
chmod +x c.sh
fd "sh" -exec c.sh \;
fd --changed-within=10min   
fd --changed-within=10min   | rg 'c\.sh'
fd --changed-within=10min   | rg -v 'c\.sh'
fd --changed-within=10min   | rg -v 'c\.sh'  
fd --changed-within=10min   | rg -v 'c\.sh'  -exec echo \;
fd --changed-within=10min   | rg -v 'c\.sh'  -exec echo {} \;
fd --changed-within=10min   | rg -v 'sh' | xargs echo {} \;
fd --changed-within=10min   | rg -v 'sh' | xargs echo  \;
fd --changed-within=10min   | rg -v 'sh' | xargs echo   
rm copy/*
fd --changed-within=10min   | rg -v 'sh' | xargs c.sh
fd --changed-within=10min   | rg -v 'sh' | -exec echo {} \;
fd --changed-within=10min   | rg -v 'sh'  -exec echo {} \;
fd --changed-within=20min    -exec echo {} \;
fd --changed-within=20min    -exec mv {} {}_rname\;
fd 'rname'
fd 'rname' -exec mv {} c.sh
ls copy
fd | rg '*.sh'
fd | rg '.*'
fd | rg '.*sh'
fd | rg '.*sh' -exec echo {} \;
fd | rg '.*sh' | xargs echo {} \;
fd | rg '.*sh' | xargs echo {}  
fd | rg '.*sh' | xargs printf {}  
fd | rg '.*sh' | xargs echo {}\n  
fd | rg '.*sh' | xargs echo \n  
fd | rg '.*sh' | xargs printf  
man echo
fd | rg '.*sh' | xargs echo -e {}\n  
fd | rg '.*sh' | xargs echo -e \n  
fd | rg '.*sh' | xargs echo -e \n\n  
fd | rg '.*sh' | xargs echo  \n\n  
fd | rg '.*sh' | xargs echo   
fd | rg '.*sh' | xargs du -sh
cd you/linux2
duh |  sort -k1 -rh
du -hs
fd | rg '.*mp4' | xargs du -sh
v dd.txt
sudo rm -rf m2 jdks
rm -rf jdks
rm -rf Saved\ Games
fd -tf | rg -v 'ntu.*' | column
fd d 1 -tf | rg -v 'ntu.*' | column
fd -d 1 -tf | rg -v 'ntu.*' | column
fd -d 1 -td | rg -v 'ntu.*' | column
alias dirs="fd -d 1 -td | rg -v 'ntu.*' | column"
ld | rg go
rm -rf go
ddh > ddh.txt 2>/dev/null &
ddh 2>/dev/null> ddh.txt  
ddh 2>/dev/null > ddh.txt  
ddh 2>/dev/null 
lll 2>/dev/null
ddh > ddh.txt 2>&1
touch -- foo\ -o\ index.html; find . | xargs cat
find * -type f -name "*" -exec cat 
find * -type f -name "*" | xargs cat 
find * -type f -name "*" -exec cat {} +
find * -type f -name "*" -exec head -n 2 {} +
find * -type f -name "*" -exec head -n 2 {} \;
man head
v foo\ -o\ index.html
find * -type f -name "*" -exec head -v -n 2 {} \;
chmod +x ex.sh
find * -type f -name "*" -exec ex.sh {} \;
find * -type f -name "*" -exec ex.sh {} \; | v -
fd -d 1 -exec ex.sh {} \; 
fd -d 1 -x ex.sh {} \; 
fd -d 1 -x ls
fd -d 1 -x ll
fd -d 1 -x cat
fd -d 1 -x stat
fd -d 1 -x ex.sh
fd -x ls -lhrt
fd | xargs ex.sh
fd | xargs ex.sh {}
fd | xargs -0 ex.sh 
fd | xargs -0 ls
fd | xargs -0 ls -lhrt
fd 'foo'
find | xargs -0 ls -lhrt
find | xargs -0 ls  
find Pictures/tecmint/ -name "*.png" -type f -print0 | xargs -0 tar -cvzf images.tar.gz
duh |  sort -k1 -rh > duhh.txt
v duhh.txt
rmt cli
alias rmt
which trash-put
which trash-put | xargs echo
which trash-put | xargs v
which trash-put | xargs nvim
ls -1 | xargs
cut -d: -f1 < /etc/passwd | sort | xargs
$a=cut -d: -f1 < /etc/passwd | sort | xargs
$a=cut -d: -f1 < /etc/passwd | sort | xargs>aa
v aa
$a=cut -d: -f1 < /etc/passwd | sort > bb
v bb
ls *.txt | args wc
ls *.txt | xargs wc
ls *.txt | xargs wc -l
ls *.* | xargs wc -l
ls *.* | xargs stat
stat --printf='access %y name %n\n' * | sort  
cd Favorites
set 'tar'
touch x.png
find -name "*.png" -type f -print0 | xargs -0 tar -cvzf images.tar.gz
fd -epng
fd -H -I -epng
cp images.tar.gz /mnt/c/all
rm images.tar.gz
fd -d 1 "*.png"  -print0 | xargs -0 tar -cvzf images.tar.gz
fd -d 1 "*.png"   | xargs -0 tar -cvzf images.tar.gz
fd -d 1 "*.png"    
fd *.png -d 1
fd *.png -d 1 | xargs -0 tar -cvzf images.tar.gz
fd *.png -d 1 
fd *.png -d 1 -print0
fd *.png -d 1 -0
fd *.png -d -0 | xargs -0 tar -cvzf images.tar.gz
fd *.png -d 1 -0 | xargs -0 tar -cvzf images.tar.gz
fd -0 | gr 'gz'
fd -0 | rg 'gz'
fd -0
lq  1>&- 2>&-
lq  1>&- 2>a
lq  1>a- 2>&-
lq  1>a- 2>b
v a b
rm a b a-
fd *.* -d 1 -0 | xargs -0 tar -cvzf images.tar.gz
fd  -d 1 -0 | xargs -0 tar -cvzf images.tar.gz
fd  -d 2 -0 | xargs -0 tar -cvzf images.tar.gz
fd   -0 | xargs -0 tar -cvzf images.tar.gz
fd -g '*.py' -X vim
fd -g 't*.py' -X vim
fd -g 'test_*.py' -X vim
fd 'f.*sh' -X nvim
fd '.*sh' -X nvim
fd '.*sh' --changed-within=2weeks -X nvim
fd '.*sh' --changed-within=2days -X nvim
fd '.*sh' --changed-within=1days -X nvim
a=`fd '*.sh'`
a=`fd '*.sh' -0`
a=`fd '.*sh' -0`
a=`fd '.*sh' `
echo $a > a
for x in $a; do echo $x ; done
sh nn.sh
man ifconfig
ifconfig -a
ping 172.58.87.140
traceroute www.google.com
ping ibm.com
traceroute ibm.com
echo .
fd -H -I --changed-within=30min  
fd -H -I --changed-within=60min  
fd -H -I --changed-within=360min  
rm -rf .rustup
fd -H -I  -0 | xargs -0 tar -cvzf images.tar.gz
v images.tar.gz
fd -H -I  -0
fd -H -I '.*git'
fd -H -I '.*\.git'
fd -H -I '.*\.git' | less
fd -d 2 -H -I '.*\.git' | less
fd -d 2 -H -I '.*\.git'  
mv .gitignore .gitb
v .gitb
mv .gitb .gitignore
find
find | wc -l
fd | wc -l
fd -H -I | wc -l
cat .gitignore
fd -I | wc -l
fd -H | wc -l
ls -ld .?*
ls -ld .?* | less
ls -ld .?* 
rmt .cargo
cd .T
which trash-list
v /usr/bin/trash-list
rmt images.tar.gz
tar -cvf back.tar
apt list --installed | rg sync
which rsync
rsync --version
md backup temp
rmdir temp
touch ~/tmp/ata.txt
rsync -v ata.txt ~/backup
v ata.txt
fd -d 1 ".*sh"
se 'fd.*xarg'
fd -d 1 ".*sh" | xargs cp /temp
fd -d 1 ".*sh" -0 | xargs -0 cp /temp
md temp
fd -d 1 ".*sh" -0 | xargs -0 cp /temp/
fd -d 1 ".*sh" -0 | xargs -0 echo
fd -d 1 ".*sh" -0 | xargs -0 cp ~/temp/
cp git.sh ~/temp
ls ~/temp
ls ~/tmp
fd -d 1 ".*sh" | xargs  cp ~/temp/
fd -d 1 ".*sh" | echo
fd -d 1 ".*sh" | xargs echo
fd -d 1 ".*sh" -x echo
ls -Ra
fd -d 2 '.*history.*'
fd -d 2 '.*his.*'
fd -H -I -d 2 '.*his.*'
fd -H -I -d 2 '.*his.*' -exec echo {} \;
fd -H -I -d 2 '.*his.*' | xargs echo
fd -H -I -d 2 '.*his.*' | xargs echo {}
fd -H -I -d 2 '.*his.*'  
touch x
fd -H -I -d 2 '.*his.*' | xargs -0 -I _ echo _ .
fd -H -I -d 2 '.*' | xargs -0 -I _ echo _ .
fd -H -I -d 2 '.*' | xargs -0 -I _ cp _ ~/
fd -H -I -d 2 '.*' |   -exec cp {} . ;\;
fd -H -I -d 2 '.*' |   -x cp {} . ;\;
fd -H -I -d 2 '.*'   -x cp {} . ;\;
fd -H -I -d 2 '.*'   -x cp {} ~/ ;\;
rm ~/x
fd -H -I -d 2 '.*'   -x cp {} ~/ \;
ls ~ 
fd -H -I -d 2 '.*his.*'   -x cp {} ~/junk/ \;
fd -H -I -d 2 '.*his.*'   -x cp {} ~/mnt/c/all/wsl/ \;
md /mnt/c/you/wsl
fd 'Track'
fd -H -I '.*mp\d'
rm wsl/01\ Track\ 1.mp3
fd -H -I '0.*mp\d'   
rm wsl/mp4
rd wsl/mp4
rm -rf wsl/mp4
ls /mnt/c/you/wsl
fd -H -I '.*mp\d' -x mv {} /mnt/c/all/wsl/ \;
fd -H -I '.*mp\d' -x mv {} /mnt/c/you/wsl/ \;
fd -H -I '.*mp\d'   
take
take wsl
fd -H -I -d 2 '.*his.*'   -x cp {} /mnt/c/all/wsl/ \;
git commit -m 'files'
fd 'ke.*js'
fd 'keybo.*js'
fd 'keybindings.json'
cd AppData/Roaming/Code/User
cp * /mnt/g/My\ Drive
fd "("
fd "\("
fd -d 1 "\s" -exec rename "s/\(//g" {} \;
fd -d 1 "\)" -exec rename "s/\(//g" {} \;
mv ww0792.mp3 /mnt/c/twit
ls -Sh
ls -l -Sh
rm xampp-windows-x64-8.1.6-0-VS16-installer.exe MuseScore-3.6.2.548021803-x86_64.msi
rm bitnami-wordpress-6.0-0-module-windows-x64-installer.exe Messenger.153.0.0.17.110.exe
fd "mp\d"
rm bob.mp3
rm bob.mp4
rm ffmpeg_4.4.2.orig.tar.xz piano-trainer_1.0.1_amd64.AppImage
ls  -Shr | v -
fd -d 1 "-_)" -exec rename "s/\-_//g" {} \;
fd -d 1 "\-_)" -exec rename "s/\-_//g" {} \;
fd -d 1 "\-_" -exec rename "s/\-_//g" {} \;
fd -d 1 "\__" -exec rename "s/\__/_/g" {} \;
fd -d 1 "__" -exec rename "s/\__/_/g" {} \;
take gut
ls *.mscz
se 'e
fd -emscz -exec mv {} /mnt/c/Users/jayst/OneDrive/Documents/MuseScore3/Scores/gut
fd -emscz
cd /mnt/c/Users/jayst/OneDrive/Documents/MuseScore3/Scores/gut
md mp3
fd -d 1 "\s" -exec rename "s/\s/_/g" {} \;
fd -d 1 "'" -exec rename "s/'//g" {} \;
fd -d 1 "\(" -exec rename "s/\(//g" {} \;
fd -d 1 "\)" -exec rename "s/\)//g" {} \;
se 'exec'
fd -emp3 -exec mv {} mp3/
cd mp3
md mid
fd -emid -exec mv {} mid/
v AfterTheGoldrush.mscz
v legend.docx
take sed
v text.txt
sed -n '2,5p' text.txt
sed -n '2,5p' text.txt | nl
sed -n '4,8p' text.txt | nl
sed -n '0,8p' text.txt | nl
sed -n '1,8p' text.txt | nl
sed -i -e '$a2 Mosel Dornfelder 2010' -e '$a4 Alsace Pinot Grigio 2011' text.txt
cat text.txt
k=`ls`
rm x
sed -i -e '$a this is text' myhis
sed -i -e '$a `ls` '
sed -i -e '$a `ls` ' myhis
sed -i -e '$a $(ls) ' myhis
sed -i -e 's/\s/-/g' myhis
ls -e 's/\s/-/g' myhis
ls sed -e 's/\s/-/g' myhis
ls | sed -e 's/\s/-/g' myhis
ls | sed -e 's/\s/-/g'  
ls | sed -e 's/\.sh/-/g'  
ls | sed -e 's/\d/-/g'  
ls | sed -e 's/[a-z]/-/g'  
ls | sed -e 's/[A-A]/-/g'  
ls | sed -e 's/3/-/g'  
rg p .
rg nonumber .
manv-ls
sudo apt install -y fzf
echo 'red\n\green\nblue'
echo 'red\n\green\nblue' | fzf
echo 'red\ngreen\nblue' | fzf
ls | fzf
curl | fzf
printenv | fzf
fd .
find . | fzf
alias | fzf
fd . | fzf
fzf scripts
sudo apt install -y bat
sudo apt install -o Dpkg::Options::="--force-overwrite" bat ripgrep
wi bat
rg manv .
rg 'py.*3'
rg 'sql'
man rg
rg -H 'sql'
rg -H 'sql' | less
rg -H 'sql' | v -
rg -H steff
rg -H clip
rg -H clip | v -
fd -H -I -S +10M
cp thr.tar.gz ~/
rg seq goo.his
se 'ls.*sed'
ls | sed -e 's/\n//g'
ls | sed -e 's/\r//g'
ls | sed -e 's/sh//g'
sudo dpkg -i --force-overwrite /var/cache/apt/archives/ripgrep_11.0.2-1build1_amd64.deb
alias bat="batcat"
bat --show-all 
bat --show-all gh.sh
fd -esh | -exec batcat {}
fd -esh  -exec batcat {}
se 'x.*vim'
fd -esh  -exec echo {}
export FZF_DEFAULT_COMMAND='fd --type f
export FZF_DEFAULT_COMMAND='fd --type f'
fzf 34
export FZF_DEFAULT_COMMAND='fd -H -I --type f'
fo() {\n: 1662529326:0;fo
fo sh
fd -H -I -S +30M -x stat --printf='Name: %n Size: %s\n' > fdSize.txt &
v fdSize.txt
rm  Local/Microsoft/PowerToys/Updates/powertoyssetup-0.43.0-x64.exe \nrm  Local/Microsoft/PowerToys/Updates/powertoyssetup-0.49.0-x64.exe \nrm  Local/Microsoft/PowerToys/Updates/powertoyssetup-0.51.0-x64.exe \nrm  Local/Microsoft/PowerToys/Updates/powertoyssetup-0.51.1-x64.exe \nrm  Local/Microsoft/PowerToys/Updates/powertoyssetup-0.53.1-x64.exe \nrm  Local/Microsoft/PowerToys/Updates/powertoyssetup-0.55.0-x64.exe \nrm  Local/Microsoft/PowerToys/Updates/powertoyssetup-0.55.1-x64.exe \nrm  Local/Microsoft/PowerToys/Updates/powertoyssetup-0.56.1-x64.exe \nrm  Local/Microsoft/PowerToys/Updates/powertoyssetup-0.55.2-x64.exe \nrm  Local/Microsoft/PowerToys/Updates/powertoyssetup-0.56.2-x64.exe \nrm  Local/Microsoft/PowerToys/Updates/powertoyssetup-0.57.2-x64.exe \nrm  Local/Microsoft/PowerToys/Updates/powertoyssetup-0.57.0-x64.exe \nrm  Local/Microsoft/PowerToys/Updates/powertoyssetup-0.61.1-x64.exe
fd -H -I -S +10M -x stat --printf='Name: %n Size: %s\n' > siz.txt &
jobs
cd LocalLow
cd Oracle
rm -rf Oracle
sudo rm -rf Oracle
cd Temp
cd /mnt/c/you
cd webdev
rm -rf webdev
rm -rf dock
rm -rf memgame
rm -rf nextjs
rm -rf hem
rm -rf mosh
cd wohltemp
rm -rf wohltemp
rm -rf css
cd javs
ex Stop\ Wasting\ Your\ Time\ -\ Use\ These\ 16\ JS\ Utility\ Functions\ Instead.mp4
rm Zero\ to\ \$10\ Million\ with\ React\ Native\ +\ Next.js\ -\ Fernando\ Rojo\ -\ \(Next.js\ Conf\ 2021\).mp4
ls -l -Shr
rm -rf react
ls -R
ls -l -R
ls -l -Shr -R
ls -l -Shr -R | v -
cd stand
ex Autumn\ Leaves.mp3
ex wildPerfect.mp4
fd 'nn'
fd -td 'nn'
rm -rf nn
sudo apt install -y apache2
sudo systemctl enable apache2
systemctl status apache2
sudo service apache2 start
service status apache2
ifconfig -a | v -
ping 172.21.178.14
sudo apt install -y php php-{common,mysql,xml,xmlrpc,curl,gd,imagick,cli,dev,imap,mbstring,opcache,soap,zip,intl}
php -v
sudo apt install mariadb-server mariadb-client
sudo service enable --now mariadb
sudo service mariadb start
sudo apt install mariadb-server
sudo mysql
cd /etc/
v mariadb.cnf
v debian.cnf
v conf.d
netstat -anp | tail -n2 2>a
sudo netstat -anp | tail -n2 2>a
docker run --name some-wordpress --network some-network -d wordpress
se 'docker' | v -
docker rm 
docker rm 494644174b2e
docker run --name some-wordpress -p 8080:80 -d wordpress
se 'etc'
se 'index'
se 'cd.*et'
cd default
fd -H -I 'index.html'
cd var/www
sudo v index.html
sudo nvim index.html
docker -ps
touch jim is here
fd --changed-within=20min    
for f in *sh*; echo $f; done
for f in *sh*; do echo $f; done
for f in *xx*; do echo $f; done
for f in *xx*; do rm $f; done
touch xx
for f in *xx*; do mv "$f" "{f//xx/yy}"; done
for f in *xx*; do mv "$f" "{f/xx/yy}"; done
for f in *xx*; do mv "$f" "${f//xx/yy}"; done
mv yy xx
for f in *xx*; do mv "$f" "${f//xx/yy}"; done #!interesting file rename
fd -d 1 "*.*"
fd -d 1 ".*"
fd -d 1 -f ".*"
fd -d 1 -f "*.*"
fd -d 1 -g "*.*"
v ec.sh
rg 'env'
ls /usr/bin  
ls /usr/bin/env
cd /usr/bin/env
bat /usr/bin/env
batcat /usr/bin/env
batcat goo.his
which p3
python3.10
wi python3.10 | v -
chmod +x count.py
p3 count.py
p3 -m pip install numpy 2>/dev/null
./count.py
mv count.py ~/pys
cd mpy
cp count.py one
lt *.py
v count.py
count.py
ipsql
cp ipy.sh ipy
cd python
rg 'clip'
rg 'import'
rg 'import' | v -
se 'py*list'
se 'py.*list'
se 'p3.*list'
p3 -m pip list 2>x
p3 -m pip list 2>x | v -
p3 -m pip install clipboard  2>x 
curl https://cht.sh/ls
ls -lh
ls -lSh
ls -lthr
curl https://cht.sh/ps
curl https://cht.sh/ps | v -
curl https://cht.sh/ps | less
curl https://cht.sh/ps 
ps --sort size
ps aux --sort size
curl https://cht.sh
ls /mnt/c/you/lazy
ls /mnt/c/you/lazy | rg 'sea'
ls /mnt/c/you/lazy | rg 'Lan'
time for i in {1..1000}; do echo "%s/test/new-value/g | w" | nvim -e $i.txt; done
kill SIGNAL PID
ps -aux | grep 'nv'
ps -aux | 
kill -9 439
se 'fd.*s'
fd -H -I -S +30M -x stat --printf='Name: %n Size: %s\n' > siz.txt &
v siz.txt
docker run --name some-mysql -e MYSQL_ROOT_PASSWORD=my-secret-pw -d mysql:tag
se 'docker stop'
docker stop 798ce3444f33
docker stop some-wordpress
se 'docker '
se 'docker ' | v -
docker pull mysql
docker run --name sql -e MYSQL_ROOT_PASSWORD=my-secret-pw -d mysql:tag
docker run -it --network some-network --rm mysql mysql -hsome-mysql -uexample-user -p
docker login
docker run --name sql -e -p 3306:3306 MYSQL_ROOT_PASSWORD=my-secret-pw -d mysql
docker run --name my-sql -p 3306:3306 -e MYSQL_ROOT_PASSWORD=my-secret-pw -d mysql
docker run --name my-sql -p 3306:3306 -e MYSQL_ROOT_PASSWORD= -d mysql
docker run --name my-sql2 -p 3306:3306 -e MYSQL_ROOT_PASSWORD= -d mysql
du --all --human-readable \\n--one-file-system \\n--max-depth=1 2>/dev/null / | sort -k1 -rh | rg -v "^0" #! cool sort https://www.redhat.com/sysadmin/sort-du-output
take mysql
se 'm.*env'
p3 -m venv db
db/bin/activate
sh db/bin/activate
bash db/bin/activate
pip list 2>/dev/null 
se 'p3.*insta'
se 'Ipyth'
se 'ipyth'
p3 -m pip install ipython
p3 -m pip install mysql-connector-python
v table
md /mnt/c/you/mix
se '>2'
bash ye.sh 2>err
wi python3
se 'p3.*env'
cd you/mix
md gut
fd 'gu*'
fd -td 'g*'
fd -td 'g.*'
md /mnt/c/you/shop
se 'fd.*exec'
cd you/shop
fd | sort
fd | sort -x touch {}
fd | xargs echo
fd | xargs echo _
fd | sort | xargs echo
fd | sort | xargs touch
fd | sort -n
fd | sort  
touch essays_02_schopenhauer_64kb.mp3
fd | sort -n | xargs vlc
fd '*.3'
fd '.*03'
fd '.*03' -X vlc
fd | sort -n | xargs touch
chmod +x thre.sh
fd | sort -n | xargs ./thre.sh
chmod +x x.sh
sh x.sh 1 2 3
./x.sh 1
wi x.sh
which x.sh
bash x.sh
bash thre.sh
bash x.sh 
bash x.sh 1
bash x.sh 1 2 3 "jim"
bash x.sh 1 2 3 "jims"
fd | sort -n | xargs ./x.sh
fd -tf -esh
fd -tf -esh | xargs head
fd -tf -esh | xargs head -n 2
v thre.sh
se 'xarg.*sh'
echo `date`
fd -tf -emp3 | sort -n | xargs ./x.sh
fdi 
fdi -esh
xx ()\necho "arg one is $1"\n: 1662777200:0;xx 'jim'
sh `echo jim`
bash -c "echo $tmp"
bash -c "echo $PATH"
m=' -d 1'
fd $m
fd `$m`
a=$(fd -d 1)
xx(){\necho $(fd ".*sh")\n: 1662782347:0;xx(){\necho $(fd -d 1 ".*sh")\n: 1662782445:0;xx(){echo $(fd -d 1 ".*sh")}
xx(){echo $(fd -d 1 ".*$1")}
xx(){printf $(fd -d 1 ".*$1")}
xx 'py'
xx 'sh'
printf
printf "%s\n" "jim"
printf "\"%s\n" "jim"
printf "\"%s\"\n" "jim"
printf "\"%s\"\n" $(ls -l)
printf "%s\n" $(ls)
printf "\"%s\"\n" $(ls)
cd /mnt/c/Users/jayst
fd -H -I   --changed-within=10minx
fd -H -I   --changed-within=10mins
fd -H -I ".*vim.*"
fd -H -I ".*vim.*" --changed-within=3days
fd -H -I   --changed-within=1mins
fd -H -I ".*info.*"     
fd -H -I "v.*info.*"     
fd -H -I "vi.*info.*"     
ls .viminfo
ls -t .viminfo
ls -l .viminfo
ls | nvim +$ -
fd -H -I ".*shada.*"
fd -H -I ".*shada.*" -x ll
fd -H -I ".*shada.*" -x ls -l
fd -H -I ".*shada.*" | xargs ls -l
fd -H -I ".*shada.*" | xargs ls -l | v -
fd 'a;
alias fda='fd -H -I '
fda --changed-within=2mins
fda --changed-within=12mins
fda --changed-within=12mins | xargs head -n 2
se 'shada'
fdi -tf
fdi -tf | xargs ls -t
fdi -tf | xargs ls -l
fdi -tf | xargs ls -l | sort
sudo apt install build-essential
lt | sort -k2
lt | sort -k 2
lt | sort -k 3
lt | sort -k 8
take sort
se 'for\s'\n: 1661139707:0;se 'for\s'
n=(American professional baseball pitcher for the Minnesota Twins of Major League Baseball MLB. He made his MLB debut in 2017 with the Cincinnati Reds.)
echo $n[1]
v words
cat words
batcat words
cat words | sort
cat words | sort -k 2
sort -k 2,2, words
sort -k 2,2 words
cat words | sort -k 2,2
cat words | sort -r -k 2,2
ls | sort
ls ~ | sort
ls ~ | sort -r
ls -l /home/$USER | sort -nk7
ls -l /home/$USER | sort -nk2
ls -l | sort -k1 -rh
ls -l | sort -k2 -rh
ls -l | sort -k5 -rh
ls -l | sort -k5 -h
ls -l | sort -k5 -sh
ls -l | sort -R
n=$(ls | sort -R)
echo $n
for a in $n: do echo $a; done
for a in $n; do echo $a; done
sudo docker run hello-world
cd .docker
take wordp
netstat
alias fdi
fd -H "docker"
fd -H -d 2 "docker"
docker rm 9b3726be8277
ls ../wordp/
docker rm $(docker ps -a -q) #!remove all images
fda -tx | v -
v mysql/db/lib/python3.10/site-packages/mysql/vendor/private/libk5crypto.so.3.1
cd wp2
fd 'comp'
md ~/wp3
cp docker-compose.yml ~/wp3
cd ~wp3
cd ~/wp3
fda -tx
se 'apt.*in'
docker exec -it 8113913b3fbd /bin/bash
docker export -o hist.txt 8113913b3fbd
v hist.txt
rm hist.txt
echo $$
se 'modifie'
se 'fd.*with'
lt "his*"
lt "*his*"
ls "*his*"
fd -d 1 ".*his.*'\n: 1662876867:0;fd -d 1 ".*his.*"
vnstat -i eth1
echo $UID
$(uname)
_myos="$(uname)"
echo $_myos
bc -l
lias mount='mount |column -t'
alias mount='mount |column -t'
mount
alias ports='netstat -tulanp'
ports
curl -I -l "https://umn.edu"
curl -I -l "https://umn.edu" | less
whatis ping
whatis ls
whatis netstat
whatis curl
whatis icmp
man systemd
\rm hist.tar
docker export -o hist.tar 8113913b3fbd
se 'sort'
ls -l /bin/sh
dash
cat sh.sh
cat d.sh
cat > d.sh
sc d.sh
source d.sh
hyperfine --show-output  d.sh
chmod +x d.sh
hyperfine d.sh
prinenv
which d
cd copy
echo dirs
cd .html
sudo cd mysql
sudo find .
fd -H -I "git"
commit -am "initial from bash"
/rm -rf .git
git commit -am "initial from bash"
wi gh
gh repo create all_wsl --public
git remote add origin git@github.com:wither7007/all_wsl.git
git push -u origin main
cat dff
cat diff
v diff
nvim diff
sudo apt install dos2unix
v notes
cat note
cd note
cat notes
cat notes | sort -k1
cat notes | sort -k2
cat notes | sort -k2 | less
cd vifm
cd Trash
\rm 000_music 000_pod 000_cpro
\rm -rf 000_music 000_pod 000_cpro
ddh > ddh.txt 2>&1 &
docker ps -a | tail -n 2
docker ps -a | tail -n 2 | awk {print $1}
docker ps -a | tail -n 2 | awk { print $1 }
docker ps -a | tail -n 2 | 'awk { print $1 }'
dawk { print $1 }ocker ps -a | tail -n 2 | awk '{ print $1 }'
docker ps -a | tail -n 2 | awk '{ print $1 }'
docker rm | tail -n 2 | awk '{ print $1 }'
docker ps -a -q | tail -n 2
docker rm $(docker ps -a -q | tail -n 2)
fdi 'hist'
cd .cache/zsh
ln -s ~/.cache/zsh/history /mnt/c/all
v history
ln -s ~/.cache/zsh/history /mnt/c/all/whis
\rm history
git commit -am "added whis link"
rm /mnt/c/all/whis
ln ~/.cache/zsh/history /mnt/c/all/whis
git commit --amend -m "changed whis to hard"
curl https://api.github.com/users/schacon
curl https://api.github.com/users/schacon | v -
curl https://api.github.com/users/wither7007 | v -
md ~/jq
mv jq.json ~/jq/
cd ~
wi jq
jq '.' jq.json
jq '.html_url' jq.json | v -
jq '.' jq.json | v -
cat jq.json | jq - '.[]'
cat jq.json | jq -c '.[]'
curl 'https://api.github.com/repos/stedolan/jq/commits?per_page=5' | jq '.'
curl 'https://api.github.com/repos/wither7007/jq/commits?per_page=5' | jq '.[0]' | v -
curl 'https://api.github.com/repos/stedolan/jq/commits?per_page=5' | jq '.[0]' | less
curl 'https://api.github.com/repos/wither7007/all_wsl/commits?per_page=5' | jq '.[0]' | v -
curl 'https://api.github.com/repos/wither7007/all_wsl/commits?per_page=5' | jq '.[1]' | v -
curl 'https://api.github.com/repos/wither7007/all_wsl/commits?per_page=5' | jq '.[0] | {message: .commit.message, name: .commit.committer.name}'
curl 'https://api.github.com/repos/wither7007/all_wsl/commits?per_page=5' | jq '.[0] | {message: .commit.message, name: .commit.committer.name}' | v -
fda --changed-within=30mins | v -
fda --changed-within=30mins
cd etc
ld -l
alias ld
ld | rg 'gr'
ld | rg 'pa'
v group
ag python | v -
man ag
ag sheets
grep "^developers" /etc/group
grep "^a" /etc/group
rg "^a" /etc/group
fd -d 1 -td | column
alias fdd="fd -H -d 1 -td | column"
alias fdd
useradd -m newuser -p strongpassword
sudo useradd -m newuser -p strongpassword
cat /etc/passwd   | sed '1, 22d' |more
login newuser
sudo login newuser
fd "*.sh" -x head -n 3
fd -esh -x head -n 3
fd -esh | xargs head -n 1
fd -esh | xargs head -n 3
fd -esh | xargs head -n 3 | v -
sc j.sh
usage
which usage
source j.sh
musage
se 'which'
which trash-list 
se 'delclare'
se 'whence'
whence alias
se 'declar'
declare -a wi
declare -f takedir
se 'compgen'
declare -f py
which py
when py
whence py
whence als
whence duh
man whence
useradd -m new -p 123
su -
cat /etc/passwd | awk '{ print $1 }'
cat /etc/passwd | grep 'stef'
cat /etc/passwd | grep 'new'
cat /etc/passwd | grep 'new|st'
cat /etc/passwd | rg 'new|st'
cat /etc/passwd | rg 'new|stef'
sudo useradd foxmoulder
cat /etc/passwd | rg 'fox'
cat /etc/default
v useradd
cat /etc/passwd | tr ":" "\n"
cat /etc/passwd | tr ":" "\n" | rg 'fox'
cat /etc/passwd | tr ":" "\n" | rg 'fox|new'
cat /etc/passwd | tr ":" "\n" | sed '/s/x/vvvvvvvvv/g'
cat /etc/passwd | tr ":" "\n" | sed -e '/s/x/vvvvvvvvv/g'
cat /etc/passwd | tr ":" "\n" | sed -e 's/x/vvvvvvvvv/g'
cat /etc/passwd | tr ":" "\n" | sed -e 's/\//vvvvvvvvv/g'
cat /etc/passwd | tr ":" "\n" | sed -e 's/\//\/g'
cat /etc/passwd | tr ":" "\n" 
k=c$(pwd | sed -e 's/\//\\/g')
k=$(pwd | sed -e 's/\//\\/g')
pwd | sed -e 's/\//\\/g'
cat /etc/passwd | tr ":" "\n" | sed -e 's/\//\\/g'
cat /etc/passwd | rg 'fox|new'
cat /etc/passwd | rg 'fox|new' | rg ':1'
cat /etc/passwd | rg 'fox|new' | rg ':10'
ll /home
cat /etc/passwd  | rg ':10'
cat /etc/passwd  | rg ':100'
cat /etc/passwd  | rg ':100[1-5]'
sudo userdel username
sudo userdel foxmoulder
sudo userdel new
sudo useradd -m foxmoulder
cd home
rd username
sudo rd username
sudo rm -rf username
sudo userdel -r foxmoulder
sudo userdel -r newuser
ls -l /home
useradd -m foxmulder new -p 123
useradd -m foxmulder 
sudo useradd -m foxmulder 
cat /etc/passwd  | rg ':100[0-5]'
sudo passwd foxmulder
logout
login foxmulder
cat /etc/passwd  | rg 'sys'
declare -f his
whence his
whence hi
cat .bash_history
se 'cp.*hist'
se 'cp.*hist' | v -
fdi --changed-within=30mins
fdi --changed-within=30hours
fdi --changed-within=30days
fd --changed-within=20min
fd --changed-within=120min
fdi --changed-within=120min
fd -H -I --changed-within=120mins
se 'o.*z'
echo $HISTFILE
se 'changed'
se 'changed.*rm'
se 'x.*rm'
se 'thr\.tar'
fd 'mysql'
fd 'gitig'
fda 'gitig'
whence fd
/usr/bin/fd
rg mysql
rg mysql | v -
fd -E mysql
fd -E mysql -E wp2
fd -E mysql -E wp2 -E tar
fd -E mysql -E wp2 -E wp3
fd -E mysql -E wp2 -E wp3 | v -
fd -E mysql -E wp2 -E wp3 -E tar | v -
fd -a
fd -E mysql -E wp2 -E wp3 -E tar -E word* -E mysql 
fd -E mysql -E wp2 -E wp3 -E tar -E word* 
fd -E mysql -E wp2 -E wp3 -E tar -E word* | v -
fd -I 'git'
fd -I -H 'git'
fd -I -H '\.git'
fd -I -H '\.git$'
fd -I -H 'ignore'
fd -d 1 -I -H 'ignore'
cp .gitignore .ignore
rg 'py'
rg 'py' | v -
fd my*
fd 'my.*'
fd | v \n: 1662960049:0;fd | v -
ls -a | rg 'git'
rm .gitignore
ls -a | rg 'ig'
rm .fdignore
ls -lShr
f .ignore
cat /etc/shadow
sudo cat /etc/shadow
sudo cat /etc/shadow | grep 'stef'
hotp
fd -H -I -S +30M -x stat --printf='Name: %n Size: %s\n'
v wp3/database/ib_logfile0
cd wp3
cd database
v ib_logfile0
sudo v ib_logfile0
sudo nvim ib_logfile0
git fetch origin
rgi githis
v ghist
git commit -am "added note test"
fd -H -I "zsh.*his"
v $file
cp ~/$file ~/.zsh_history_bad
cp $file ~/.zsh_history_bad
cp .zsh_history_bad his.bak
fda --changed-within=1days
se 'dev'
duh 2>/dev/null
v goo.his
v myhis
rg 'python'
rg 'diction'
rg 'diction' | xargs sed -i 's/dictionary/xxxxxxxxxx/g'
rg 'diction' --files-with-matches | xargs sed -i 's/dictionary/xxxxxxxxxx/g'
rg 'diction.*' --files-with-matches | xargs sed -i 's/dictionary/xxxxxxxxxx/g'
rg 'dict' --files-with-matches
rg 'dict' --files-with-matches | xargs echo
rg 'dict' --files-with-matches | xargs cat
rg 'dict' --files-with-matches | xargs cat | v -
rg 'diction' --files-with-matches | xargs cat | v -
rg 'tion' --files-with-matches | xargs cat | v -
rg 'vendor' --files-with-matches | xargs cat | v -
rg 'vendor' --files-with-matches | xargs echo | v -
rg -H -I 'vendor' --files-with-matches | xargs echo | v -
rg -H -I 'vendor' --files-with-matches 
rg -H -I 'myword' --files-with-matches
cat > gg
rg -H -I 'myword.*' --files-with-matches
rg -I 'myword.*' --files-with-matches
rg -I -a 'myword.*' --files-with-matches
fd -I
fd -H -td
fd -d 1 -H -td
rg -I -a 'vim.*' --files-with-matches
rg -I -a 'vim.*'
rg -I -a 'vim.*' | v -
rg  'vim.*' | v -
rg  'myword' | v -
rg  -H 'myword' | v -
rg  -H -I 'myword' | v -
rg 'myword'
grep 'myword'
ag a gg
ag 'a' goo.his
ag 'read' goo.his
ag 'read' $(ls)
ag 'myword' $(ls)
se '2>'
ag 'myword' $(ls) 2>/dev/null
ag 'myword' $(fd) 2>/dev/null
ag 'my?ord' $(fd) 2>/dev/null
ag 'myword' $(fd -I) 2>/dev/null
fd -I -H | rg 'cargo'
fd -I -H | rg '\.cargo'
fd -I -H | rg '\.cargo' | less
v .cargo/bin/pp
ag 'myword' $(fd -I -H) 2>/dev/null
ag 'myword'
ag 'myword' $(fd -a -I -H) 2>/dev/null
ag 'm.*' $(fd -a -I -H) 2>/dev/null
ag 'm.*' $(fd -d 1 -a -I -H) 2>/dev/null
ag 'mo.*' $(fd -d 1 -a -I -H) 2>/dev/null
ag 'pyth.*' $(fd -d 1 -a -I -H) 2>/dev/null
ag 'myword.*' $(fd -d 1 -a -I -H) 2>/dev/null
cd rclone
v pimple
ag 'frumious'
ripgrep "frumious"
rg "frumious"
rg 'frumious.*' $(fd -d 1 -a -I -H) 2>/dev/null | v -
rg 'frumious.*' $(fd -d 1 -a -I -H) 2>/dev/null
ag 'frumious.*' $(fd -d 1 -a -I -H) 2>/dev/null
fd -d 1 -a -I -H | wc
fd  -a -I -H | wc
rg 'column'
rg 'column' | less
rg 'column' $(fd)
rg 'column' $(fd esh)
rg 'column' $(fd -esh)
cat git.sh
rg 'general' $(fd -esh)
rg 'fd' $(fd -esh)
rg 'fd' $(fdd)
rg 'fd' $(ls)
rg 'fd.*sh' $(ls)
rg 'fd \-' $(ls)
rg 'fd \-' $(ls) 2>/dev/null
rg 'fd \-' $(ls) 2>/dev/null | less
rg 'fd \-' $(fd -d 1) 2>/dev/null | less
rg 'fd \-' $(fd -d 1) 2>/dev/null 
ag 'column'
fd -d 1 "python"
ag 'select\s'
ag 'select\s' | less
ag 'select'
ag 'create'
docker ps -a -q
se 'doc
docker rmi $(docker ps -a -q)
se 'docker.*rmi'
docker rmi $(docker images -q)
rm -rf wordp
sudo rm -rf wordp
sudo rm -rf wp2
sudo rm -rf wp3
fd -I -H
fda 'activate'
wi mysql
msql
apps | rg 'sql'
se 'apt.*sql'
alias rg 'exit'
sudo mysql_secure_installation
rm gg ipy_linux3
v my.cnf
netstat -tlnp
ping 127.0.0.1:3306
ping google.com
ping localhost
ping localhost:3306
sudo mysql -u root
se 'activate'
fd -I -H 
fd -I -H --changed-within=1hours
sudo cat /root/.mysql_history > msql_hist
sudo cat /root/.mysql_history
md /mnt/c/you/sql
function w()\n{ fd -d 1 $0 }
w 'sh'
compgen -a | rg 'd.*' | sort | column
declare -f ld
whence ld
whence fdh
whence fdi
whence gdt
compgen -a w
compgen -a | rg '^w'
declare -f w
declare -f
declare -f | v -
typeset -f
compgen -c
compgen -c | sort | column
for $l in $(compgen -a); do unalias $l; done
for l in $(compgen -a); do unalias $l; done
for l in $(compgen -a); do echo $l; done
for l in $(ls); do echo $l; done
compgen -a | column
compgen -c | sort | column | v -
compgen -c | sort | column | nvim -
compgen -b
compgen -k
compgen -k | sort | column
man typeset
tldr rmdir
tldr while
tldr select
help 
tldr compgen
....
compgen -a
whence gcd
compgen -a | sort | column
whence mp
whence mps
whence ran
declare -F grh
declare -f grh
printf "%s\n\t" $PATH
printf "%s\n" $PATH
echo "${PATH//:/$'\n'}"
echo "${PATH//:/$'\n'}" #! readable path
which httpd top ls
which which top ls
which which htop ls
which which htop ls p3
a=$(fd -d 1 ".*sh")
a=$(compgen -a)
which $a
which ll
for tt in $a; echo $tt; done
for tt in $a; do echo $tt; done
for tt in $a; do which $tt; done
for tt in $a; do printf $tt; done
which ld
req_bins_count=$(wc -w <<<"$bins")
echo $req_bins_count
ls -lSr
m jj.sh
source jj.sh
which sed
bins="htop ls grep date sed awk"
aa=$(which $bins)
echo $aa
echo $bins
echo $bins[1]
@bins="htop ls grep date sed awk"
bins=(htop ls grep date sed awk)
bins[1]
echo {bins[1]}
echo ${bins[1]}
echo ${bins[*]}
echo ${bins[@]}
bins=$(ls)
echo ${#bins[@]}
ls | wc
for a in $bins; do echo file$a; done
for a in $bins; do echo "$a"; done
for a in $bins; do echo "file $a"; done
for a in $bins; do printf "file $a"; done
for a in $bins; do printf "file"; done
for a in $bins; do echo "file"; done
for a in $bins; do echo $a; done
source pp.sh
bash pp.sh
v pp.sh
m=${#IndexedArray[@]}
echo $m
a=$((ls))
ls | head
a=($(ls))
echo $a[1]
a=($(fd -d 1))
echo a[@]
printf "%s\n" "${a[@]}"
printf "%s\n" "${a[1]}"
for i in "${a[@]}"\ndo echo $i\ndone
for i in "${a[@]}; do echo $i; done
echo "${a[@]}"
for i in "${a[1]}"; do echo $i; done
limits=( 10 20 26 39 48)
for i in "${limits}"; do echo $i; done
for i in "$(limits)"; do echo $i; done
for i in "${limits[@]}"; do echo $i; done
for i in "${a[@]}"; do echo $i; done
fd -esh --changed-within=2days
sh gitAll.sh
date -r 1663087843
date -r 1641735529 "+Today is %A, %B %e, and it's %I:%M:%S %p"
date -d @1268727836 +"%d-%m-%Y %T %z"
date -d @1663087843 +"%d-%m-%Y %T %z"
git fetc
v greek.txt
fm .
git commit -m 'clean up'
sudo tar -zcvpf system-back.tgz .
fd -H -I "ignore"
se 'reset'
se 'hard'
git clean -nfd
cd temp
git clean -f
v bash_h9-8.txt
git branch -M new
git branch -M new2
git config --global core.editor "nvim"
git config --global pager.branch false
git branch newer
git switch newer
git branch new2
git switch new2
v note/work
git commit -m 'one line to note'
git diff --name-only Remotebranch
git remote -va
get remote get-url
git remote get-url
git remote get-url --all
alias | rg 'graph'
glog
fd d 1 -td
fd -d 1 -td
touch n
fd -x tar -rvf /tmp/all-doc-files.tar "{}"
fd -H -I --changed-within=1days
fd -H -I -E tldr --changed-within=1days
fd -H -I -E .tldr --changed-within=1days
v .ig
fd -H -I -E .tldr --changed-within=3days
fd --changed-within=1days
rm x.png
fd -emp3 | xargs rm
fd --changed-within=21days
fd --changed-within=21days | xargs stat
fd  -S +10M -x stat --printf='Name: %n Size: %s\n'
fd  -S +1M -x stat --printf='Name: %n Size: %s\n'
fd  -S +.51M -x stat --printf='Name: %n Size: %s\n'
fd  -S +.5M -x stat --printf='Name: %n Size: %s\n'
fd  -S +99K -x stat --printf='Name: %n Size: %s\n'
se 'fd.*gz'
fd -x echo
fd -x echo cat
se 'fd.*tar'
fd -x tar -cvf /tmp/all-doc-files.tar 
fd -x tar -rvf /tmp/all-doc-files.tar 
lt /tmp
v all-doc-files.tar
fda 'hist'
fda -d 1 'hist'
stat tmp
stat .rustup
du backup
du .rustup
du -h .rustup
alias | rg sort
du -h .rustup | sort -k1
du -h .rustup | sort -k1 -rh
du  .rustup | sort -k1 -rh
du  .rustup | sort -k1 -h
du -h  .rustup | sort -k1 
alias | rg 'sort'
curl https://api.github.com/users/wither7007/
curl https://api.github.com/users/wither7007
curl 'https://api.github.com/repos/wither7007 | jq '.[0]'
curl 'https://api.github.com/repos/wither7007' | jq '.[0]'
curl 'https://api.github.com/repos/wither7007' | jq '.'
curl 'https://api.github.com/repos/wither7007'
se 'wither'
curl 'https://api.github.com/repos/wither7007/all/commits?per_page=5' | jq '.[0]' | v -
curl 'https://api.github.com/repos/wither7007/all | jq '.[0]' | v -
curl 'https://api.github.com/repos/wither7007/all' | jq '.[0]' | v -
curl 'https://api.github.com/repos/wither7007/all/commits | jq '.[0]' | v -
curl 'https://api.github.com/repos/wither7007/all/commits' | jq '.[0]' | v -
curl 'https://api.github.com/repos/wither7007/all/commits' | jq '.[0]' 
curl 'https://api.github.com/repos/wither7007/all/commits' | jq '.[0] |  {message: .commit.message, name: .commit.committer.name}'
curl 'https://api.github.com/repos/wither7007/all-wsl/commits' | jq '.[0] |  {message: .commit.message, name: .commit.committer.name}'
curl 'https://api.github.com/repos/wither7007/all_wsl/commits' | jq '.[0] |  {message: .commit.message, name: .commit.committer.name}'
curl 'https://api.github.com/repos/wither7007/all_wsl/commits' | jq '.[1] |  {message: .commit.message, name: .commit.committer.name}'
curl 'https://api.github.com/repos/wither7007/all_wsl/commits' | jq '.[1] |  {message: .commit.message, name: .commit.committer.name}' #! good jq https://gist.github.com/btoone/2288960
curl 'https://api.github.com/repos/wither7007/all_wsl/commits' | jq '.[1-4] |  {message: .commit.message, name: .commit.committer.name}' 
curl 'https://api.github.com/repos/wither7007/all_wsl/commits' | jq '. |  {message: .commit.message, name: .commit.committer.name}' 
curl 'https://api.github.com/repos/wither7007/all_wsl/commits' | jq '.[] |  {message: .commit.message, name: .commit.committer.name}' 
curl 'https://api.github.com/repos/wither7007/all_wsl/commits' | jq '.[] |  {message: .commit.message, name: .commit.committer.name}' | v - #! all commits
curl 'https://api.github.com/repos/wither7007/all_wsl/commits' | jq '.[]' 
curl 'https://api.github.com/repos/wither7007/all_wsl/commits' | jq '.[]' | v -
curl 'https://api.github.com/repos/wither7007/all_wsl/commits' | jq '.[] |  {message: .commit.message, name: .commit.committer.name, name: .commit.committer.date}' | v - #! all commits
md /mnt/c/you/git
man diff
diff ye.sh yv.sh
git log -p -1 
git log -p -1 | v -
git log -p -0 | v -
git commit -m 'note wrights'
se 'git.*show'
git log -8 --oneline
git log -8 --oneline | nl
git log -8 --oneline v -
git log -8 --oneline | v -
git checkout 9fef3c2
v synthe.txt
git branch -d newer
rm -rf AutoCord
rm MidiSheetMusic-2.6.exe
fd --changed-within=1days | xargs stat
fd --changed-within=2days | xargs stat
awk -F , 'BEGIN { OFS=FS } { split($1,a,"/"); $1 = a[3] a[1] a[2] }; 1' file\n20220628,04:00,142.01,142.38,141.59,142.15,3151\n20220628,04:01,142.1,142.1,142.1,142.1,196
ls | tr "\n" " list "
ls | tr "\n" "xxx"
ls | tr "\s" "xxx"
ls | sed -e 's/\./......../g'
ls | sed -e 's/\s/......../g'
ls | sed -e 's/\n/......../g'
ls | sed -e 's/\q/......../g'
fd -td --changed-within=2days | xargs stat | less
fd -tf --changed-within=2days | xargs stat | less
se 'fd.*stat\n: 1663190663:0;se 'fd.*stat'
fd  --changed-within=1days -x stat --printf='Name: %n Size: %s\n'
fd  --changed-within=2days -x stat --printf='Name: %n Size: %s\n'
rm -rf new foxmulder
sudo rm -rf new foxmulder
cd py
rm -rf py
sudo rm -rf py
sudo userdel -r tecmint
sudo userdel -r foxmulder
sudo userdel -r new
cat /etc/passwd 
man useradd
adduser sammy
sudo useradd -m new -p 123
cat /etc/passwd  | rg '1000\d'
ld -l /home
ld /home
fd /home
fd . /home
fd -td  /home
fd /new
ls /home
cd /home/steff007/.local/lib/python3.10/site-packages
fd | rg 'ste'
fd | rg 'ste' | less
fd | rg 'ne' | less
fd | rg 'ne' 
fd | rg 'new' 
sudo passwd new
login new
sudo login new
curl 'https://api.github.com/repos/wither7007/all_wsl/commits' | jq '.[] |  {message: .commit.message, name: .commit.committer.name, date: .commit.committer.date}' | v - #! all commits
v hist.tar
v his.tar
ls -alSrh
cat /etc/passwd  | rg '100\d'
git remote --all
rm ps/dirl.py
git rm ps/dirl.py
git commit -m 'one line'
whereis python
python -c "import math;print(math.sin(1))"
python -c "import math;print(math.sin($a))"
a=20
pp=$(python -c "import math;print(math.sin($a))")
echo $pp
man bc
echo "scale=1000; 4*a(1)" 
echo "scale=1000; 4*a(1)" | bc -l
v rnd.sh
wget -qO- https://github.com/koalaman/shellcheck/releases/download/v0.7.0/shellcheck-v0.7.0.linux.x86_64.tar.xz | tar -xJf -\ncd shellcheck-v0.7.0/\nsudo cp shellcheck /usr/local/bin
shellcheck
shellcheck gitAll.sh
fd -esh -x shellcheck
v ve.sh
curl https://sh.rustup.rs -sSf | sh
cargo install sd
cd .cargo
fd -H -I -tx
echo 'lots((([]))) of special chars' | sd -s '((([])))' ''
ld | sd -s '((([])))' ''
echo 'lorem ipsum 23   ' | sd '\s+$' ''
echo 'lorem ipsum 23   ' | sd 'lorem' ''
echo 'lorem ipsum 23   ' | sd 'lorem' 'latin stuff'
ls | sd 'sh' 'exe'
> echo "123.45" | sd '(?P<dollars>\d+)\.(?P<cents>\d+)' '$dollars dollars and $cents cents'\n123 dollars and 45 cents
rg git
v ~/.cache/zsh/history
cp ~/.cache/zsh/history /mnt/c/all/whis
git commit -m 'wshis update'
se 'cp.*hist' 
echo 'hello' | sd 'ec' 'xxx'
se 'cargo'
se 'sd\s'
man sd
which sd
echo "sample with /path/" | sd '.*(/.*p/)' '$1'
echo "sample with /path/" | sd '.*h(/.*/)' '$1'
echo "sample with /path/" | sd '.*(/.*/)' '$0'
echo "sample with /path/" | sd '.*(/.*/)' '$1'
echo "sample with /path/" | sd '.*m(/.*/)' '$1'
echo "sample with /path/" | sd 'm(/.*/)' '$1'
echo "sample with /path/" | sd '(/.*/)' '$1'
echo "sample with /path/" | sd '(/w.*/)' '$1'
echo "sample with /path/" | sd '(w.*/)' '$1'
echo 'jim' | sd 'i' 'xxxx'
echo 'jim' | sd 'i.*' 'xxxx'
echo 'jim' | sd '(i.*)' 'xxxx'
echo 'jim' | sd '(i.*)' '$1xxxx'
echo 'jim' | sd '(.*)' '$1xxxx'
echo 'jim steff' | sd '(.*)' '$1xxxx'
echo 'jim steff' | sd '(f.*)' '$1xxxx'
echo 'jim steff' | sd '(f.*)' 'xxxx'
echo 'jim steff' | sd '(f.*)' 'xxxx $1'
echo 'jim steffes' | sd '(f.*)' 'xxxx $1'
echo 'jim steffes' | sd '\s' '_'
echo 'jim steffes' | sd '\s?' '_'
echo 'jim steffes' | sd ' ' '_'
echo 'jim steffes 2 pat' | sd '\d' '_'
echo 'jim steffes 2 pat' | sd '\s\d' '_'
echo 'jim steffes 2 pat' | sd '\s\d\s' '_'
echo 'jim steffes 2 pat' | sd '\s\d\s' '_' | sd ' ' '_'
hyperfine -w 3 'sed -E "s/\"/\'/g" *.json >/dev/null' 'sd "\"" "\'" *.json >/dev/null' --export-markdown out.md\n: 1663301514:0;hyperfine 'find .'
hyperfine 'fd'
hyperfine 'fd -H -I "duh"'
find . -name 'duh'
hyperfine 'fd -H -I echo'
find . -name 'python'
fd -H -I 'python'
time rg -uuu '\w{42}' | wc -l
rg '\w{42}'
'\w'
echo '\w'
rg '\w'
rg '\w' | v -
echo '\w{42}'
rg '\w{42}' | v -
rg '\w{22}' | v -
rg '\w{2}' | v -
rg 'upon' | v -
rg 'up.*' | sd 'up' 'xxx'
rg 'up.*' | sd 'up' 'xxx\n'
rg 'up.*' | sd 'up' 'xxx\n\n'
rg 'up.*'
f -d 1 -x rg 'up'
fd -d 1 -x rg 'up'
fd -d 1 -x rg 'warranty'
fd 'spell'
echo /etc/passwd /etc/group | xargs stat -c '%i %n'
nproc
cat ~/ppack_lz
declare -a take
declare -a fd
type -a python
type -a python3
if [ 2 -eq 2 ]; then echo yes; else echo no;fi;
if [ $0 -eq 'zsh]; the echo zsh; fi;
if [ $0 -eq 'zsh']; the echo zsh; fi;
if [ $0 -eq 'zsh']; then echo zsh; fi;
if [ 0 -eq 'zsh']; then echo zsh; fi;
if [ 'x' = 'zsh']; then echo zsh; fi;
if [ 'x' = 'zsh' ]; then echo zsh; fi;
shellcheck if.sh
v if.sh
./if.sh
rg then
v she.sh
rg child
rg 'up'
sd cut.py
rg 'peg'
fzf mp
fzf cut
whin
echo "C:\Users\jayst\OneDrive\Documents\MuseScore3\Scores"
echo "C:\Users\jayst\OneDrive\Documents\MuseScore3\Scores" | sd 'c:\' ''
echo "C:\Users\jayst\OneDrive\Documents\MuseScore3\Scores" | sd 'c:\\' ''
echo "C:\Users\jayst\OneDrive\Documents\MuseScore3\Scores" | sd 'C\:\\' ''
echo "C:\Users\jayst\OneDrive\Documents\MuseScore3\Scores" | sd 'C:\\' ''
echo "jim" | sd 'ji' ''
echo "c:\'
echo "c:\" | sd 'c' ''
echo "c:\" | sd "c" ""
echo "c:\" 
echo "c:\\" 
printf "c:\\"
printf "c:\"
printf '%s\n' "c:\"
printf '%s\n' "c:"
printf 'k%s\n' "c:"
printf '%s\n\n' $PATH
printf '%s\n\n' $PATH | sd ':' '\n'
printf '%s\n' $PATH | sd ':' '\n'
printf '%s' $k
printf '%s\n' $k | sd '\/' ''
printf '%s\n' $k | sd '/' ''
printf '%s\n' $k | sd '/' '\\'
printf '%s\n' $k | sd '/' '\\' | sd '\\mnt' 'c:'
printf '%s\n' $k | sd '/' '\\' | sd '\\mnt\\c' 'c:'
printf '%s\n' $k | sd '/' '\\' | sd '\\mnt\\c' 'c:' | clip
se 'ax'
tmux list-sessions
printf '%s' thi is
printf '%s\n' thi is
printf \"
printf \\ 
printf "jim"
printf "$k"
cat "$HOME/.cargo/env"
printf "$k\n" | sd 'ff' ''
k=$(pwd)
printf "$k\n"
printf "$k\n" | sd '\/' '\'
printf "$k\n" | sd '/' '\' | sd '\mnt\c' 'c:\'
printf "$k\n" | sd '/' '\' | sd '\\mnt\\c' 'c:\\'
printf "$k\n" | sd '/' '\' | sd '\\mnt\c' 'c:\\'
printf "$k\n" | sd '/' '\' | sd '\\mnt\\c' 'c:\'
printf "$k\n" | sd '/' '\'
printf "$k\n" | sd '/' '\' | sd '\\mnt\\c\\' 'c:\'
printf "$k\n" | sd '/' '\' | sd '\\mnt\\c\\' 'c:\' | clip
git commit -m 'initial clean init.vim'
fd -H -I -d 1 -d 1
fd -H -I -d 1 
fd -H -I -d 1 --changed-within=10mins
fd -H -I -d 1 --changed-within=20mins
mv init2 init2.vim
git commit -m "first cleanup"
sc pwd
tail .bashrc
sh pwd
shopt expand_aliases
type -a clip
source pwd
ls |  win32yank.exe -i
source "$HOME/.cargo/env"
echo $K
k=$(pwd)\nprintf "$k\n" | sd '/' '\' | sd '\\mnt\\c\\' 'c:\'
echo 'jim' | clip
source ~/pwd
v pwd
mv pwd pwd.sh
chmod +777 pwd.sh
mv pwd.sh pwdw.sh
~/pwdw.sh
c:\you
printf '%s' $PATH | sd ':' '\n'
alias ppath="printf '%s' $PATH | sd ':' '\n'"
ppath
ppath | column
mv pwdw.sh pys
pwdw
cd ../all
fd --changed-within=2days | xargs stat | less
fd --changed-within=2days
v pys/pwdw.sh
cd dots
trash dots
v setup.sh
b .bashrc
pwdw.sh
rg 'path'
rg 'path' | less
rg -m 1 'path' | less
rg -m 0 'path'  
rg -m 1 'path'  
rg -m 1 'Path'  
rg -m 1 'PATH'  
v etc
trash etc
rg -H -I --max-depth 1 path
rg --max-depth 1 path
rg --max-depth 1 path .bashrc
rg --max-depth 1 'P.*' .bashrc
rg --max-depth 1 'P.*' 
rg --max-depth 1 'PA.*' 
rg --max-depth 1 'PA.*' | less
bat echo
batcat /etc/passwd
rg --max-depth 1 'PA.*' | batcat
lt | batcaqt
lt | batcat
alias less="batcat"
fd | less
v .bash_aliases
lt | less
man batcaqt
fd -H -I | less
rg wwaxm
rg wwaxm .bashrc
rg export .bashrc
rg export .bashrc .bash_aliases
rg "al.*" .bashrc .bash_aliases
rg "al.*" .bashrc .bash_aliases | less
fd -H -I -d 1 | rg "env"
fd -H -I -d 1 -x rg "env"
fd -esh -H -I -d 1 -x rg "env"
fd -esh -H -I -d 1 -x rg "fru.*"
fd  -H -I -d 1 -x rg "fru.*"
fd  -H -I -d 1 -x rg "frumious.*"
fd  -H -I -d 1
fd  -tf -H -I -d 1 -x rg "frumious.*"
fd  -tf -H -I -d 1
v c.sh
rg 'a.*'
fd -tf -esh 
v d.sh
fd -tf -esh -x rg 'fru.*'
fd -tf -esh -x rg -H 'fru.*'
fd -tf -esh -x rg -H -n 'fru.*'
fd -tf -esh -x rg -H -n 'f.*'
fd -tf -esh -x rg -H -n 'account'
fd -tf -epy -x rg -H -n 'account'
fd -tf -esh -x rg -H -n 'printf'
bat o
batcat 0
fd -H -I -tf -esh -x rg -H -n 'printf' | less
fd  -tf -esh -x rg -H -n 'printf' | less
fd  -tf -epy -x rg -H -n 'mp' | less
fd  -tf -epy -x rg -H -n 'mpe' | less
fd  -tf -epy -x rg -H -n 'mp3' | less
fd  -tf -epy -x rg -H -n 'mp3' | less #cool rg find
fd  -tf -epy -x rg -H -n 'mp.*' | less #cool rg find
v mesa-overlay-control.py
fd  -H -I -tf -epy -x rg -H -n 'mp.*' | less #cool rg find
v usr/lib/python3.10/asyncore.py
fd -esh -x shellcheck | v -
fd -d 1 '\.'
fd -d 1 '^\.'
fd -H -I -d 1 '^\.'
fd -H -I -d 1 '^\.' -x rg 'echo'
fd -H -I -d 1 '^\.' -x rg -H 'echo'
fd -H -I -d 1 '^\.' -x rg -H 'echo' | v -
fd -H -I -d 1 '^\.' 
fd -tf -H -I -d 1 '^\.' 
fd -tf -H -I -d 1 '^\.' -x rg -H 'echo' | v -
fd -tf -H -I -d 1 '^\.' -x rg -H 'echo'
fd -tf -H -I -d 1 '^\.' -x rg -H 'echo.*p'
fd -tf -H -I -d 1 '^\.' | column
umask
help ls
sudo help ls
tldr ls
rg all
rg all 'git.*all'
rg 'git.*all'
fd -tf -H -I -d 1 '^\.' -x rg -H 'git.*all'
fd -tf -H -I -d 1 '^\.' -x rg -H 'git.*wsl'
fd -tf -H -I -d 1 '^\.' -x rg -H 'git'
fd -esh -x rg -H 'git'
fd -esh --changed-within=1weeks
fd -tf -H -I -d 1 '^\.' -x rg -H 'import'
fd -tf -H -I -d 1 '^\.' -x rg -H 'important'
fd -tf -H -I -d 1  -x rg -H 'important'
chmod +777 gitAll.sh
\rm jjj
git show | wc
git diff --stat
git commit -m "whis work"
curl "https://raw.githubusercontent.com/wither7007/all_wsl/main/whis" | v -
declare -a omz_history
declare -f omz_history
printf '%s' "$HISTFILE"
b ~/.bashrc
se 'ln.*py'
se '.*py'
se '.*py' | less
git checkout f66d405
wi yt-dlp
v /usr/local/bin/yt-dlp
se 'ln'
wi python
ln /usr/bin/python3.10 python
ln -s /usr/bin/python3.10 python
fd -tx 'pyth'
fd -tx | column
man fc-conflict
man perlbug
man ntfswipe
fd -tx | rg 'what'
man whatis
whatis systemd
sh con.sh 'C:\Users\jayst\OneDrive\Documents\MuseScore3\Scores'
sh con.sh 'C:\User'
se '777'
chmod +777 con.sh
./con.sh jim
jim=<<con.sh
echo ppo> poo
jim=<poo
jim=<<poo
find '' 2> stderr_log.txt
bat stderr_log.txt
cat stderr_log.txt
man tee
ls jjjjj 2>nn
fd -tf --changed-within 10minx
fd -tf --changed-within 10mins
sed -e 's~\\~/~g' -e "s/\([CD]\):/\L\1/" -e "s/^/\/mnt\//g"  "c:\"
v con.sh
chmod +777 cdwin
cdwin 'C:\Users\win\Documents'
./cdwin 'C:\Users\win\Documents'
./cdwin 'C:\Users\'
./cdwin 'C:\Users'
./cdwin 'C:\'
cd $(./cdwin 'C:\Users\jayst\OneDrive\Documents\MuseScore3\Scores')
./cdwin 'C:\Users\jayst\OneDrive\Documents\MuseScore3\Scores'
pp() {cd ~}
type -a pp
pps() {cd ~}
xxx() { cd /mnt/c }
{\nline=$(sed -e 's~\\~/~g' -e "s/\([CD]\):/\L\1/" -e "s/^/\/mnt\//g" <<< "$1")\necho $line\ncd $line\necho  "cd $line" \n: 1663467356:0;cdwinx()\nline=$(sed -e 's~\\~/~g' -e "s/\([CD]\):/\L\1/" -e "s/^/\/mnt\//g" <<< "$1")\necho $line\ncd $line\necho  "cd $line" \n: 1663467475:0;cdwinx 'c\'
cdwinx 'c:\'
v cdwin
type -a cdwinx
type -f cdwinx
cd MuseScore3
cd Scores
test 1000 -gt 100
test 1000 -gt 1000
echo /n
echo -e /n
manv
echo -E jim/n/n
echo jim/n/n
manv echo
echo \n\n
echo -e \n\n
echo jim
echo -n jim
type -a echo
type -a fd
which history
whence history
printf "Enter your name:\n"
printf "Enter your name:\n"; read name
printf "Enter your name:\n"; read name; printf 'hi %\n' "%name"
printf "Enter your name:\n"; read name; printf 'hi %\n' "$name"
printf $name
printf '%s\n' "$name"
printf ' ' "$PATH"
printf '%s' "$PATH"
printf '%s\N' "$PATH"
printf '%s\n' "$PATH"
printf '%s\n' "$PATH" | sd ':' '\n'
echo '\' '\\'
echo '\' 'x'
ad '\' 'x'
sd '\' 'x'
sd '\\' 'x'
v abc
type -a sd
sd 'a' 'xxx' abc
sd 'xxx' 'a' abc
cat abc
printf '\\'
printf 's%\n' '\\'
printf 's%\n' 'jim'
printf 's%\n' jim
printf 'jim\n'
printf 'good morning\n how are you'
printf 'good morning\n how are you\n'
printf 'good morning\nhow are you\n'
printf 'today is \t$(date)'
printf 'today is \t$(date)\n'
bash -c "printf 'Today is %(%F)T\n' -1"
printf 'Today is %(%F)T\n' -1
printf 'Today is %(%F)T\n' 
printf "%'d\n" 22
printf "%'d\n" jim
printf "%'d\n" 22222
printf "%'d\n" 22222222222
sh time
zsh time
bash time
time bash
se 'git.*diff'
se 'git.*-p'
git log -p
git log -p 0
git log -p 1
git log -p | v -
type -a duh
fd -H -I -td -x du -hs
fd -H -I -td -x du -hs | rg -v '^0'
fd -td -x du -hs
fd -d 1 -H -I -td -x du -hs | rg -v '^0'
rm -rf mp4
mv The\ Logical\ Structure\ of\ Human\ Civilization\ \(John\ Searle\).mp3 /mnt/c/you/lazy
v system-back.tgz
rm system-back.tgz
git commit -m "local commits'
git commit -m "local commits"
git branch -vv
git branch -v
se 'git.*origin'
se 'git.*dif.*origin'
alias fdfind='fd'
fdfind 
type -f cha | v -
cha () {\n\tfd -H -I --changed-within $1mins | rg -v '\.git' | rg -v '\theia'\n: 1663542298:0;type -a fdfind
source gcloud_fun
cha () {\n\tfd -H -I --changed-within $1mins | rg -v '\.git' | rg -v '\theia'\n}cha () {\n\tfd -H -I --changed-within $1mins | rg -v '\.git' | rg -v '\theia'\n}cha () {\n\tfd -H -I --changed-within $1mins | rg -v '\.git' | rg -v '\theia'\n}cha () {\n\tfd -H -I --changed-within $1mins | rg -v '\.git' | rg -v '\theia'
v fun
mkcd() { mkdir -p -- "$1" && cd -P -- "$1"; }
mkcd delete
alias sc='source '
take wp2
gch 20
wi fdfind
rm poo stderr_log.txt
bash exi.sh
chmod +777 exi.sh
v exi.sh
./exi.sh
printenv | rg -v path
printenv | rg -v path | rg -v ls_
printenv | rg -v path | rg -v lscol
printenv | rg -v path | rg -v PAGE
printenv | rg -v path | rg -v LS_
fd -H 'z'
cha 60
v googleFun.txt
cha() {\n   fd -H -I --changed-within $1mins | rg -v '\.git' | rg -v '\theia'\n: 1663556714:0;cha 90
git -am "pointless"
git commit -am "pointless"
rg 'docker' gcloud_his
rg 'docker' gcloud_his gcloud_als
rg 'do.*' gcloud_his gcloud_als
allh(){ rg $1 gcloud_his gcloud_als ~/.bash_history }
se 'dock'
allh 'd.*'
rg 'do.*' gcloud_his gcloud_als ~/.bash_history
allh(){ ~/.bash_history }
allh 'd.*' | less
allh(){ rg $1 ~/.bash_history }
allh 'dock'
allh dock
type -f allh
rg 'do.*' ~/.bash_history
allh 'do.*' | less
allh '^rg' | less
fd -d 1 -H -I --change-older-than 2hours  | xargs -n1 ls -lhrt
fd -d 1 -H -I --change-older-than 2hours  
fd -d 2 -H -I --change-older-than 2hours  
fd -d 2 -H -I --change-older-than 2hours  | less
se 'cha'
type -a omz_history
rg 'do.*' $HISTFILE
printf '%s\n' "this is 11:03"
allh(){ rg $1 $HISTFILE }
allh 'cha' | less
allh 'cha' 
allh '11' 
rg 'type' $(hi |  cut -c 1-7 --complement)
a= $(hi |  cut -c 1-7 --complement)
hi |  cut -c 1-7 --complement
a= $(history |  cut -c 1-7 --complement)
k=omz_history
k=$(omz_history)
echo $k | v -
printf '%s\n' "bandersnatch"
rg 'bandersnat' $HISTFILE
rg 'bandersnat' $HISTFILE $HISTFILE
rg 'bandersnat' $HISTFILE ~/.bash_history
rg 'ls' $HISTFILE ~/.bash_history
rg 'quotes' $HISTFILE ~/.bash_history
rg 'quotes'  ~/.bash_history
rg 'quote' $HISTFILE ~/.bash_history
rg 'quote' $HISTFILE ~/.bash_history /mnt/c/all/gcloud_his
rg 'dock' $HISTFILE ~/.bash_history /mnt/c/all/gcloud_his
rg 'dock' $HISTFILE ~/.bash_history /mnt/c/all/gcloud_his | v -
rg 'dock' $HISTFILE  /mnt/c/all/gcloud_his 
rg 'dock' /mnt/c/all/gcloud_his $HISTFILE
rgg() { rg $1 /mnt/c/all/gcloud_his $HISTFILE }
rgg 'dock'
rgg 'qote'
rgg 'band'
rgg 'wordpress'
rgg 'dock.*rmi'
lt ~/
~/functions.sh
rgg 'ls.*a'
rg 'dock' /mnt/c/all/gcloud_his
rg 'do.*rmi' /mnt/c/all/gcloud_his
se 'do.*rmi'
history -a
se '32.*yank'
sh ~/functions.sh
rgg () { rg $1 /mnt/c/all/gcloud_his $HISTFILE }
rgg 'ls'
rgg 'quote'
rgg 'declar'
rgg 'declar' | v -
rg 'decl' /mnt/c/all/gcloud_his
rg 'ls' /mnt/c/all/gcloud_his
rg 'type' /mnt/c/all/gcloud_his
declare -a testvar
testvar=$(ls)
echo $testvar
echo $testvar[0]
for i in "${testvar[@]}"; do echo $i; done
echo ${testvar[2]}
printf ${testvar[2]}
printf '%s/n' ${testvar[2]}
printf '%s\n' ${testvar[2]}
for i in "${testvar[@]}";kk=1; do echo $i $k; done
for i in "${testvar[@]}";kk=1; do echo $i; do echo $k; done
k=20
j=30
echo $k $j
echo "$k $j"
for i in "${testvar[@]}";kk=1; do echo "$i $kk"; done
for i in "${testvar[@]}";kk=1; do echo "$i"; done
kk=11;for i in "${testvar[@]}"; do echo "$i"; done
kk=11;for i in "${testvar[@]}"; do echo "$i $kk"; done
echo "$kk"
printf "$kk"
printf '%s\n' "$kk"
printf '%s\n' "$kk $i"
cat /usr/bin/env
fd mnt
fd fu
fd -tx | sort | column | less
man tsort
man gs
man gyp
man true
true
filename() {\n  local fpath=${1:?path is missing} && \\n  echo ${fpath##*/}\n: 1663566403:0;filename
filename x-www-browser
filename ~/functions.sh
spaceusage() {\n  du -hs ${1:-.}/* ${1:-.}/.[ | sort -h;\n: 1663566645:0;ls -lSrh
man mysql_embedded
type -f me
unalias me
me() {\n  $(id -un):$(id -gn)@$(hostname -s)\n: 1663566780:0;me
id -un
hostname
id -u
id -g
spaceusage() {\n  du -hs * .[ | sort -h\n: 1663566901:0;spaceusage
cd var
du -hs | sort -h
take p
touch (a,b,c,d)
touch {a,b,c}
touch file(1..100}
touch file_(1..100}
touch x_{1..100}
ls | sort -n1
ls | sort -rs
ls | sort -g
manv sort
fd '6\d'
fd '6\d' | xargs rm
fd '7\d' | mv sd 'file' 'new'
fd '7\d' | xargs | mv sd 'file' 'new'
ls | sd 'file' 'xxxxx'
ls | rename 'file' 'xxxxx'
ls | rename 'fil' 'xxxxx'
touch {A..Z}
cat A
touch {a..Z}
lspaceusage() {\n  du -hs * .[ | sort -h\n: 1663608273:0;a="French philosopher, scientist, and mathematician, widely"
echo $a | sd '\s' '\n'
touch $a
ls | wc -l
ls -1
chmod +777 *_tome*
chmod +777 *t
ls *t
chmod 000 *t
cat tome\}_
touch {a..p}
\rm {a..p}
touch {one, tow, three}
touch {apple, bana, joe, tome}_{0..100}{w..d}
touch {apple, bana, joe, tome}
touch (jim, tom)
p3 -m venv mp4
bash yv.sh 2> err
fd 'pyth'
fd -d 1 'pyth'
v /home/steff007/.local/bin/yt-dlp
md /mnt/c/you/bash
md xx
cp -v * xx
fd -d 1 '2\d' -x chmod +000
chmod 000 {a..c}
chmod 000 {a..c} <2 rrr
chmod 000 {a..c} 2>rrr
v rrr
fd -d 1 '2\d' -x chmod 777
fd -d 1 '2\d' -x chmod 000
v file_21
\rm file_21
fd &>jjj
lsss &>jjj
find &>jjj &
lt | akw {'print $3'}
lt | awk {'print $3'}
echo $MACHTYPE
echo $BASH_VERSION
echo $SECONDS
printf "$SECONDS"
printf '%s/n' "$SECONDS"
printf '%s\n' "$SECONDS"
printf "%'d %'d\n" "$SECONDS"
man numfmt
echo [[ 1 =1 ]]
echo "[[ 1 = 1 ]]"
[[ 1 = 2 ]]
[[ 1 = 1 ]]
safa
se 'lnl'
fd -d 1 '\s'
fd -d 1 '\s' -exec rename "s/ /_/g"
exiftool -T -Description Advanced_Bash_Scripting_Tutorial.mp4.part
fd 'adv'
fd 'part' -exec rename "s/\.part//g"
gcc --version
gcc -V
take c
v hello.c
gcc hello.c -o h
./h | less
\rm -rf c
sudo rm *
printf {1..10}
printf '%s\n' word{1..10}
printf '%s\n' wordecho_{1..10}
printf 'the %s\n' wordecho_{1..10}
$a=0
while [ $a -le 5 ]; doc echo ok; done
while [ $a -le 5 ]; do echo ok; done
while [ $a -le 5 ]; do echo ok; echo jim done
while [ $a -le 5 ]; do echo ok; echo jim; done
while [ $a -le 5 ]; do echo ok; echo jim; a=$(( $a+1)); done
jim=steffes
set | rg 'ste'
set | rg 'steffes'
echo $path
while [ $a -le 5 ]; do echo ok; echo jim; $(( $a++)); done
while [ $a -le 5 ]; do echo ok; echo jim; a=$(( $a++)); done
x = 2
echo "$((a++))"
echo "$(( a++ ))"
set | rg a
set | rg a=
echo thi is
echo thi is(
echo thi is\(
echo thi is\(\$
echo thi is\(\$\n
echo -e thi is\(\$\n
echo "this (is"
fd '\s' -exec rename "s/ /_g"
exiftool Advanced_Bash_Scripting_Tutorial.mp4
rm python3
rm output
rm Advanced_Bash_Scripting_Tutorial.mp4
echo 0?
echo ?0
[[ a > b ]] 
[[ a > b ]] || echo "a does not come after b"
[[ c > b ]] || echo "a does not come after b"
[[ a > b ]] || echo "a does not come after b" && echo "it does"
[[ c > b ]] || echo "a does not come after b" && echo "it does"
name=andy
[[ $name = a* ]] || echo "name does not start with an 'a': $name"
ls aa
[[ -f aa ]] || echo aa exists
if [[ -f aa ]] then echo yes\n: 1663650613:0;rm *
sh nn
sh nn a
bash nn
chmod 777 nn
ls ..
./nn ~/hist.tar
./nn ~/hist.tars
chmod 000 a
./nn a
fd . ~
fd . -td ~
v $(printf '%s\n' "$HISTFILE")
echo $USER
echo $USER | rg 's'
echo [[ 1 = 1 ]]
if [ 'zsh' = 'zsh' ]; then echo zsh; fi;
if [ $USER = 'steff007' ]; then echo steff007; fi;
if [ ! $USER = 'steff007' ]; then echo steff007; fi;
if [[ ! $USER = 'steff007' ]]; then echo steff007; else echo not steff007; fi;
if [[  $USER = 'steff007' ]]; then echo steff007; else echo not steff007; fi;
uname -a | rg 'wsl'
uname -a | rg '2'
uname -a | rg 'WSLxxx'
ehis
type -a ehis
alias hist='hi |  cut -c 1-7 --complement > ~/hist
alias hist='hi |  cut -c 1-7 --complement > ~/hist'
hist
v ~/hist
uname -a | rg 'WSL'
sh pp
uname
bash pp
alias fd
cat pp
chmod 777 pp
chmod 000 pp
printf '%s\n' "$HISTFILE"
printf '%s\n' $PATH
printf '%s\n' $(ls)
printf '%s\n' $(ld)
find . -type f -name '*.mp4' -exec echo {} \;
find . -type f -name '*.mp4' -exec exiftool {} \;
find . -type f -name '*.mp4' -exec exiftool {} \; > alls
find . -type f -name '*.mp4' -exec exiftool {} | rg 'desc' \; > alls
rm Bash\ Scripting\ Full\ Course\ 3\ Hours.mp4
find . -type f -name '*.mp4' -exec exiftool {} | rg 'desc' \;
fd -emp4 -x exiftool
fd -emp4 -x exiftool | rg "desc"
fd -emp4 -x exiftool | jq '.'
fd -emp4 -x exiftool 
fd -emp4 -x exiftool > alls
v alls
exiftool Advanced_Bash_Scripting_Tutorial.mp4 | rg 'desc'
exiftool Advanced_Bash_Scripting_Tutorial.mp4 | rg 'Desc'
exiftool Advanced_Bash_Scripting_Tutorial.mp4 | rg '^Desc'
fd -emp4 -x exiftool | rg "Desc"
fd -emp4 -x exiftool | rg "^Desc"
fd -emp4 -x exiftool | rg "^Desc" > all
fd -emp4 -x exiftool -j | rg "^Desc" > all
man exiftool
exiftool -j Advanced_Bash_Scripting_Tutorial.mp4
fd -emp4 -x exiftool -j  > all
fd -emp3
fd -emp3 -x exiftool -j  > all
fd 'sister'
fd 'mile'
fd -tf '\s'
fd -tf -v '\s'
fd -tf | rg -v '\s'
fd 'ouput'
fd 'output'
fd 'output' | xargs cat
lLong Description                : Try our Bash Boot Camp Course to really uplevel your bash skills//linuxhint.info/3Hje2Hv..Or join our Linux Hint Community with access to all our courses and a community forum where you can interact with our instructors: https://www.linuxhint.io/bundles/linux-hint-community..In this FREE Bash Scripting Course, you will learn from printing a simple “Hello World” to using conditional statements such as if statements, case statements to using loops such as while, for and until loops to using awk, sed and debugging bash scripts. All in all, we will learn and cover the following topics:..1-Hello Bash Scripting.2-Redirect to file.3-Comments.4-Conditional Statements.5-Loops.6-Script input.7-Script output.8-how to send output from one script to another scrpt.9-String Processing.10-Numbers and Arithmetic.11-Declare Command.12-Arrays.13-Functions.14-Files and Directories.15-Send Email Via Script.16-Curl in Scripts.17-Professional Menus.18-Wait for filesystem events with inotify.19-Introduction to grep.20-Introduction to awk.21-Introduction to sed.22- Debugging bash scripts..Link to written article on this course:.https://linuxhint.com/3hr_bash_tutorial/t
fdsh
find -perm 000
find -perm /u=r
find -perm /u=x
find -cmin -60
find -cmin -360
find -cmin -360 | xargs cat
find -cmin -360 | xargs bat
find -cmin -360 | xargs echo
find -cmin -360 | xargs printf '%s\n'
find -cmin -1360 | xargs printf '%s\n'
find -cmin -11360 | xargs printf '%s\n'
alias cat
find -cmin -360 | xargs batcat
find type f -cmin -360 | xargs batcat
find -type f -cmin -360 | xargs batcat
find -type f -cmin -360 | xargs printf '%s\n'
find -type f -cmin -360 | xargs printf 'cat %s\n'
find -type f -cmin -360 | xargs printf 'cat %s\n' > jjj
bash jjj
cat jjj
v ./.local/share/nvim/shada/main.shada
cat /dev/sda
ls /dev/sda
ls -lhrt /dev/sda
fd -x stat --printf='%s\n'
fd -x stat --printf='%s\n' | column
fd -x stat --printf='%n - %s\n' | column
fd -x stat --printf='%n - %s\n' | sort | column
fd -x stat --printf='%n - %s\n' | sort 
fd -x stat --printf='%n - %s\n' | sort | rg -v '-\s0'
fd -x stat --printf='%n - %s\n' |  rg -v '-\s0' | sort
lt | rg -v '0'
lt | rg -v '^a'
stat LNL194.mp3
exiftool LNL194.mp3
exiftool LNL194.mp3 | jq '.'
exiftool -j LNL194.mp3 | jq '.[]'
exiftool -j LNL194.mp3 | jq '.[].FileType'
exiftool -j LNL194.mp3 | jq '.' | v -
exiftool -j LNL194.mp3 | jq '.' | keys
exiftool -j LNL194.mp3 | jq 'keys'
exiftool -j LNL194.mp3 | jq 'keys[]'
exiftool -j LNL194.mp3 > jq.json
jq 'keys' jq.json
cat jq.json 
jq '. | keys' jq.json
jq '.[] | keys' jq.json
jq '.[] | keys' jq.json | v -
exiftool -j LNL194.mp3 | v -
echo '{"data": "1", "user": { "name": 2, "phone": 3 } }' | jq '.user | keys[]'
echo '{"data": "1", "user": { "name": 2, "phone": 3 } }' | jq -r 'keys'
exiftool -j LNL194.mp3 | jq '[].'
exiftool -j LNL194.mp3 | jq '.'
exiftool -j LNL194.mp3 | jq '.Year'
exiftool -j LNL194.mp3 | jq '[].Year'
exiftool -j LNL194.mp3 | jq '.[] | .Year'
exiftool -j LNL194.mp3 | jq '.[] | .Year .Title'
exiftool -j LNL194.mp3 | jq '.[] | .Year, .Title'
exiftool -j LNL194.mp3 | v -\n: 1663731834:0;cat jqs
h3 | tail
manv 
rg python3
rg python3 .bashrc
vim .bashrc
source .bashrc
cat .bash_aliases
fd -H -I 'alias'
fd -H -I 'b.*alias'
fd -H -I '*.gz\n: 1663732417:0;fd -H -I '*.gz'
fd -H -I '.*gz'
fd -H -I '.*gz$'
v thr.tar.gz
nvim thr.tar.gz
unalias fd
f1 | xargs stat
fd -H -I -S +10M -x stat --printf='Name: %n Size: %s\n'
fd  -S +9K -x stat --printf='Name: %n Size: %s\n'
git diff main origin/main | v -
git diff main origin/main 
printenv | rg pag
printenv | rg Pag
export PAGER=batcat
git diff main origin/main | less
batcat o
batcat 
printenv | rg PAG
man batcat
export PAGER=nvim
export PAGER=less
cd vscode
sh vs.sh
compgen
type -a compgen
type -a compgen | v -
v /home/steff007/.oh-my-zsh/lib/completion.zsh
cd /home/steff007/.oh-my-zsh/lib/
v functions.zsh 
v grep.zsh
v clipboard.zsh
v misc.zsh
type -a rg
wi ripgrep
se () {    history | rg $1 }
alias se
unalias se
se 'stat.*pr'
fd  -S +9K -x stat --printf='Name: %n Size: %s Acess: %x\n'
fd 'rnd.sh' -x stat --printf='Name: %n Size: %s Acess: %x\n'
lt rnd*
fd 'his.bak' -x stat --printf='Name: %n Size: %s Acess: %x\n'
fd 'goo.his' -x stat --printf='Name: %n Size: %s Acess: %x\n'
fd 'goo.his'
cat goo.his
fd -H -I 'goo.his' -x stat --printf='Name: %n Size: %s Acess: %x\n'
ls -lu | less
cat Bash_Scripting_Full_Course_3_Hours.mp4
v all
fd -H -I 'bash.*' -x stat --printf='Name: %n Size: %s Acess: %x\n'
cd funnyv
fd -H -I  -x stat --printf='Name: %n Size: %s Acess: %x\n'
fd -H -I  -x touch
fd -exec rename "s/ /_/g"
fd -exec rename "s/'//g"
fd -exec rename "s/-//g"
fd -exec rename "s/,//g"
fd -exec rename "s/
fd -exec rename "s/\!//g"
fd -exec rename "s/\==//g"
fd "^a-z"
fd "^a"
fd "[^a]"
fd "[^a-z]"
fd "[^a-z0-9]"
touch L
cd monk
take -a pwd
rm -rf pwd
fd  -exec rename "s/[_mp3]/\.mp3/g"
se 'ls.*u'
fd '\.{2}mp3'
rm -rf -a
rm -rf \-a
fd "[^a-zA-Z0-9]" -exec rename "s/[^a-zA-Z0-9]/_/g"
fd "\-a"
fd "\-a" exec mv b
fd "\-a" -exec mv b
mv ./-a b
rm -rf b
mv Blue__mp3_mp3_mp3Monk__mp3_mp3_mp3__mp3_mp3_mp3 Blue.mp3
mv Be__mp3_mp3_mp3sha__mp3_mp3_mp3Swing__mp3_mp3_mp3__mp3_mp3_mp3__mp3_mp3_mp3__mp3_mp3_mp3 a
mv Blue__mp3_mp3_mp3Monk__mp3_mp3_mp3__mp3_mp3_mp3Rudy__mp3_mp3_mp3Van__mp3_mp3_mp3Gelder__mp3_mp3_mp3Re__mp3_mp3_mp3aster__mp3_mp3_mp3__mp3_mp3_mp3__mp3_mp3_mp3__mp3_mp3_mp3__mp3_mp3_mp3 x
cd you/monk
fd "" -exec rename 's/__mp3{2}//g'
for a in {1..5};do fd "" -exec rename 's/__mp3//g'  do fd "" -exec rename 's/__mp3//g'; done
for a in {1..5};do fd "" -exec rename 's/__mp3//g'; done
fd "" -exec rename 's/__mp3//g'
for a in {1..5};do fd "" -exec rename 's/_mp3//g'; done
rename * *.txt
manv rename
rename 's/$/.mp3/' *
exiftool -j x.mp3|v-
exiftool -j x.mp3 | v -
rm x.mp3 Blue.mp3
mv x.mp3 Blue.mp3
exiftool -j a.mp3 | v -
exiftool -j a.mp3 | jq '.[] | .Year, .Title'
touch a\s
touch a\ s
rm as
rm a\ s
exiftool -j a.mp3 | jq '.[] | .Year, .Title' | sd '"' ''
mv a.mp3 Bemsha_Swing.mp3
v ~/.bash_history
fd -a -H -I 'oh.*z'
echo "Goethe took up residence in Weimar in November 1775 following" | sd ' ' '\n'
take reg
echo "Goethe took up residence in Weimar in November 1775 following" | sd ' ' '\n' > file
cat file | grep a
cat file | grep e
cat file | grep ^i
cat file | grep $e
cat file | grep e$
cat file | rg e$
echo "\napple" >> file
cat file | rg p
cat file | grep p
cat file | grep p\{2}
cat file | grep -E p\{2}
cat file | grep -E p{1}
cat file | grep p{2}
cat file | grep -E p{2}
cat file | grep -E "a"
cat file | grep -E "a\+"
cat file | grep -E "p\+"
cat file | grep -E "p+"
cat file | rg "p{2}"
cat "appppppppp" >>file
echo "appppppppppppp" >> file
cat file | rg "ap{2}"
cat file | rg "ap{3}"
cat file | rg "ap+"
cat file | rg "ap{3,3}"
cat file | rg "ap{3,}"
cat file | rg "\n"
wi rg
which rg
cat file | rg '\n'
cat file | rg 'oe'
echo "\n\n\n" >> file
cat file | rg '\r'
cat file | grep '\n'
export prompt=$
export prompt=$ 
export prompt=$_
export prompt='$_'
PS1="\`if [ \$? = 0 ]; then echo \[\e[33m\]^_^\[\e[0m\]; else echo \[\e[31m\]O_O\[\e[0m\]; fi\`[\u@\h:\w]\<strong>\$</strong> "
PS1=" WHAT "
PS1="[\[\033[32m\]\w]\[\033[0m\]<strong>\n</strong>\[\033[1;36m\]\u\[\033[1;33m\]-> \[\033[0m\]"
PS1="$ "
echo "$PS1"
grep PS1 ~/.bash_profile
grep PS1 ~/etc/profile
grep PS1 /etc/profile
PS1='\h:\q\$ '
unset PS1
PS1="\d \h $ "
se 'PROMPT'
se 'prompt'
PROMPT='%F{green}%*%f %F{blue}%~%f %F{red}${vcs_info_msg_0_}%f$ '
fd -H -I 'oh.*z'
printf '%s\n' "from omyz"
printf '%s\n' "${0##*/}"
printf '%s\n' "shell is ${0##*/}"
printf '%s\n' "shell is ${0}"
v oh-my-zsh.sh
printenv
v Passphrases2.txt
cat me
v me
mv me mes
ipysql
ipysql.py
ipyv kk
dif ipy.sh ipy
diff ipy.sh ipy
diff ipy.sh one
ip --verwsion
ipython
wi ip
v kk
cat ipysql.py
take ipython
p3 -m venv ipy3
p3 -m pip install --upgrade pip
pip install ipython
ipy.sh
rm ipy.sh
source ipy3/bin/activate
manv rg
rg --max-depth 1 'zsh'
rg --files --max-depth 1 'zsh'
rg -l --max-depth 1 'zsh' | xargs echo
rg -l --max-depth 1 'zsh' | xargs head -n 2
rg -l --max-depth 1 'zsh'
chmod 000 zcorrupt.sh
chmod 777 zcorrupt.sh
fd | xargs chmod 777
rg -l --max-depth 2 'zsh'
rg -l --max-depth 3 'zsh'
rg -l  'zsh'
v ipython/ipy3/bin/activate
rg -l  'steffes'
rgh | v -
rg -l --no-ignore  'steffes'
rg -l --no-ignore  'steffes' hist
rg  --no-ignore  'steffes' hist
rg  --no-ignore  'steffes' 
rg  --no-ignore  'steffes' | less
ls his.bak
lt his.bak
v his.bak
stat his.bak
lst h*
lt h*
fd -d 1 'shell'
fd -d 1 'shell' | clip
fd -d 1 'shell' | cl
ipy3/bin/activate
sc ipy3/bin/activate
fd -a 'ipy$'
fd -a 'ipy$' | cl
fd 'read'
fd 'read' -exec rename "y/a-z/A-Z/"
fd 'read' -exec rename "s/A-Z/a-z/"
fd 'read' -exec rename "y/A-Z/a-z/"
fd 'read' -exec rename "y/a-z/A-Z/" #!cool uppercase rename
ls fun*
fd --changed-within=2hours
fd --changed-within=24hours
cha 160
cha 160 | rg -v 'pyth'
cha 160 | rg -v 'pyth' | rg 'cac'
v mes
cha 160 | rg -v 'pyth' | rg -v 'cac'
\rm Passphrases2.txt kk mes
v pys/ipy_linux3
cd ipython
fd 'activate'
fd 'activate$'
fd 'activate$' | cl
v README.TXT
rg '!'
rg '!$'
v ipy3/bin/activate
hash | less
wi zip
wi znew
man znew
man zipinfo
hash | column
fd -H -td | column
hit() { history | tail -n $1 }
hit 20
cp .ignore .gitignore
git commit -am "start"
v ddh.txt
git rm ddh.txt
git rm ddh.txt -f
cd .
ls -la .g*
fd -H -H "\.git"
fd -H -I "\.git"
fd -d 1 -H -I "\.git"
cd .oh-my-zsh
git stats
git log stats
git log stat
git checkout e8f4eb0175c
cp yester.txt ../you
v yester.txt
cd .Trash/apps
v backup
cd  backup
cat ata.txt
\rm -rf backup
cd reg
git status -vv
fd -H 'alias'
fd -H -a 'alias'
fd -H -a 'alias' | cl
v whis
git commit -am "added wsl aliases"
docker images
se 'docker'
docker exec -ti my-sql sh -c "echo a && echo b"
docker exec -ti my-sql sh -c "uname a"
name -a
docker exec -ti my-sql sh -c "uname -a"
docker images ps
docker images ps -aOracle Linux Server
docker images ps -a
docker run mysql
se 'docker.*stop'
docker rm $(docker ps -a -q)
docker run --name my-sql -p 3306:3306 -e MYSQL_ROOT_PASSWORD=stars1 -d mysql
se 'docker.*'
docker exec -ti my-sql sh -c "bash"
docker stop my-sql
se 'docker.*rm'
docker rm mysql
docker rm my-sql
docker pull ubuntu/mysql
tmux ls -all
tmux ls 
tmux w
tmux info
tmux info | less
tmus list-keys
tmux list-keys
se 'docker.*run'
docker run --name ubuntu/mysql -p 3306:3306 -e MYSQL_ROOT_PASSWORD=stars1 -d mysql
docker run --id 933bb3304ce5 -p 3306:3306 -e MYSQL_ROOT_PASSWORD=stars1 -d mysql
docker run -d -p 3306:3306 -e MYSQL_ROOT_PASSWORD=stars1  9eebb3304ce5
docker run -d -p 3306:3306 -e MYSQL_ROOT_PASSWORD=stars1  9eebb3304ce5 #!good my sql?
se 'docker.*ex'
docker exec -ti optimistic-noether -c "bash"
docker exec -ti  optimistic_noether -c "bash"
docker exec -ti  optimistic_noether sh -c "bash"
fd -H -I activ
head first.sql
docker stop 9eebb3304ce5
docker stop wizardly_hugle
docker rm wizardly_hugle
docker stop optimistic_noether
docker start optimistic_noether
basw
cd you/bash
watch lt
watch ls -lhrt
fd -td | column
docker image ls -a
docker image ls -a | v -
docker image rm 43fcfca0776d
fd -H -I -eyml
fd -H -I -eyml | rg -v 'cach'
fd -H -I -eyml | rg -v 'cach' | v -
fd -d 1 -H -I -eyml | rg -v 'cach'
fd -d 3 -H -I -eyml | rg -v 'cach'
fd -d 3 -H -I 'dockerfile'
v .oh-my-zsh/.gitpod.Dockerfile
cd .oh-my-zsh/.github
v FUNDING.yml
fd 'dock'
v .gitpod.Dockerfile
take dockerf
take git
git clone git@github.com:docker/getting-started.git
cd getting-started
v Dockerfile
docker build -t getting-started .
docker stop blissful_yonath
docker rm blissful_yonath
docker rm peaceful_williamson
docker rm optimistic_noether
docker run -dp 3000:3000 getting-started
docker exec -ti  boring_noyce sh -c "bash"
docker exec -ti  boring_noyce sh -c "sh"
docker image ls -q
docker ps -a 
docker run -d -p 80:80 docker/getting-started
docker exec -ti  dreamy_meninsky sh -c "sh"
\rm -rf Dockerfile
\rm -rf git
docker-compose --version
docker exec -ti  dockerf_wordpress_1 sh -c "sh"
docker-compose up
head first.sql -n 8
alias | rg 'win'
wi i3
fd -l
i3 2>xx
v /home/steff007/.local/bin/ipython3
pip list 2> pyerr
v pyerr
wslpath
wslpath -a "\n: 1663953645:0;wslpath -a "C:\projects"
wslpath -a "C:\twit"
ls -lu
ls -lsus
fd '92'
fd '92' | exec rm
fd '92' | -exec rm
se 'fd.*ex' | tail -n 4
fd '92'  -exec rm
f sh*
\rm o
ls -a | sort
ls -a | sort | column
cha 
cha 200 | v -
fd -H -I 'ipython.*'
fd -H -I 'ipython.*' --changed-within=1hours
fd -H -I '.*ipyth.*' --changed-within=1hours
fc -l | nl
fc -e 6196
fc -e v 6196
fc -ln
fc -e v 6192 6200
fc -2\ncls\nfc -l | nl\nfc -e 6196\nfc -e v 6196\nfc -ln
manv fc
man fc
fc v 6212 6216
fc -e v 6212 6216
ld | column
fd -H -I -d 1  -td
fd -H -I -d 1  -td | column
alias fdc="fd -H -I -d 1  -td | column"
docker-compose up -d
docker-compose up 
take dockerc
ls /mnt/c/projects 
md /mnt/c/projects/dock
ln -s /mnt/c/projects/dock dock
se 'doc.*exec'
docker exec -ti dock_client_1 sh -c "bash"
curl -v http://localhost:8000/
docker stop dock_client_1
docker rm dock_client_1
se 'doc.*up'
docker-compose up --detach 2>err
docker volume create --name=caddy_data
docker ps -a    volumes:\n      - $PWD/Caddyfile:/etc/caddy/Caddyfile\n      - $PWD/site:/srv\n      - caddy_data:/data\n      - caddy_config:/config\nvolumes:\n  caddy_data:\n    external: true\n  caddy_config:
docker ps
docker run -d -p 80:80 \\n    -v $PWD/index.html:/usr/share/caddy/index.html \\n    -v caddy_data:/data \\n    caddy
docker rmi caddy
docker run -d -p 80:80 \n    -v ./my-website:/usr/share/caddy/ \n    -v caddy-config:/config\n    -v caddy_data:/data\n    caddy:2
docker run -d -p 80:80
v docker-stop.sh
chmod 777 docker-stop.sh
docker run bash:latest \ \n  bash -c "echo hello > file.txt && cat file.txt"
docker run bash:latest
docker run --name test -it debian
docker run -t -i --privileged ubuntu bash
ls *.sh ~/
ls ~/
ls ~/ *.sh
fd ~/ -td
fd 'sh' . ~/ 
fd -d 1 'sh' . ~/ 
docker images ls 
docker run debian
docker exec -ti hardcore_shirley -c "bash"
take wordpress
docker exec -ti mysql-db -c "sh"
find . -type f -executable -print
find . -type f -exec test -x {} \; -print
find . -type f -exec test -x {} \; -print 2>err
find . -maxdepth 1 -type f -exec test -x {} \; -print 2>err
docker run --name mysql-db -v ~/datadir:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=my-secret-pw -d mysql:8.0.28-debian
docker exec -ti mysql-db -c "bash"
fd -tsh
fd -esh | xargs rg 'git'
fd -esh | xargs rg 'git' | less
batcat *.sh
cd sed
cp text.txt text2.t
vdiff () {\n    if [ "${#}" -ne 2 ] ; then\n        echo "vdiff requires two arguments"\n        echo "  comparing dirs:  vdiff dir_a dir_b"\n        echo "  comparing files: vdiff file_a file_b"\n        return 1\n    fi\n    local left="${1}"\n    local right="${2}"\n    if [ -d "${left}" ] && [ -d "${right}" ]; then\n        vim +"DirDiff ${left} ${right}"\n    else\n        vim -d "${left}" "${right}"\n    fi\n: 1663997434:0;cp file.txt 2.txt
batcat *
vdiff file.txt 2.txt
sc diff
sc vdiff
cp vdiff vdiff2
vdiff vdiff vdiff2
lt da*
lt data*
rm jjj
ls -A
ls -CF
alias l="ls -CF"
cd dock
cha 200\\n: 1664002367:0;se 'doc.*ex.*sh'
cd wordp
se 'dockerf'
mv docker-compose.yml docker-compose.bak
mv d2 docker-compose.yml
git log --oneline | less
rg 'press'
cat .tmux.conf
ls -lhrt ../../you | rg '^d'
rg 'wordpress_1'
rg 'wordpress' | more
tldr less
rg 'wordpress' | less
cd ../wordpress
fd 'wordp'
rg 'wordpress' | v -
\rm -rf wordpress
se 'dock ti'
docker exec -ti wordpress_db_1 sh -c "bash"
grep "zsh"
grep "zsh" .
docker -ps -a
cd dockerc
docker ps -a
docker stop 418e00f53196
docker stop 4a8e00f53196
docker image ls 
docker image ls | v -
docker image -a | v -
docker images -a
docker images -a -q
docker stop 4c9943b40f2e
docker stop 2ca50ba1051a
docker rmi $(docker images -a -q) #!stop all images
docker rmi $(docker images -a -q) #!remove all images
cat readme.txt
docker exec -ti dockerf_wordpress_1 sh -c "bash"
docker exec -ti mariadb sh -c "bash"
find . -perm /4000
find . -perm /777
find . -perm /000
md demo; touch important_file.conf
md jjj\\ntouch nothing
fd --changed-within=5mins
fd -td --changed-within=5mins -
fd -H -I --changed-within=2mins
fd -H -I --changed-within=5mins
fd -td -H -I 
fd -td -H -I | exec ls -lhrt
fd -td -H -I  -exec ls -lhrt
fd -td -H -I  -exec echo
fd -td -H -I --changed-within=10mins  -exec echo
fd -tf -H -I --changed-within=10mins  -exec echo
fd 'jj'
fd 'jj' -exec rm -rf
lt | rg -v '^d'
sh zcorrupt.sh
zsh zcorrupt.sh
fd -H -I 
touch file_{01..100}
fd -H -I -exec rm -rf
trash xx*
Trash-cli
apps | rg 'Tra
apps | rg 'Tra'
apps | rg 'tra'
man trash-cli
trash-cli -help
tldr trash-cli
alias tput="trash-put"
touch xx_{00..100}
fd -H -I -exec tput
alias tput
tput xx_00
fd -H -I -exec trash-put
cd /boot
find type d
find . -type d
sudo apt-get install apt-file
apt-file update
sudo apt-file update
apt-file search bin/column
docker exec -ti dockerf_db_1 sh -c "bash"
cd log
cd apt
v term.log
v eipp.log.xz
v error.log
cd journal
cd private
sudo cd private
cd dockerf\n: 1664090662:0;cd dockerf
take d2
cat index.html
cat index.html | less
cd /var/www
cd html
v index.html
cd /data/www
cd /data
ls -l /dev/sda
sudo fdisk -
sudo fdisk -l
sudo fdisk -l | less
docker images ls
se 'dock.*exe'
fd -exec fd x
fd -exec rg x
lsblk
mount | grep sda
mount | grep sdb
mount | grep sd
ls -l /
ls -l / | grep '^d'
docker exec -ti nginx sh -c "bash"
docker start nginx
docker stop nginx
docker image ls
docker start mariadb
docker run mariadb
md take2
cp docker-compose.yml take2
se 'componse'
source db/bin/activate
man nl
whatis date
jj=date
man $date
man $jj
echo {1..10}
printf '%s\n' {1..10}
printf '%s\n' {1..10} > file
readarray -t Arr < file
manv readarray
fc -2
fc -3
ech $BASH_VERSION
fc -5
s=$(cat file)
for p in s; do echo $p; done
for p in $s; do echo $p; done
s={1..100}
echo $s
echo ${1..100}
b={1..100}
b=`{1..100}`
b=`fd -H -I`
echo $b
curl -l umn.edu
curl -l umn.edu > file
wc file
rg 'script' file
rg 'script' file | rg -v "opt"
curl -h umn.edu
tldr curl
curl --header umn.edu | v -
curl --header umn.edu 
f=$(ls ~)
f[1]
$f[1]
echo $f[1]
echo {f[@]}
arr=('Otakaari 1' Espoo 02150 [6]='PL 11000')
${arr[@]}
echo ${arr[@]}
printf '%s\n' ${arr[1]}
printf '%s\n' ${arr[1] arr[2]}
echo ${arr[0]} ${arr[1]}
echo ${arr[0]}}
echo ${arr[0]}
printf '%s\n' ${arr[@]}
printf '%s\n' ${$arr[@]}
printf '%s\n' ${#arr[@]}
for p in $(ls ~); do echo $p; done
unset arr
for p in $arr; do echo $p; done
arr=$(ls ~)
for i in ${; do\n  echo arr[$i] is ${arr[$i]}\ndone
for i in ${; do echo arr[$i] is ${arr[$i]}; done
f b.sh
chmod 777 b.sh docker-stop.sh
chmod 777 b.sh 
sh b.sh
bash b.sh
cmd='fd -H -I'
args="f.*"
$cmd $args
type fd
which fd
whatis fd
whereis fd
cmd=`fd -H -I`
echo $cmd
cmd="find ."
$cmd
sh $cmd
bash $cmd
bash -c "find ."
cmd="fd -H -I"
eval $cmd
eval $cmd $args
cha 1200
cha 4200
cha 4200 | rg 'maria'
cha 4200 | rg 'd'
cha 4200 -exec rg 'd'
cha 4200 -x rg 'd'
cha 4200 -x cat
cha 4200 -x what
fd --changed-within=3335mins 
fd --changed-within=3335mins -x rg 'ck'
fd --changed-within=3335mins -exec rg 'ck'
fd --changed-within=3335mins -exec rg '.*'
fd --changed-within=3335mins -exec rg -i 'pass'
rg 'wordpress'
rg 'wordpress' readme.txt
fd rg 'wordpress' readme.txt
fd -x stat --printf='%n - %s\n' |  rg -v '-\s0'  
fd 'f.*'
alias fda="fd -H -I
alias fda="fd -H -I"
fda -x echo
fda -x rg 'x'
alias rgh='rg -help | v -'
fda -x rg -H 'x'
fda -x rg -H 'mar'
fda -x rg -H 'maria'
fda -tf -x rg -H 'maria'
fda -tf --maxdepth=4 -x rg -H 'maria'
fda -tf --maxdepth=4 -x rg -H 'maria\s'
fda -tf --maxdepth=4 -x rg -H 'Maria\s'
ls data*
ls datadir
lt datadir
lt | rg 'data'
docker stop 3ceac
se 'compose'
docker volume create nginx-config
f docker-compose.yml
git rm .Trash/
git rm .Trash/ -r
git checkout 5a31759
cd dockerf/take2
cha 50
cd take2
docker stop take2_db_1
docker exec -ti take2_db_1 sh -c "bash"
cat dockerf/take2/docker-compose.yml
fda 'db_data'
fda 'python'
docker volume ls | head
docker volume ls | head | v -
docker volume inspect take2_db_data
cd "/var/lib/docker/volumes/take2_db_data/_data"
cd "/var/lib/docker/volumes/take2_db_data
cd "/var/lib/docker/volumes/take2_db_data"
cd docker
fda 'docker'
cd docker-desktop
v mounts.data
docker volume inspect dockerf_wordpress_data
docker volume inspect take2_db_data | v -
md nginx
cd /usr
cd share
cd /var/lib
cd /var/lib/docker/volumes/nginx_html_files
se 'docker.*ex' | tail -n 4
docker exec -ti nginx_web1_1 sh -c "bash"
cd /var/lib/docker/volumes/nginx_html_files/_data
cd /var/lib/docker/volumes/nginx_html_files/
cd /var/lib/docker/volumes
fd -H -I --changed-within=50mins
fd -H -I --changed-within=2hours
fd -H -I --changed-within=2hours | v -
manv find
find . -mtime -1
find . -mtime -1 | v -
find . -mtime -3 | v -
find . -mtime -3 -ls
find . -mtime -3 -ls |v -
place=`date '+./%Y/%m/%d/'`;
echo $place
echo "hello `ls` world"
echo "hello `ls m*` world"
lt m*
ls m*
fd -d 1 'm.*'
fd -d 1 '^m.*'
fd -d 1 '^m.*' -x lt
fd -d 1 '^m.*' -x ls -lhrt
docker run --name mysql-db -v $(pwd)/datadir:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=my-secret-pw -d mysql:8.0.28-debian
docker ps -a | v -
docker exec -ti mysql -c "bash"
hit 5
hit 12
docker exec -ti mysql-db sh -c "bash"
docker stop $(docker ps -a -q) #!stop all images
docker rm $(docker ps -a -q) #!stop all images
cd d2
md vol2
cp docker-compose.yml vol2
cd vol2
v docker-compose.yml
/var/lib/docker/volumes
#create a volume\nsudo docker volume create AppZ_vol
# Inspect volumes\nsudo docker volume inspect  AppZ_vol
sudo ls /mnt/wsl/docker-desktop-data/data/docker/volumes
sudo ls /mnt/wsl/docker-desktop-data
cd /mnt/wsl
cd docker-desktop-data
fda | v -
fda -d 2
cd docker-desktop-bind-mounts
cd Ubuntu
cd c57fc7b8213d46448256c46cbe3d2c251d851ee6e7f141c1f76b473b9298c6a2
docker volume ls
cd datadir
rm -rf datadir
sudo \rm -rf datadir
gitst
git commit -am "added daily update"
cd nginx
git rm --cached .zcompdump-DESKTOP-8JMUDRE-5.8
git rm --cached ~/.zcompdump-DESKTOP-8JMUDRE-5.8
head .gitignore
git add .gitignore
git commit -m "updated gitignore"
cd dockerf/nginx
~/docker-stop.sh
cat docker-compose.yml
docker-compose up --detach
cp -R dockerf /mnt/c/all
cp functions.sh /mnt/c/all/wfunctions.sh
fda -td | column
git diff main origin/main | more
git diff gcloud_fun
git diff gcloud_his
git diff gcloud_his main origin/main
git diff @{upstream}
fda -d 1 'con'
x(){\n    mkdir $1\n    cd $1\n: 1664339977:0;x nnn
xxx(){ rm -rf $1 }
xxx nnn
x vicotry
xxx vicotry
x tttt
trash ttt
trash tttt
xxx() { trash $1 }
x nothing
xxx nothing
take trash
type trash
take pp
trash pp
trash-restore pp
type trash-restore
compgen -c | rg 'trash'
trash-restore /home/steff007/pp
trash thr.tar.gz
trash goo.his hist.tar xx
rm err pyerr
trash sed
cd python3
ls py*
alias gits
type gits
gits(){\n  printf '%s/n' "git status -vv | v -"\n  git status -vv | v -\n: 1664341196:0;type -f gits
git status -vv | v -
gitsall
se 'printf' | tail
fd -d 1 -x rg 'git'
fd -d 1 -x -H rg 'git'
fd -d 1 -tf -esh -x rg -H 'git'
cat gitAll.sh
sc jj.sh
git branch -r
git branch 
git branch -m diff
git diff diff origin/main
declare -F
declare -F ECPOCHREADTIME
chmod 777 jj.sh
red=$'\033[1;31m'; echo "${red}text"
echo $red
printf "${red}test"
printf '%s\n' "${red}test"
jj.sh
sc nn.sh
sc nn.sh 'jim;
v nn.sh
sc nn.sh 'jim'
cha 120
fd -d 1 -esh | xargs -I{} jj.sh {} | less
fd -d 1 -esh | xargs -I{} jj.sh {} 
docker ps -a | head
bind -P
man bind
printenv > index.html
ssp &
ssp 2>&1
sspn >/dev/null 2>&1
ssp >/dev/null 2>&1
echo "<h1> header</h1>" >>index.html
kill -l
kill -9 6583
ssp >/dev/null 2>&1 &
kill -9 6684
fd -d 3 -eyml | xargs -I{} ~/jj.sh {}
echo PS1
v color_codes
sc color_codes
export PS1="${cyan}\u@\h ${grey}\w ${cyan}\$ $reset"
fda -d 1 'zsh'
sc .zshrc
sc dumb
sc dumb | less
v dumb
v dumb 256
sc dumb 256
sc dumb 
autoload -Uz promptinit\npromptinit
prompt -l
prompt -p
print -P '%B%F{red}co%F{green}lo%F{blue}rs%f%b'
printf '%B%F{red}co%F{green}lo%F{blue}rs%f%b'
printf '%s\n' '%B%F{red}co%F{green}lo%F{blue}rs%f%b'
sc d2
v ../jj.sh
v d2
fd -d 3 -eyml | xargs -I{} ~/jj.sh {} 
fd -d 3 -eyml | xargs -I{} ~/jj.sh {}  | less
fd -d 3 -esh | xargs -I{} ~/jj.sh {} | v -
~/jj.sh
fd -d 1 -esh | xargs -I{} ~/jj.sh {}
fd -d 1 -esh | xargs -I{} ~/jj.sh {} | v -
fd -d 3 -eyml | xargs -I{} ~/jj.sh {} | v -
unalias glst
v note/notes
git -v
git branch -m wsl
git branch -a | v-
git branch -a | v -
git diff wsl origin/main
git branch -m main
v gh.sh
mv gh.sh scripts
trash index.html
fd -d 1 -x rg -H 'git'
mv 35.sh scripts/git_init.sh
v vdiff2
trash vdiff2
trash myhis
trash hist
v git.sh
mv git.sh scripts/general_git_init.sh
git diff --name-only 
git commit -am "cleaned shells to /script"
git log -
git commit --amend -m "cleaned shells to /script *amended"
cd dockerf
git log --oneline --graph
git checkout f743282
fd -tf -d 1 -x rg -H 'git'
echo 'FFF' | sed 's/[A-Z]/\L&/g'
echo 'C:\projects' | sed 's/[A-Z]/\L&/g'
echo 'C:\projects' | sed 's/\//\/g'
echo 'C:\projects' | sed 's///\/g'
echo 'C:\projects' | sed 's/e/\//g'
echo 'C:\projects' | sed 's/\\/\//g'
echo 'C:\projects' | sed 's/\\/\//g' | sed 's/c:/mnt\/c/g'
echo 'C:\projects' | sed 's/\\/\//g' | sed 's/c:/mnt\/c/g' | sed 's/pro//g'
echo 'C:\projects' | sed 's/\\/\//g' | sed 's/c\:/mnt\/c/g' | sed 's/pro//g'
echo 'c:\'
echo 'c:\' | sed 's/c:/mnt/g'
echo 'c:\' | sed 's/c:/mnt\/c//g'
echo 'c:\' | sed 's/c:/mnt\/c/g'
echo 'c:\' | sed 's/c\:/mnt\/c /g'
echo 'c:\' | sed 's/c\\:/mnt\/c /g'
echo 'c:\' | sed 's/c:/mnt\/c /g'
echo 'c:\' | sed 's/c:\/mnt\/c /g'
qq= 'c:\' | sed 's/c:\\/mnt\/c /g'
qq='c:\' | sed 's/c:\\/mnt\/c /g'
qq=$('c:\' | sed 's/c:\\/mnt\/c /g')
echo 'c:\' | sed 's/c:\\/mnt\/c /g'
qq=$(echo 'c:\' | sed 's/c:\\/mnt\/c /g')
qq=$(echo 'c:\projetc' | sed 's/c:\\/mnt\/c /g')
echo $qq
se 'wsl'
awk -F'\' -v OFS='/' '$1=/^c:/?"/opt":$1' <<<'c:\IBM\WebSphere'
echo  "C:\Users\San.Tan\My Folder\project1" | sed -e 's/C:\\/mnt\/c\//;s/\\/\//g'
rg 'bin'
bash re.sh
chmod 777 re.sh
./re.sh
./re.sh bb
./re.sh "c:\all\bas"
./re.sh c:\all\bas
./re.sh "C:\Users\San.Tan\My"
./re.sh 'c:\all\bas'
./re.sh 'c:\projects'
./re.sh 'C:\projects'
./re.sh C:\projects
echo '\\' sd '\\' '\'
echo '\\' | sd '\\' '\'
echo 'c:\\' | sd '\\' '\/'
echo "============="\necho "VERTICAL TABS"\necho -e "\v\v\v\v"   # Prints 4 vertical tabs.\necho "=============="
echo -e "\042"       # Prints " (quote, octal ASCII character 42).
printf """
printf '"'
printf '%s\n' '"'
a=$(printf '%s\n' '"')
a=$(printf '%s\n' '\"')
a=$(printf '%s\n' '\"\n')
a=$(printf '%s\n' '\/"\n')
echo 'c:\' | sd '\' '\/'
echo 'c:\' | sd '\\' '\/'
echo 'c:\' | sd '\\' '/'
echo 'c:\' | sd 'c:\\' '/'
echo 'c:\' | sd 'c:\\' 'mnt/'
echo c:\ | sd 'c:\\' 'mnt/c/'
printf c:\ | sd 'c:\\' 'mnt/c/'
echo 'c:\' | sd 'c:\\' 'mnt/c/'
v re.sh
./re.sh "C:\projects"
wi re.sh
type re.sh
./re.sh "c:\projects"
re.sh
rg cha
rg cha | less
fd -H -I -td
fd -H -I -td -E rust
fd -H -I -td 
fd -H -I -td -E \.rust
fd -H -I -td -E .rust
fd -H -I -td -E .git
fd -H -I -td | rg "git'
fd -H -I -td | rg "git"
fd -H -I -td | rg "\.git"
cha 2220
cha 220
type cha
./re.sh "C:\Users\jayst\OneDrive\Documents\MuseScore3\Scores"
./re.sh "c:\Users\jayst\OneDrive\Documents\MuseScore3\Scores"
v what
v gcloud_his
gh repo list SAP-samples --limit 10 --public
type p3
rm -rf beautiful
p3 -m venv beautiful
pip install beautifulsoup4
pip install requests
v yyy
v links
v yyyyy
wget "https://podtrac.com/pts/redirect.mp3/traffic.libsyn.com/latenightlinux/LNL196.mp3"
wget "https://podtrac.com/pts/redirect.mp3/traffic.libsyn.com/latenightlinux/LNL195.mp3"\nwget "https://podtrac.com/pts/redirect.mp3/traffic.libsyn.com/latenightlinux/LNL194.mp3"
ls -lus
fd '94' 
fd '94.*1'
fd '94.*1' -x rm
fd 'jq'
fd 'jq' -x rm
fd '9[456]'
fd '9[456]' -x touch
exiftool -j LNL195.mp3 | v -\n: 1663731834:0;cat jqs
exiftool -j LNL195.mp3 | v -
v classes
echo 'vlc $(fd 95)'
fd 95
echo "$(ls)"
echo "vlc $(fd 95)"
echo "vlc $(fd [456])"
fd '[456]'
echo "vlc $(fd '[456]')"
printf "vlc $(fd '[456]')"
printf '%s' "vlc $(fd '[456]')"
printf '%s\n' "vlc $(fd '[456]')"
printf '%s\n' "vlc $(fd '[456]')" > bat
printf '%s\n' "vlc $(fd '[456]')" > bat.ps1
exiftool -j LNL195.mp3 > j.json
jq . j.json
jq '.' j.json
jq '. | year' j.json
jq '. | Year' j.json
v time
jq '. | {timestamp,report}' time
jq '. | {Year}' j.json
cat time
cat j.json
cat j.json | tail
alias c="clear
alias c="clear"
head time
jq '. | [{Year}]' j.json
jq '.[] | Year' j.json
jq '.[] | {Year}' j.json
jq '.[] | {Year}' j.json | sd '{|}' ''
jq '.[] | {Year}' j.json | sd '{' ''
jq '.[] | {Year}' j.json | sd '\{' ''
jq '.[] | {Year}' j.json | sd '\{|\}' ''
jq '.[] | {Year}' j.json | sd '\{|\}' '' | sd '\n' ''
jq '.[] | {Year}' j.json | sd '\{|\}' '' 
head j.json
jq '.[] | {Year,FileName}' j.json | sd '\{|\}' '' 
v j.json
type gh
unalias gh
gh repo view facebook/react
git config -e
v my.json
jq . my.json
jq '. | [{Year}]' my.json
jq '. | [{report}]' my.json
jq '. | [{results}]' my.json
ls /mnt/c/twit
exiftool -j ww0795.mp3
exiftool -j ww0795.mp3 | v -
v pip/pip.conf
cha 820
echo (1..10)
echo {1..100} | v -
fd *.sh
fd '.*sh'
fd '.*sh' | v -
touch b.sh jj.sh nn.sh re.sh trash
cat b.sh jj.sh nn.sh re.sh trash
fd -E *.mp3
fd -E *.mp3 -x caqt
fd -E *.mp3 -x cat
fd -E *.mp3 -x echo
fd -E *.mp3 -x echo; cat
fd -E *.mp3 -x echo {}
fd -E *.mp3 -x echo {}; cat {}
fd -E *.mp3 | xargs echo
fd -E *.mp3 | xargs cat
fd -E *.mp3 | xargs cat {}
chmod 777 j
fd -E *.mp3 -x  ./j
fd -E *.mp3 -x  ./j | less
cat trash
fd -E -tf *.mp3 -x  ./j | less
printf '\e[1;34m%-6s\e[m' "This is text"
printf '\e[1;34m%-6s\e[m%s\n' "This is text"
printf '\e[1;34n%-6s\e[m%s\n' "This is text"
echo "Input from tput/echo at 23/45"
tput rc
echo "Input from tput/echo at 2/45"
tput setb 6 tput setf 4
red='\033[1;31m'; printf "%b\n" "${red}text";
fd -tf -E  *.mp3 -x  ./j | less
j b.sh
./j d2
sc a
e "hello"
e "hello \n"
p "\n\n"
a="ls"
p "\n$a\n"
p "\n$a\n\n"
a=xxxxxxxxxx
a= xxxxxxxxxx 
a=" xxxxxxxxxxxx "
a=" xxxxxx\npxxxxxx "
e "\nlis is$a\n\n"
p "\nlis is$a\n\n"
echo >&2 Invalid file.
echo Invalid file.
file="/home/steff007/.cache/zsh/history"
echo >&2 "Invalid file: $file"
bash -c "echo >&2 "Invalid file: $file"
bash -c "echo $0"
bash -c "bash"
var="Example String."
set file
file=$(echo "$var" | tr ' ' _)
file=$(echo "$var" | tr ' ' x)
echo $file
ls | tr ' ' ,
ls | tr ' ' \t
manv tr
ls | tr '\n' x
ls | tr '\n' \v
ls | tr '\n' \t
ls | tr ' '  
ls | tr ' '  '\n'
ls | tr ' '  '\v'
ls | tr ' '  '\t'
ls | tr ' '  'x'
ls | tr '\n'  'x'
ls | tr '\n'  '\v'
cat b.sh | tr '\n' '\v'
var=$(ls)
e $var
printf -v x "jim"
printf -v x ls
printf -v x $(ls)
e $x
printf -v x ${ls}
p=100
p "$p"
p "$p\n"
read name
e $name
echo "enter name"; read name
p $name\n
p "$name\n"
p "$name $p\n"
p "$name\v $p\n"
p "$name\n\v $p\n"
p '%s' "$name\n\v $p\n"
p '%s\n' "$name\n\v $p\n"
p 'xxx%s' "$name\n\v $p\n"
p 'xxx%s' '$name\n\v $p\n'
p 'xxx%s\n' '$name\n\v $p\n'
p 'xxx\n' '$name\n\v $p\n'
p 'xxx' '$name\n\v $p\n'
p 'xx' "this is"
p 'xx\n' "this is"
p 'xx %s\n' "this is"
p 'xx      %s\n' "this is $p"
p 'xx      %s\n' "this is $p\n"
p 'xx10\n' "this is $p\n"
p 'xx10s\n' "this is $p\n"
p 'xx%10s\n' "this is $p\n"
p 'xx%20s\n' "this is $p\n"
p 'xx%50s\n' "this is $p\n"
p 'xx%50s\n' "this is $p\n" "x"
p 'xx%50s\n' "this is $p\n" "x" "n"
p 'xx%50s\n' "$(ls)"
p 'xx %50s yy\n' "$(ls)"
p 'xx %50s yy' "$(ls)"
p 'xx %50s yy' "$(ls | tr '\n' ',')"
p 'xx %50s\n' "$(ls | tr '\n' ',')"
git commit -am "smith notes"
git rm junk/ww0795.mp3
git rm -f junk/ww0795.mp3
ls junk
se 'amend'
git commit --amend -m "smith clean sat 1:13"
git log -n2
git log -vv
alias glst
fd 'z'
la | rg 'z'
la | rg 'z' | xargs lt
la | rg 'z' | xargs ls -l
v .zcompdump
rm .zcompdump
la | rg 'zc' | xargs ls -l
v .zcompdump-DESKTOP-8JMUDRE-5.8
echo $ZSH_COMPDUMP
cd /mnt/c
v view-source_https___ahs.rdale.org_activities_football.html
type als
cd /mnt/c/users/jayst/onedrive/documents/musescore/scores
cd /mnt/c/users
cd jayst
cd cd /mnt/c/users/jayst/OneDrive/documents/musescore/scores
cd /mnt/c/users/jayst/OneDrive/documents/musescore/scores
fd 'let'
fd 'girl'
take work
alias ip
ln -s $(pwd) ~/winp
cd /mnt/c/Users/jayst/Downloads
ls ../../you/lazy
cat pyvenv.cfg
ls | rg '^l'
p3 test.py
lt | rg '^l'
tree | v 
alias | rg 'pyth'
z.sort()
cd /mnt/c/you/bash
alias cm="cd /mnt/c"
md pycon
fda 'ipython'
l -a | rg 'py'
cd .ipython
cd profile_default
v README 
v -c "G" ipy_linux3
v ipy_linux3 +"G"
vim -c "normal G" ipy
v -c "normal G" ipy
v -c "normal G" ipy_linux3
beautiful/bin/activate
alias sc
source beautiful/bin/activate
cd lnl
wget 'https://pdst.fm/e/cdn.twit.tv/audio/ww/ww0797/ww0797.mp3'
exiftool -j ww0797.mp3 | v -
alias winh="cd /mnt/c/Users/jayst"
'c:\noth'.replace('\\','\/')
'jim'.replace('j','xxx')
chmod 777 wincon
wincon
wincon 'jim'
./zcorrupt.sh
v zcorrupt.sh
wincon 'c:\tom'
wincon $(pwd)
pwd | clip
wincon "C:\Users\jayst\OneDrive\Documents\MuseScore3\Scores"
wincon "c:\Users\jayst\OneDrive\Documents\MuseScore3\Scores"
cd /mnt/c/Users/jayst/OneDrive/Documents/MuseScore3/Scores
wi wincon
v ~/pys/wincon
p3 -m timeit -s "from math import sqrt" -n 10000 -r 4 "y = sqrt(12)"
p3 -m timeit -s "from math import sqrt" -n 10000 -r 4 "y = sqrt(1200000)"
p3 -m timeit -s "from math import sqrt" -n 100000 -r 4 "y = sqrt(1200000)"
hyperfine 'find . -name 'echo''
hyperfine 'fd -H -I'
find . -name 'echo'
hyperfine 'find .'
rg 'find'
grep 'find'
grep 'find' .
. grep 'find'
grep 'find' *
grep 'find' * | less
hyperfine 'grep 'find' * '
hyperfine "grep 'find' * "
se hyper
fd -ejs | rg '^sh'
fd -ejs | rg '^sh' -x ls
fd -ejs | rg '^sh' | xargs ls
fd -ejs | rg '^sh' | xargs ls -lhrt
USERVAR="https://www.youtube.com/watch\?v\=5uIW9fcmkuE"\nyt-dlp -f 'ba' --embed-metadata -x --audio-format mp3 $USERVAR -o '%(title)s.mp3'  >output.log 2>&1 &
yt-dlp -f 'ba' --embed-metadata -x --audio-format mp3 $USERVAR -o '%(title)s.mp3'  >output.log 2>&1 &
yt-dlp -f 'ba' --embed-metadata -x --audio-format mp3 $USERVAR -o '%(title)s.mp3'
alias reg
echo $USERVAR
fd 'corr'
alias his='hi |  cut -c 1-7 --complement | nvim +$ -'
alias | rg '.*sh.*'
alias | rg '.*d.*'
alias | rg '.*fd.*'
alias f1
fd --changed-within 2hours -x ls -lhrt
fd --changed-within 2hours -x ls -lhrt > two
man wc
man wc -l
v two
v AppData/Local/Google/Chrome/User Data/Default/Cache/Cache_Data/data_2
cd AppData/Local/Google/Chrome/User Data/Default/Cache/Cache_Data/data_2
cd "AppData/Local/Google/Chrome/User Data/Default/Cache/Cache_Data/data_2"
cd "AppData/Local/Google/Chrome/User Data/Default/Cache/Cache_Data/"
v data_3
ls | tee mm
cat mm
fda | rg -v '^mp'
fda | rg -v '^mp|stable'
fda | rg -v '^mp|stable' | column
fda -E 'stab*'
fd -tf -d 1
v all_commands
rm all_commands
alias | rg 'tra'
fd -tf 'sheet'
v node/esbuild/src/sheet.js
rg 'google'
rg 'google' | v -
fd -ejs -x rg 'google'
fd find -ejs | xargs echo
fd find -epy | xargs echo
fd  -epy | xargs echo
fd -epy -x ls
fd -epy -x 'ls -lhrt'
chmod 777 a.sh
fd -epy -x ~/.sh
a jj.sh
./a.sh jj.sh
fd -esh | rg 'bash'
fd -esh -x rg 'bash'
echo /user/bin/env
echo /user/bin/env bash
fd -epy -x ~/a.sh
fd -esh -x rg 'printf'
fd -epy -x ~/a.sh | less
v non/file_name.py
rm non/file_name.py
fd -epy -x ~/a.sh | more
fd -esh -x ~/a.sh | more
print "hello" "world"
x,y=2,3
fd 'start'
fda 'start'
fda -epy 'start'
v .ipython/profile_default/startup/start.py
v ~/.ipython/profile_default/startup/start.py
alias vip="~/.ipython/profile_default/startup/start.py"
alias vip="v ~/.ipython/profile_default/startup/start.py"
source ~/.bash_aliases
fda -epy 'start' | v -
v README
i3 profile create
cd .ipython/profile_default/startup/
cd ~/.ipython/profile_default/startup/
export PYTHONSTARTUP=~/.pythonrc
python3
v ~/.pythonrc
fda -d 1 'ffffff'
fd 'fffff'
fda 'bash'
fda 'fffff'
fda -x rg 'fffff'
fda -x rg 'fffffffffff'
fda -x rg 'asda.*fffffffffff'
v ipython_config.py
wget "https://pdst.fm/e/chtbl.com/track/E91833/cdn.twit.tv/audio/twit/twit0895/twit0895.mp3" ##twit 8/15
wget "https://pdst.fm/e/chtbl.com/track/E91833/cdn.twit.tv/audio/twit/twit0896/twit0896.mp3" ##twit 8/15
p3 -i test.py
alias vip
v 00-first.py
p3 -m pip --version
p3 -m pip install pudb
kill -9 969
vmstat
w steff007
uptime
ps ax
ps -A
ps -auxf | sort -nr -k 4 | head -10
free
iostat
ps -a
v replace.py
p3 replace.py
v SampleFile.txt
se 'pudb'
p3 -m pudb start.py
p3 -m pudb replace.py
ls >ls /dev/null 2>&1 &
md /mnt/c/you/amy
cd amy
ps -aux | rg 'pyth'
se 'rename' | tail
fd '\s' -exec rename "s/ /_/g"
fd ',' -exec rename "s/ //g"
fd ',' -exec rename "s/,//g"
fd '(' -exec rename "s/(//g"
fd '(' -exec rename "s/\(//g"
fd '\(' -exec rename "s/\(//g"
fd '\)' -exec rename "s/\)//g"
alias d
alias vv='| v -
alias vv='| v -'
ls vv
type d
type d | v -
v /home/steff007/.oh-my-zsh/lib/directories.zsh
dirs -v | head -n 10
cd ../../all
cp /home/steff007/.oh-my-zsh/lib/directories.zsh
cp /home/steff007/.oh-my-zsh/lib/directories.zsh .
v directories.zsh
fda 'git'
la *.sh
fd tx
fd -tx | column | less
fd -tx -x rg 'git'
fd -d 1 -tx -x rg 'git'
fd -d 1 -tx -x rg 'git' | more
fd '.*git.*'
ls | xargs echo
ls | xargs rg 'git'
ls | xargs rg 'git' | v -
dirs -v
man dirs
ls -esh
tmux -ls
ls ../../you/amy
cd /mnt/c/you/aretha
fd 'let.*it'
fd 'aret'
fd "__" -exec rename "s/[__]/_/g" #!good replace garbage names
fd "__" -exec rename "s/[_]/_/g" #!good replace garbage names
fd "__" -exec rename "s/---/_/g" #!good replace garbage names
fd "__" -exec rename "s/--/_/g" #!good replace garbage names
fd "__\n: 1666057192:0;fd "__"
alias | rg 'vi'
fda | wc
cd sheets
fda | columns
fda | column
fda -ejs -x rg "google"
fda -d 1 -ejs -x rg "google"
fd -d 1 -ejs -x rg "google"
fd -d 1 -ejs -x rg "sheets"
fd -d 2 -ejs -x rg "sheets"
fd -d 2 -ejs -x echo $1; rg "sheets"
fd -d 2 -ejs -x echo $1; rg "sheets" | v -
cd cool
ls cool
fd -ejs -x rg 'google' | v -
fd -ejs -x rg 'google.*sheet' | v -
v flip/vflip/script.js
curl "https://sheets.googleapis.com/v4/spreadsheets/1v0WTX_g0SEHb-EfG9faV3ayFo1WZUmUj8Lhgc2Kw2cA/values/data\?alt\=json\&key\=AIzaSyCZ3y8Es42zvNGON7ezA6q4dxe8RNcyQIs"
curl "https://sheets.googleapis.com/v4/spreadsheets/1v0WTX_g0SEHb-EfG9faV3ayFo1WZUmUj8Lhgc2Kw2cA/values/data?alt=json&key=AIzaSyCZ3y8Es42zvNGON7ezA6q4dxe8RNcyQIs"
manv source
tldr source
manv jq
cd nod
fd -ejs -x echo $1; rg 'google.*sheet' | v -
fd -ejs -x echo $1; rg 'google.*sheet.*QI' | v -
v grid/ax.js
fd -ets
fd -ets -x echo $1; rg 'google.*sheet.*QI' | v -
fd -ets -x rg 'google.*sheet.*QI' | v -
fd -ets -x echo
fd -ets -x echo; rg 'google.*sheet.*QI' | v -
fd -ets -x echo {}; rg 'google.*sheet.*QI' | v -
fd -ets -x echo {}
fd -ets -x echo {}; rg 'google.*sheet.*QI' {} | v -
fd -ets -x  rg 'google.*sheet.*QI' {} | v -
fd -a -ets -x  rg 'google.*sheet.*QI' {} | v -
chmod 777 j.sh
rg 'google' lot/mod.ts
rg 'g.*' lot/mod.ts
fd -ets -x ./j.sh
v flip/vflip/my-module.ts
cd you/amy
fd "--*"
fd "-+"
fd "_+"
fd "_+" -exec rename "s/_+/_/g" #!good replace garbage names
md /mnt/c/you/flack
md /mnt/c/you/letit
v pcs.txt
md /mnt/c/you/gut
v -o yv.sh ye.sh
ls *.txt
v miss.txt
rm work.sh 'work.sh!'
trash 'work.sh!'
trash '$'
cat y1.sh
cp yv.sh y1.sh
v y1.sh
bash y1.sh > err
v o y1.sh err
se 'v.*o'
bash y1.sh &> err
v -o y1.sh err
cd ~/.ipython/profile_default/
cd startup
cd /tmp
fd --changed-within 2hours -x head
fd --changed-within 2hours -x echo
fd --changed-within 2hours -x echo; head
fd -a --changed-within 2hours -x echo; head
fd -a --changed-within 2hours -x echo;
fd -a --changed-within 2hours -x nvim;
se 'fd.*x\s'
fd -a --changed-within 2hours | v -
fd -a --changed-within 4hours | v -
fd -a --changed-within 8hours | v -
se 'fd.*xa\s'
se 'args'
se 'fd.*xas'
se 'xargs\n: 1666308713:0;fd -d 1 -esh | xargs -I{} cat {}
ls ~/j*
se 'xargs' | v -
fd -d 1 -esh | xargs -I{} jj.sh {} | v -
fd -d 1 -esh | xargs -I{} jj.sh {}
rd -esh | rg printf
fd -esh | rg printf
fd -esh | rg printf {}
fd -esh | rg 'printf' 
fd -esh | rg 'pr' 
fd -esh -x rg 'pr' 
fd -esh -x echo; rg 'pr' 
fd -esh -x echo; rg 'printf' 
fd -d 1 -esh
fd -d 1 -esh -x echo; rg 'printf' 
fd -d 1 -esh -x echo; rg 'printf'  | less
fd -d 1 -esh -x echo
fd -d 1 -esh -x echo; rg 'printf'
fd 'git'
fd 'git' /ets
fd 'git' /etc
fd 'git' /mnt/c/all
fd -esh ~/junk
fd -esh '~/junk'
fd  '~/junk'
fd /junk
ls junk/
fd --full-path '/etc'
fd . '~/junk'
fd . '~/junk/'
fd ~/junk
fd --full-path '/home/steff007/junk'
fd --full-path '~/junk'
fd junk
fd junk/
fd . 'junk/'
fd . -d 1 '/etc'
fd . -d 1 
fd . -esh -d 1 
fd . -esh -d 1 -x 
fd . -esh -d 1 -x echo
fd . -esh -d 1 -x hean -n 2
fd . -esh -d 1 -x head -n 2
fd . -esh -d 1 -x echo; head -n 2
fd . -esh -d 1 -x rg 'printf'
fd . -esh -d 1 -x echo; rg 'printf'
fd . -esh -d 1 -x echo; rg 'printf' | less
se 'jj'
v a.sh jj.sh
fd -d 1 -esh -x jj.sh
v jj.sh
cat gitAll.sh | tail
fd -d 1 -esh | xargs -I{} echo {}; cat {}
fd -d 1 -esh | xargs jj.shm{}
fd -d 1 -esh | xargs jj.sh {}
fd -d 1 -esh | xargs echo
fd -d 1 -esh | xargs printf '%s\n'
fd -d 1 -esh | xargs jj.sh
cat jj.sh
jj.sh 'jim'
jj.sh 'jj.sh'
v -o jj.sh jp.sh
chmod 777 jp.sh
./jp.sh
./jp.sh "ls"
fd -esh -x ./jp.sh "ls"
v jp.sh
fd -esh -x ./jp.sh
fd -esh -x ./jp.sh | v -
v -o jp.sh xx.sh
bash y1.sh
chmod 777 x.py
./x.py
cp x.py ~/winp
cp y.py ~/pys
./y.py
./pys/y.py
hyperfine fd -h -i --changed-within=30mins
fd -h -i --changed-within=30mins
fd -H -I --changed-within=30mins
hyperfine fd -H -I --changed-within=30mins
hyperfine ./pys/y.py
newdir="/mnt/c/you/woody"\n[ -d newdir ] || mkdir newdir
ld /mnt/c/you
echo $newdir
echo [ -d newdir ]
echo "[ -d newdir ]"
[ -d newdir ]
mkdir -p newdir
mkdir -p $newdir
ls /mnt/c/you 
ls /mnt/c/you/woody
lt /mnt/c
lt /mnt/c/you
lt /mnt/c/you | rg '^d'
fd /mnt/c/you 
fd td . /mnt/c/you 
fd -td . /mnt/c/you 
fd -td -d 1 . /mnt/c/you 
fd -td -d 1 . /mnt/c/you | column
fd pancho
git status -vv  
ls ~/functions.sh
~/gitAll.sh
git show 
alias mkc
alias take
type take
type mkc
type -a mkc
declare -f take
cp ~/.cache/zsh/history n
git commit -a "test"
git commit -a 
ls jg*
ls | rg 'j'
take jgit
git commit -am "some cleaning"
touch junk
v junk
touch kkk
rm kkk
fda gitig
fda -d 1 gitig
cp .gitignore gitignore
git rm --cached ~/.gitignore
git rm --cached ~/.config/nvim
git commit -am "git rm --cached"
fd -x caqt
fd -x cat
fd -x cat; read
fd -x ls -lhrt; cat; read
chmod 777 v.py
chmod 777 v.sh
fd -x v.sh
fd -x ./v.sh
v v.sh
wc n
tail n
tail n > n
cat n
type his
cp 'n!' n
rm 'n!'
git rm --cached n
git rm --cached $(ls)
for i in $k; do echo $i; done
for i in $k; do git rm --cached $i; done
git rm --cached v
git commit -m "one"
git add n
git commit -m "two"
git show | head
type ll
type -a glst
type -f glst
type pidof
type -a pidof
pidof zsh
pidof ps
type -a exa
type -f fda
fd --changed-within 2hours
fda --changed-within 2hours
git commit -am "bed sat am"
glst
git diff HEAD^..
appsc
type -f apps
lt -a
rgg 'declare' | v -
rgg 'declare'
rgg 'declare' | less
type -f rgg
git commit -m "v new"
cat ~/functions.sh >> v
git commit -m "v addition"
git commit -am "v addition"
git show | v -
git show 2cd16e2ee2
git show --oneline | less
git show 8a80c57 \ngit show 2cd16e2 \ngit show e2630dc \ngit show 3c0ced4
git show 8a80c57 \ngit show 2cd16e2 \ngit show e2630dc \ngit show 3c0ced4 | v -
ls >>a
git show 3c0ced4
git show c0ced4..8a80c57
git show c0ced4..HEAD
git show 3c0ced4..HEAD
git show 3c0ced4..HEAD | V -
git show 3c0ced4..HEAD | v -
git show 3c0ced4..8a80c57
git show --oneline 3c0ced4..8a80c57 
git show --oneline 3c0ced4..8a80c57 | v -
git show --raw git show 3c0ced4..8a80c57
git show --raw
git show --raw 3c0ced4..8a80c57 
git show --raw 3c0ced4..8a80c57 | v -
git show c85ae87
git show c85ae87 | v -
git show --abbrev-commit --pretty='oneline'
git show --abbrev-commit --pretty='oneline' | v -
git show 3c0ced4 --abbrev-commit --pretty='oneline' | v -
git show e26 --abbrev-commit --pretty='oneline' | v -
git show e2630dc --abbrev-commit --pretty='oneline' | v -
git log --format=%s
v .viminfo
v ex.sh
fd .*sh
k=$(ls)
k=$(ls)\necho $k
fe -esh -x head -n 1
fd -esh -x head -n 1
printf $k
printf '/n/ $k
printf '/n' $k
printf '%s/n' $k
printf '%s\n' $k
printf '%s\n' '$k'
printf '%s\n' "$k"
printf '%s this is \n' "$k"
chmod 777 xx.sh
sudo apt install sysstat
CPU=`mpstat | grep -A 5 "%idle" | tail -n 1 | awk -F " " '{print 100 -  $ 12}'a | cut -c1-2`
echo $CPU
J=`ls`
j=`ls`
mpstat
type xx.sh
./xx.sh
type [
type ]
type ls
type dirs
type cls
type clear
type find
type -a find
echo `test 3 -eq 3`
test 3 -eq 3 && echo 'a'
test 3 -eq 4 && echo 'a'
test 3 -eq 3
[ -f donuts ]
echo %?
echo $0
[ -f a ]
[ -f ab ]
[ -f a ]; echo $?
[ -f ab ]; echo $?
[ -f a ]\\necho $?
[ -f a ];\\necho $?
[ ! -f ab ]; echo $?
[ ! -f a ]; echo $?
[  -f a ] && echo 'a is a file'
[ ! -f a ] && echo 'a is a file'
[ -d ~/jq ] 
[ -d ~/jqq ] 
echo "$?"
echo "$? - eq 0"
[ -d ~/jqq ] && echo 'brackets false'
[ ! -d ~/jqq ] && echo 'brackets false'
[  -d ~/jq ] && echo 'js is dir'
[  -d ~/jsq ] && echo 'js is dir'
ld -ld
ls ld
ls -ld
[ -d xx ] && mkdir xx
fc -1
[ ! -d xx ] && md xx
[  -d xx ] && md yy
date +%s
printf -v var '%(%s)T' -1
printf -v var 'onle'
awk 'BEGIN {srand(); print srand()}'
# Double quotes: disable all other characters except $, ', \\necho "$SHELL"\n# Single quotes: disable all special characters\necho '$SHELL'\n# backslash disables the special meaning of the next character\nls name\ with\ space
touch k\ \t
echo $SHELL
echo '$SHELL'
echo "$SHELL"
echo $(id -un):$(id -gn)@$(hostname -s)
echo $(id)
echo file.$(date +%Y-%m-%d-%H-%M-%S)
l11 &> /dev/null
l11 &> err
ping -c 1 8.8.8.8 > /dev/null && echo online || echo down
ping -c 1 8.8.8.8 > out && echo online || echo down
mail
var=$(<out)
ls > xx
ls > vv
var=$(<vv)
echo $var
k={1..100}
k=$(echo {1..100})
k=$(printf {1..100})
k=$(printf '%s' {1..100})
k=$(printf '%s ' {1..100})
echo $k
[[ -e a ]]
[[ -e aa ]]
[[ -e aa ]] && echo 'no'
[[ -e a ]] && echo 'no'
[[ -e aa ]] || echo 'no'
[[ -w a ]] || echo 'no'
chmod 777 a
chmod 754 a
ld /etc
ls /etc
fd . '/etc'
fd -td . '/etc'
fd -td -d 1 . '/etc'
fd -td -d 1 . '/etc' | column
fd -td -d 1 . '/etc' | sort | column
fd -tf -d 1 . '/etc' | column
cd /etc/group
cat /etc/group
cat /etc/group | column
[[ -O a ]]
[[ -O aa ]]
lt a
v /etc/profile
echo $PS1
type e
alias e="echo %?"
echo $?
alias e="echo $?"
[[ -f vv ]]
[[ -f vvv ]]
[[ -f a ]]
alias e='echo $?'
[[ ! -e a ]] || echo 'no'
[[ -e vvv ]]
[[ -e vv ]]; e
[[ -e vvv ]]; e
[[ 1 -eq 1 ]]; e
[[ 1 -eq 2 ]]; e
[[ 3 -lt 2 ]]; e
[[ 1 -lt 2 ]]; e
[[ 1 -lt 2 ]]; || e
[[ 1 -lt 2 ]] || e
[[ 1 -lt 2 ]] && e
command -v foo >/dev/null 2>&1 || { echo >&2 "I require foo but it's not installed.  Aborting."; exit 1; }
command -v foo
command -v fd
command -v fd > /dev/null
\n: 1666565446:0;\nls -hrt
\nls -lhrt
command -v qq > /dev/null
command -v ls
fda -esh
echo $RUNZSH
v .oh-my-zsh/tools/install.sh
command_exists() {\n  command -v "$@" >/dev/null 2>&1\n: 1666566042:0;command_exists sudo
command_exists sudos
hash ls
hash lst
hash lst 2>/dev/null
hash ls 2>/dev/null
groff -Thtml > o.html
groff
groff -Thtml
ls ~/.ssh/*.pub
hash
builtin hash "$@"
builtin hash "$@" | v -
. xx.sh
. b.sh
https://www.youtube.com/watch\?v\=C9VEBiNEGHo\&list\=PLaTamEysjzMcbZJ5Sw0ozkwfUFvz2WE8Z\&index\=3lt
ex Highlands_mp3
sc json.sh
rg 'c' ye.sh
cd you/blonde_dy
se '__'
fd "__" -exec rename "s/__/_/g" #!good replace garbage names
ps -aux | rg 'pyth' | v -
ls AC*
rm AC*
rm Elton_John___Rocket_Man__Official_Music_Video__mp3
rm Tracy_Chapman___Fast_car_mp3 Sin__ad_O_Connor___Nothing_Compares_2_U__Official_Music_Video___HD__mp3 Sting___Shape_of_My_Heart__
rm Earth__Wind___Fire___September__Official_HD_Video__mp3
rm Sting___Shape_of_My_Heart__Official_Music_Video__mp3
rm Sting___Shape_of_My_Heart__Leon__mp3
fd 'late'
hit 3
fc -l
fc -lr
fc -lrn
fc -e v 1 5
$HISTFILE\nfor a in {1..5}\ndo \ndone\ncat 1\nls | head -n 1\nalias wi='whereis '
fd -esh - nvim
vim -e +"redir>>/dev/stdout | map | redir END" -scq
v -e +"redir>>/dev/stdout | map | redir END" -scq
v -e +"redir>>/dev/stdout | map | redir END" -scq | v-
v -e +"redir>>/dev/stdout | map | redir END" -scq | v -
v -e +"redir>>x | map | redir END" -scq
v -c +"redir>>x | map | redir END" -scq
fd "_" -exec rename "s/_//g" #!good replace garbage names
fd ".*" -exec rename "s/mp3/\.mp3/g" #!good replace garbage names
rm AerosmithIDontWanttoMissaThingOfficialHDVideo.mp3\nrm DavidBowieSpaceOddityOfficialVideo.mp3\nrm ElvisPresleyCantHelpFallingInLoveOfficialAudio.mp3\nrm LedZeppelinStairwayToHeavenOfficialAudio.mp3\nrm TheKinksYouReallyGotMeOfficialAudio.mp3
fd "\.\."
fd "\.\." -exec rename "s/\.\./\./g" #!good replace garbage names
fd "BobDylan" -exec rename "s/BobDyLan/Dylan_/g" #!good replace garbage names
fd "BobDylan"
fd "BobDylan" -exec rename "s/BobDylan/Dylan_/g" #!good replace garbage names
fd -a json.sh
fd -a json.sh | v -
printf '%\n' "enter tube url:"
printf '%s\n' "enter tube url:"
v /mnt/c/all/bash/json.sh
ex NeilYoungHarvestMoonOfficialMusicVideo.mp3
source /mnt/c/all/bash/json.sh
wget "https://pdst.fm/e/chtbl.com/track/E91833/cdn.twit.tv/audio/twit/twit0897/twit0897.mp3" ##twit Mon 10/24/2022
wget https://podtrac.com/pts/redirect.mp3/traffic.libsyn.com/latenightlinux/LNL198.mp3
wget https://podtrac.com/pts/redirect.mp3/traffic.libsyn.com/latenightlinux/LNL199.mp3
\rm LNL199.mp3.1
ex twit0897.mp3
fd up
bat up
bat up.sh
cat up
lt up
lt up*
chmod 754 up.sh
./up.sh
$(date)
$(ls)
se '=\$')
ls > $(echo date)
se '=\$'
d=$(echo date)
d=$(date +%Y-%m-%d)
ls > $(date =%Y)
ls > $(date +%Y)
ls > $(date =%Y-%s)
ls > $(date +%Y-%s)
v $(date +%Y-%s)
echo $(date +%Y-%m-%d-%H-%M-%S)
echo $(date +%F)
fd '^2'
fd '^2' -X rm
printf '%s\n' "$(date +%Y)"
printf 'today is %s\n' "$(date +%Y)"
printf 'today is %s\n tomorrow is %s' "$(date +%Y)", "a"
printf 'today is %s\n tomorrow is %s\n' "$(date +%Y)", "$(date -d yesterday"
printf 'today is %s\n tomorrow is %s\n' "$(date +%Y)", "$(date -d yesterday)"
printf 'today is %s\nyesterday was %s\n' "$(date +%Y)", "$(date -d yesterday)"
time
printf 'today is %s\nyesterday was %s\n' "$(date +%Y)", "$(date +M -d yesterday)"
printf 'today is %s\nyesterday was %s\n' "$(date +%Y)", "$(date +%M -d yesterday)"
printf 'today is %s\nyesterday was %s\n' "$(date +%Y)", "$(date +%D -d yesterday)"
printf 'today is %s\nyesterday was %s\n' "$(date +%D)", "$(date +%D -d yesterday)"
pMrintf 'today is %s\nyesterday was %s\n' "$(date +%M %D)", "$(date +%D -d yesterday)"
printf 'today is %s\nyesterday was %s\n' "$(date +%M %D)", "$(date +%D -d yesterday)"
printf 'today is %s\nyesterday was %s\n' "$(date +%M +%D)", "$(date +%D -d yesterday)"
printf 'today is %s\nyesterday was %s\n' "$(date '+%M +%D')", "$(date +%D -d yesterday)"
printf 'today is %s\nyesterday was %s\n' "$(date '+%Y-%m-%d')", "$(date +%D -d yesterday)"
printf 'today is %s\nyesterday was %s\n' "$(date 'year +%Y-%m-%d')", "$(date +%D -d yesterday)"
printf 'today is %s\nyesterday was %s\n' "$(date '+%Y year -%m-%d')", "$(date +%D -d yesterday)"
printf 'today is %s\nyesterday was %s\n' "$(date '+%Y year -%M-%d')", "$(date +%D -d yesterday)"
printf $(date)
printf '%s\n' $(date)
printf '%s' $(date)
printf '%s ' $(date)
printf '%s ' $(date -%a)
printf '%s ' $(date '%a')
printf '%s ' $(date '+%a')
printf '%s\n ' $(date '+%a')
d=printf '%s\n' $(date '+%a')
printf '%s\n' $(date '+%a')
fd --changed-within 2mins
trash xxxxxxxxxxxxx
uname -a
uname -r
touch file.$(date +%Y-%m-%d-%H-%M-%S)
v ~/.config/nvim/init.vim
fd --changed-within 2mins -x rm
alias vinit='vim ~/.config/nvim/init.vim'
chmod 754 eis.sh
type main
./eis.sh
type -f main
se 'type'
gits
v eis.sh
sc sh.sh abc
alias xx
unalias xx
chmod 754 sh.sh
./sh.sh lssssssss
./sh.sh ls
./sh.sh vim
./sh.sh nvim
wi vim
lt /usr/bin/vim.tiny
lt /usr/bin/vim
type -a vim
sh.sh
./sh.sh
v sh.sh
cd .local
v runterm
v /home/steff007/.zshrc
fd --changed-within 3mins -x rm
se 'rm'
f n.sh
alias vinit='nvim ~/.config/nvim/init.vim'
touch file.$(date '+%Y-%m-%d-%H-%M-%S')
fd --changed-within 5min
fd --changed-within 5min -x rm
ls file*
lt file*
/rm file*
\rm file*
\rm 'k t'
v o.html
echo "eeeeeeeeeeeeeeeeee"
lt | ls
lt | column
lts | column
lts | more
fd -H -I -x stat
lt init
v init
cat init
\rm init
ls -a .gi*
git -am "update"
git commit -am "update"
se 'git.*am'
git commit --amend -am "update"
git log --format=%s | v -
alias | rg 'git'
fd comp
fda compinit
cat n.sh
less his.bak
more his.bak
less -s his.bak
more -s n.sh
more n.sh
less n.sh
less -s n.sh
v n.sh
v pp
alias jojo
cat some
init
v some
v zz
cat zz
sc zz
hello
fd --changed-within 5min 
/rm xxxxxxxxx*
\rm xxxxxxxxx*
\rm 'source some'
batcat
batcat wsl_aliases
alias | rg 'ls'
ldr | column
alias col="column"
ldr | col
hit 8
alias ldr='ls -td -- */ | head -n 20 | column'
cd /bin
fda php
fda '^php'
cd usr
cd games
cd sys
man xz
xz his.bak
ls -;t
ls -ltt
ls -ltr
ls -tr
ls -tr | tail
xz -9e his.bak.xz
du --max-depth=1
xz -9e jj.sh
ls gz
ls -S -l | head #sort by size
ls -S -l | rg '^d' | head #sort by size
/etc
ls -S -l | rg -v '^d' | head #sort by size
cd ~/.local
cd bin
xz -9e lf
wi lf
se 'for.*{'
se 'for.*\{'
for a in {1..5}; do echo $a;done
for a in {1..5000000000}; do echo $a;done
for a in {1..5000000}; do echo $a;done
for a in {1..5000000}; do echo $a;done &
pstree
pstree -aux 
pstree -p
pstree -l
se '\&'
fd -esh --changed-within=1days
fd -esh --changed-within=1days -X nvim
/rm 'xx!'
\rm 'xx!'
\rm vvvvvvvvvvvv zz gg
v /usr/share/nvim/runtime/syntax/vim/generated.vim
rg aalia
rg 'cyan'
head -n 20 .bashrc
rg 'cyan' .bashrc
rg -I 'cyan'
rg -H -I 'cyan'
rg --no-ignore 'cyan'
rg --no-ignore 'cyan' | less
rg -max-depth 2 --no-ignore 'cyan' | less
rg --max-depth 2 --no-ignore 'cyan' 
rg --max-depth 2 --no-ignore 'cyan' .bashrc
rg --max-depth 2 --no-ignore-dot --no-ignore 'cyan' 
rg --max-depth 2 --no-ignore-dot --no-ignore 'cyan' .bashrc
rg --max-depth 2 --no-ignore-dot --no-ignore 'memHogsPs'
rg  --no-ignore-dot --no-ignore 'memHogsPs' .bashrc
rg  --no-ignore-dot --no-ignore 'memHogsPs'
fda 'ripgrep'
fda -d 2 'ignore'
v -o .gitignore .ignore
rg --max-depth 2 --no-ignore-dot --no-ignore 'cyan' .
grep 'frumious'
\rm file.sh.shY-sh.shm-sh.shd-sh.shH-sh.shM-sh.shS
manv grep
grep 'frumious' .
find . -maxdepth | xargs echo
find . -maxdepth 1 | xargs echo
find . -maxdepth 1 | xargs printf '%s\n'
find . -maxdepth 1 | xargs grep 'frumious'
find . -maxdepth 1 -t file | xargs grep 'frumious'
se 'find.*max'
find . -maxdepth 1 -type f | xargs grep 'frumious'
fda -d 1 | rg 'bash'
fda -d 1 -X rg 'bash'
fda -d 1 -tf -X rg 'bash'
fda -d 1 -tf -X rg 'bash' | v -
fda -d 1 -tf -X rg 'frumious' | v -
rg frumious
rg --max-depth 2 --no-ignore-dot --no-ignore 'frumious' .
rg --max-depth 2 --no-ignore-dot --no-ignore 'frumious' .bashrc
alias rg
type rg
rg --version
find . -maxdepth 1 -type f | xargs grep -n 'frumious'
find . -maxdepth 1 -type f | xargs grep -n 'frumious' #!good find
fda -d 1 -tf | xargs rg 'frumious' #!good find
fda -d 3 -tf | xargs rg 'frumious' #!good find
fda -d 3 -tf | xargs rg 'frumious' #!good find | less
fda -d 3 -tf | xargs rg 'frumious' | less #!good find | less
fda -d 3 -tf -E 'hist*' | xargs rg 'frumious' | less #!good find | less
fda -d 3 -tf --exclue 'hist*' | xargs rg 'frumious' | less #!good find | less
fda -d 3 -tf --exclude 'hist*' | xargs rg 'frumious' | less #!good find | less
fd --exclude 'a*'
fd --exclude '4*'
fd --exclude 'p*'
fd -d 3 --exclude 'p*'
fda -d 3 --exclude 'p*'
fda -d 3 --exclude 'p*' | rg 'scrip'
fda -d 3 --exclude 'p*' | rg 'scrip' | xargs echo
fda -d 3 --exclude 'p*' | rg 'scrip' | xargs printf '%s/n'
se 'printf'
fda -d 3 --exclude 'p*' | rg 'scrip' | xargs printf '%s\n'
se 'chmod'
chmod 754 three.sh
./three.sh
./three.sh a b c
v three.sh
alias rg 'fd'
alias rg | 'fd'
alias | rg  'fd'
alias vf="v ~/functions.sh | v"
alias vf
alias vf="nvim ~/functions.sh | v -"
ps -aux | rg 'func'
kill -9 772
alias vf="v ~/functions.sh"
fd --changed-within 1days
lt | awk {'print $5'}
lt | awk {'print $1 --  $5'}
lt | awk {'print $1 $5'}
lt | rg -v 'total' awk {'print $1, $5'}
lt | rg -v 'total' | awk {'print $1, $5'}
lt | rg -v 't.*' | awk {'print $1, $5'}
lt | rg -v 'tot.*' | awk {'print $1, $5'}
lt | rg -v 'tot.*' | awk {'print $1, $5'} | xargs echo
lt | rg -v 'tot.*' | awk {'print $1, $5'} | xargs printf '%s\n'
lt | rg -v 'tot.*' | awk {'print $1, $5'} | xargs printf '%s'
lt | rg -v 'tot.*' | awk {'print $1, $5'} | xargs printf '%s  '
lt | rg -v 'tot.*' | awk {'print $1 $5'} | xargs printf '%s\n  '
lt | rg -v 'tot.*' | awk {'print $1 $5'} | xargs printf '%s\n'
touch jjjjjjjj
find 'jj*'
se 'find'
fd 'jj.*'
fd 'jj.*' | xargs rm
fd -tf | rg 'jjj'
v nnnn
fd nn
fd -tf 'n'
fd -tf 'n' | rg 'mmm'
fd -tf 'n' | rg 'mmm.*'
rg 'mmm'
fd -tf 'n' | xargs rg 'mmm.*'
fda -tf -d 1 | xargs rg 'frum.*'
fda -tf -d 3 | xargs rg 'frum.*'
fda -tf -d 2 | xargs rg 'frum.*'
fda -tf -d 2 | xargs rg --no-messages 'frum.*'
fda -tf -d 2 
fda -tf -d 2 | column
fda -tf -d 2 "'"
fda -tf -d 2 "\'"
fd '''
find .
fd --changed-within 1days -X nvim
fd --changed-within 365days -X nvim
fd --changed-within 3days -X nvim
type -a take
compgen -c | rg 'git'
take -a takegit
type -a takegit
type -a takegit | v -
v /home/steff007/.oh-my-zsh/lib/functions.zsh
echo $OSTYPE
fd -tf -d 1 | xargs rg 'aal.*'
fda -tf -d 1 | xargs rg 'aal.*'
fda -tf -d 1 | xargs rg 'fru.*'
v +/fru .bashrc
v +q! xxxxx
v +:ls xxxxx
v +:ls
take -a history
\rm -a
\rm '-a'
fd '-a'
fd '\-a'
fd '\-a' | xargs rm
\rm ./-a
\rm -rf ./-a
echo $BASH_ALIASES
echo "$BASH_ALIASES"
[[ -v $PATH ]]
[[ -v $PATHSS ]]
[[ -v $a ]]
se '['
se '\['
ls a*
touch a
v scripts/zcorrupt.sh
wget 'https://raw.githubusercontent.com/numToStr/dotfiles/master/neovim/.config/nvim/init.lua'
chmod 754 init.lua
wget 'https://raw.githubusercontent.com/numToStr/dotfiles/master/neovim/.config/nvim/lua/numToStr/settings.lua'
fd -tf -elua | xargs chmod 777
git clone https://github.com/numToStr/dotfiles.git
fd -elua
fda -elua
fda -elua | less
~/scripts/zcorrupt.sh
mv init.vim init.bak
v settings.lua
mv init.bak init.vim
echo llllllllll
wget 'https://raw.githubusercontent.com/numToStr/dotfiles/master/neovim/.config/nvim/lua/numToStr/autocmd.lua'
fda -elua | xargs chmod 777
v -o ye.sh yv.sh
mv init.vim ..
type -a nvim
v init.lua
printf "put ='foo'\n%%print\n" | nvim 
fd -a init
fd -a init | v -
nvim -u /home/steff007/.config/init.vim
alias ovim="nvim -u /home/steff007/.config/init.vim"
sc ~/.bash_aliases
ovim
nvim -u /home/steff007/.config/nvim/init.lua
alias nvim="nvim -u /home/steff007/.config/init.vim"
type -a left
ls -t
ls -t -1
left
left | head
alias nvim
git commit -am "added lua files"
glst () {\n  printf '%s\n' "git log --stat | vim -"\n  read\n  #git log --stat | nvim -\n: 1666768445:0;glst
nvim --headless -c 'call mkdir(stdpath("config"), "p") | exe "edit" stdpath("config") . "/init.lua" | write | quit'
alias v | clip
alias | rg clip
alias v | cl
nvim
alias ovim
alias v="ovim"
alias hi
alias nvim="ovim"
fd ".*" -exec rename "s/_+/_/g" #!good replace underlines names
fd sch
fd webm
fd ytp
fd -esh | xargs rg 'ytp' | less
cat json.sh
fd -esh | xargs rg 'yt' | less
fd -esh | xargs rg 'yt' 
fd -esh | xargs rg 'yt.*j' 
ex Schopenhauer_mp3
./json.sh
v json.sh
v b.json
se 'size'
ls -S -l -h | rg -v '^d' | head #sort by size
fd 'harris'
fd 'harris' | xargs echo
fd 'harris' | xargs echo vlc 
cp init.vim nvim
unalias v
alias v="nvim"
fd 'morn'
fd 'wagon'
fd 'plast'
fd 'dutch'
fd 'orlean'
fd 'orl'
fd '_mp3'
fd 'wor.*_mp3'
fd 'worr.*_mp3'
fd 'worr.*_mp3' -exec rename "s/_+/_/g" #!good replace  names
fd 'worr.*_mp3' -exec rename "s/_mp3/\.mp3/g" #!good replace  names
fd '\.mp3'
fd ' '
fd ''' -exec rename "s/_mp3/\.mp3/g" #!good replace  names
fd '\''
fd "'"
fd "__" -exec rename "s/_*/_/g" #!good replace garbage names
fd "_\w'
fd "_\w"
fd "_mp3"
fd '^_' | v -
fd '^_' | rg -v "\.mp3"
fd '^_' | rg -v "\.mp3" -exec rename "s/_//g"
fd '^_' | rg -v "\.mp3" -X rename "s/_//g"
fd '^_' | rg -v "\.mp3" | xargs echo
fd '^_' | rg -v "\.mp3" | xargs printf '%s\n'
fd '^_' | rg -v "\.mp3" | xargs rename "s/_//g"
fd 'mp3'
fd 'mp3$'
fd '[a-Z]mp3$'
fd '[a-z]mp3$'
fd '[a-zA-Z]mp3$' | nl
fd '[a-zA-Z]mp3$' | xargs rename "s/mp3/\.mp3/g"
fd '[a-z]mp3$' | nl
se 'git.*ori'
git diff --name-only master origin/master
git diff --name-only main origin/master
git diff --name-only main origin/main
git commit -am "added prepare for golden merge"
fda --changed-within 1day
v .git/logs/HEAD
se 'git.*vv'
v .cache/zsh/history
printf "put ='foo'\n%%print\n" | nvim -es
\rm -rf lll
sh test.sh
sc test.sh
sc test.sh a
sc test.sh 
a=".*"
sc test.sh aaaaaaaaaaaa
sc test.sh 'ls'
sc test.sh 'find .'
sc test.sh 'find .' 'fda'
manv hyperfine
alias hp="hyperfine "
type -a hp
hp 'ls -lhrt' 2>/dev/null
chmod 754 test.sh
./test.sh 'ls -lhrt'
./test.sh 'ls' 2>/dev/null
./test.sh 'ls -l' 2>/dev/null
./test.sh 'ls -l' 2>err
bash --debugger
arguments () {\n        echo The function location is $0\n        echo There are $# arguments\n        echo "Argument 1 is $1"\n        echo "Argument 2 is $2"\n        echo "<$@>" and "<$*>" are the same.\n        echo List the elements in a for loop to see the difference!\n        echo "* gives:"\n        for arg in "$*"; do echo "<$arg>"; done\n        echo "@ gives:"\n        for arg in "$@"; do echo "<$arg>"; done\narguments hello world
arguments 'ls -lhrt'
type -a arguments
type -a argumentss
type -f arguments
v mail.py
\rm nn
OPTS="-avr --delete --progress --exclude=${EXCLUDE} --delete-excluded"
echo ${OPTS[@]}
OPTS=" - lhrt"
ls ${OPTS[@]}
ls "${OPTS[@]}"
ls - lhrt
op="-lhrt"
ls "${op[@]}"
cd /home/steff007/hyper
alias v
alias v="nvim -u /home/steff007/.config/nvim/init.vim"
vinitv ini
./test.sh 'ls -l'
./test.sh 'ls lt'
./test.sh '-ls lt'
./test.sh '-ls'
./test.sh 'ls'
./test.sh 'ls dir'
./test.sh 'ls pwd'
type -a pwd
./test.sh 'pwd'
hp
hp ls
hp \ls
hp \ls \pwd
hp '\ls -l' \pwd
hp '\pwd' \pwd
hp "curl www.google.com"
./j
\rm j
chmod 754 j.sh
date +"%B"
date +"%B%A"
date +"%B %A"
d='~'
d='~/'
number=$(ls -l $d | wc -l)
echo "Enter a directory."\nread directory\nnumber=$(ls -l $directory | wc -l)\necho "There are $number files in $directory"
d='.'; number=$(ls -l $d | wc -l)
echo $number
ls $number
gcc
A="X Y"\nA+=" Z"\necho "$A"
a="jim"
a="ls -lhrt"
hyperfine $a
./j.sh a
./j.sh a b
v j.sh
./j.sh 'ls -lhrt'
hp 'ls -lhrt'
cdm(){ cd "$*"; }
cdm ~
hiscdm ~
cdm(){ ls "$*"; }
lt -lhrt /etc
cdm(){ ls -lhrt "$*"; }
cdm /etc
cm(){ hyperfine "$*"; }
cdm(){ hyperfine "$*"; }
cdm ls
cdm(){ hyperfine "$*" 2>/dev/null; }
cdm 'ls -lhrt'
cdm 'ls -lhrt' 'ls'
cdm "curl www.google.com"
hix
head a.sh
fd -esh | xargs head -n 2
chmod 754 l.sh
./l.sh
./l.sh 1 2
./l.sh 1 2 "-lll"
./l.sh 1 ls -lhrt
./l.sh ls -lhrt
echo $d
echo $dd
eval 'ls -lhrt'
a="hyperfine 'ls -lhrt'"
eval "hyperfine 'ls -lhrt 2>/dev/null'"
se 'null'
a="hyperfine 'ls -lhrt 2>/dev/null'"
cm
fd kottkeLink.txt -x vim
fd kottkeLink.txt -exec vim
fd kot 
fd kot -x | v -
fd kot -x --exec nvim
fd kot -X nvim
fd -H -I -d 2 '.*rc'
fd -H -I -d 2 '.*rc' | xargs rg 'bash'
fd -H -I -d 2 '.*rc' | xargs rg 'path'
export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:
LS
fd -H -I -d 2 '.*rc' | xargs rg 'PATH'
ipython3
fd -H -I -d 2 -esh  | xargs rg 'git'
fd -H -I -d 2 -esh  | xargs rg 'git' | less
fd -H -I -d 2 -esh  | xargs rg 'git' | v -
fda -epdf
alias | rg ms
fd | -rg 'ms.*z'
fd | rg 'ms.*z'
fda -d 2 | xargs rg 'flutter'
fda -tf -d 2 | xargs rg 'flutter'
rdh
fd --help > fdh
fd 'a'
fd '^a'
fd -d 1 '^a'
fd -d 1 '^a' -x echo {}
fd -d 1 '^a' -x echo {/}
fd -d 1 '^a' -x echo {/.}
fd -d 1 '^a' -a -x echo {/.}
fd -d 1 '^a' -a -x echo {}
fd -d 1 '^a' -a -x echo {}; cat {}
fd -d 1 '^a' -a -x  cat {}
fd -d 1 'rc' -a -x  cat {}
fd -d 1 -tf 'rc' -a -x  cat {}
fda -d 1 -tf 'rc' -a -x  cat {}
fda -d 1 -tf 'rc' -a -x  rg 'frumious' {}
fda -d 1 -tf 'rc' -a | args  rg 'frumious' {}
fda -d 1 -tf 'rc' -a | xargs  rg 'frumious' {}
fda -d 1 -tf 'rc' -a | xargs  rg 'flutter' {}
fda -d 1 -tf 'rc' -a 
fda -d 1 -tf 'rc' -a | xargs  rg 'flutter' 
fda -d 2 -tf 'rc' -a | xargs  rg 'flutter' 
fda -d 2 -tf 'rc' -a | xargs  rg 'path' 
fda -d 2 -tf 'rc' -a --ignore-case | xargs  rg 'path' 
echo export PATH="$(pwd):$PATH"
echo `kk`
printf export PATH="$(pwd):$PATH"
printf 'export PATH="$(pwd):$PATH"'
printf '%s\n' 'export PATH="$(pwd):$PATH"'
sh pp.sh
chmod 754 pp.sh
pp.sh
b 1
cd jq
mv pp.sh pp
pp
fda -d 2 -tf 'rc' -a --ignore-case | xargs  rg --ignore-case 'path' 
v +8 .bashrc
e $PATH | v -
sc path
fda -d 2 -tf 'rc' -a  | xargs  rg --ignore-case 'pys'
fda -d 2 -tf 'rc' -a  
sc .bashrc
fd -d 1 -tf 'rc'
fda -d 1 -tf 'rc'
ls pys
alias axit='tmux kill-server'
printf '%s\n' $(date '+%F')
printf '%s\n' $(date '+%F%S')
printf '%s\n' $(date '+%F %S')
printf '%s\n' $(date '+%F - %S')
printf '%s%s\n' $(date '+%F - %S')
printf '%s%s%s\n' $(date '+%F - %S')
manv date
date -d
date '+%s'
printf '%s\n' $(date '+%s')
printf 'epoch is %s\n' $(date '+%s')
fda -d 2 -tf 'rc' -a  | xargs  rg --ignore-case 'sour.*alia'
v de.sh
chmod 754 comm.sh
./comm.sh
./comm.sh "Jim" tom
v comm.sh $(ls ~)
ls ~ | wc
ls ~
while read line; do echo "$line"; done
while read line; do ls -lhrt "$line"; done
v pc.sh
bash -v
bash -v | less
bash -v de.sh
cat none
bash -v de.sh > none
v *.sh
./comm.sh $(ls ~)
./comm.sh $(ls ~) | less
./comm.sh $(ls ~) | v -
./comm.sh $(ls ~) 
v comm.sh
chmod 754 ff.sh
bash  ff.sh
bash -x  ff.sh
v gg.sh
bash gg.sh
apt -qq list --installed nvim
apt list --installed
apt list --installed nvim
apt list --installed neovim
apt list --installed | rg 'f'
apt list --installed | rg '^f'
chmod 777 debug.log
chmod 770 debug.log
chmod 750 debug.log
chmod 754 debug.log
v bookmarks_10_29_22.html
wget https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh
v install.sh
lkkkk>err 2>&1
lkkkk>err
chmod 755 co
let "var1 = 5"; echo $var1
bash co
head -n2 duh.txt
head -n2 co
head co
head ff
head ff.sh
head re.sh
\rm file
InfoWarslt
ot
read -p 'Username: ' uservar
./co
fd | xargs rg "read.*p"
v rg.sh
mv rg.sh tx.sh
fd -x tx.sh > kk
sc kk
stat -f kk
stat --format="%F" /dev/null
stat --format="%F" kk
stat --printf='Name: %n\nPermissions: %a\n' /etc
#%y     time of last data modification, human-readable
stat --printf='Name: %y\nPermissions: %a\n' /etc
stat --printf='mod: %y\n' /etc
touch kk
stat --printf='mod: %y\n' kk
manv stat
stat --printf='name %n mod: %y\n' kk
stat --printf='name: %n mod: %y\n' kk
stat --printf='name: %n access: %x    mod: %y\n' kk
stat --printf='name: %n \t access: %x    mod: %y\n' kk
cat kk
stat --printf='name: %n \t access: %x\tmod: %y\n' kk
fd -x tx.sh
fd -x tx.sh | sort | v -
fd -x tx.sh | sort
fd -d 1 -x tx.sh | sort
fd -d 1 -x tx.sh | sort | v -
fd /etc -d 1 -x tx.sh | sort | v -
fd . '/etc' 
fd . '/etc' -tf
fd . '/etc' -tf -d 1
v /etc/rpc
fd . '/etc' -tf -d 1 -x ~/junk/tx.sh | sort | v -
v  /etc/screenrc
v  /etc/wgetrc
v  /etc/debconf.conf
v /var/cache/debconf/config.dat
stat --help
stat --help | v -
date --help | v -
TZ='America/Chicago' date
TZ='America/new_york' date
TZ='America/New_York' date
TZ='London' date
j
set j
j=`ls -lhrt`
echo $j
alias | rg mk
cat functions.sh
type -a vdiff
type -f vdiff
compgen -c 
compgen -c | column | v -
compgen -f | column | v -
type -f vimhist.txt
type -a vimhist.txt
compgen -f |  v -
rg --help | v -
gawk
gawk -F: '{ print $1 }' /etc/passwd
gawk --help | v -
man ls
e $PATH
fd -a printf
type -a sh
type -f sh
type -f -a sh
sh --version
sh -version
sh
alias | rg note
rm My_Way__2008_Remastered__mp3
\rm Somethin__Stupid__2008_Remastered__mp3
cat vsext.txt| column
lt -l
fd 'wslconfig'
fda 'wsl.*'
fda -d 1 -a 'wslcon'
fda -d 1 -a 'wslcon' -x vim
fda -d 1 -a 'wslcon' -x v
fda -d 1 -a 'wslcon' -X nvim
fda -d 1 -a 'wslcon' -x nvim
fda -d 1 -a 'wslcon' | xargs nvim
free -g -h -t
free -g -h -t 
free -g -h -t > before
free -g -h -t > after
v before after
v .wslconfig
v -o before after
exi
cat --help | v -
v line.txt
tr -d '\r' < line.txt > gline.txt
cat -v line.txt
cat -v gline.txt
se 'tran'
se 'td'
se 'replace'
fd "Frank" -exec rename "s/Frank_Sinatra_//g" #!good replace mult underscore names
mv ___I_Don_t_Stand_a__Ghost_of_a_Chance_With_You_mp3 Dont_stand.mp3
fd "_mp3" -exec rename "s/_mp3/\.mp3/g" #!good replace mult underscore names
ps -aux | rg 'py'
fd 'cover'
fd 'cover' -X lt
fd 'cover' -X ls -lhrt
c=$(pwd)
e $c
alias c
alias 3
printf '%s\n' "$1"
ppp() { printf '%s\n' "$1" }
ppp c
ppp $c
type -a c
p() { printf '%s\n' "$1" }
p $path
ls --help | v -
cd you/frank
fd _mp3
rm Nice_Work_If_You_Can_Get_It_mp3 Nice_work.mp3
mv Nice_Work_If_You_Can_Get_It_mp3 Nice_work.mp3
tmux split-window -p 75
split-window -h -c "#{pane_current_path}"
tmux split-window -h -c "#{pane_current_path}"
tmux neww
tmux new-window -c "$PWD"
p $PWD
type -f se
h3 date
alias t7='tmux split-window -p 75'
he date
set 'date'
se 'date.*\$'
zsh
type -a history
fd -esh | xargs rg 'hyperfine'
fd -esh | xargs rg 'bash'
se 'rg.*ig'
rg bash
rg hyperfine
rg hyperfine --files
rg --files
fd --files
rg 'bash' -l
rg --file jp.sh '.*'
rg '.*' --file jp.sh 
rg 'j'
rg 'frum' --sort accessed
rg 'frum' --sort accessed | v p
rg 'frum' --sort accessed | v -
rg 'frum' --stats
fd --stats
neww -c "#{pane_current_path}" man tmux
tmux new-window -c "#{pane_current_path}" nvim
tmux new-window -c "#{pane_current_path}" zsh
type -a tmux
type -a neww
t7
set 'shell'
se 'shell'
shellcheck ~/functions.sh
fd 'sch'
v essays_of_schopenhauer_2107_librivox.zip
md /mnt/c/scho
unzip essays_of_schopenhauer_2107_librivox.zip -d /mnt/c/scho
cd scho
fd -d 2 'git'
rm vim_comm.txt
fd _yu
fd y_u
fd y_u -X v
fd y_u -X nvim
git diff HEAD^.. | v -
se 'name.*only'
git diff --name-only head^..
git diff --name-only head^...
git diff --name-only head^^
v bash_history bash_history_u
v gcloud_fun
alias lln="ls -lhtr  --time-style long-iso | tac | cat -n | tac | sed -s 's/^\s*\([0-9]*\)\s*\(.*\)/[\1]  \2 [\1]/'g && pwd"
lln -a
lln
l -a
touch lll
ls -ahrt
alias lta='ls -ahrt'
alias | rg '^l' | column
touch newdir/fff
lta newdir
lt junk
lta junk
lta
rg 'head' --max-depth=1
rg -c 'head' --max-depth=1
rg -c 'export' --max-depth=1
rg -c --no-ignore 'export' --max-depth=1
rg -c --no-ignore --no-ignore-dot 'export' --max-depth=1
rg -c --no-ignore --no-ignore-dot --no-ignore-vcs 'export' --max-depth=1
fdi --changed-within=120min | xargs rg 'export'
fdi -tf --changed-within=120min | xargs rg 'export'
fdi -tf -d 1 --changed-within=120min | xargs rg 'export'
fdi -tf -d 1 --changed-within=120min 
fda -tf -d 1 --changed-within=120min 
fda -tf -d 1 --changed-within=120min | xargs rg 'export'
fda -tf -d 1 --changed-within=2days | xargs rg 'export'
fda -tf -d 1 | xargs rg 'export'
fd 'awk'
fd 'awk' -X rm
fda -tf -d 1 | xargs rg 'export' | v -
fda -tf -d 1 | rg -v 'his' | xargs rg 'export' | v -
se 'hyperfine'
eval "hyperfine 'ls -lhrt'"
eval "hyperfine 'ls -lhrt' >err 2>&1"
eval "hyperfine 'ls -lhrt' 2>&1"
jj="hyperfine 'ls -lhrt' 2>&1"
eval $jj
eval $jj 2>&1
git symbolic-ref HEAD
cat .git/HEAD
git diff --name-only head^^^^
git diff --name-only head^^^^..
git diff --name-only head^3
git diff --name-only HEAD
git diff --name-only HEAD^3
git diff --name-only HEAD@{3}
git log f7432
git stat f7432
git log f7432 --stat
git log HEAD@{4} --stat
git log HEAD@{2} --stat
git log HEAD@{1} --stat
gst | more
git -am "not sure"
cd non
rm -rf non
git rm non/
git rm -r non/
git commit -am "not sure"
fd "\s"
mkcd moregit
cd moregit
curl 'https://api.github.com/repos/stedolan/jq/commits?per_page=5' | jq '.[0]'
curl 'https://api.github.com/repos/stedolan/jq/commits?per_page=5'
curl 'https://api.github.com/repos/stedolan/jq/commits?per_page=5' | v -
curl 'https://api.github.com/repos/wither7007/all_wsl/commits?per_page=5'
curl 'https://api.github.com/repos/wither7007/all_wsl/commits?per_page=5' | v -
fd -d 1 | rg  "\.sh"  | xargs file
fd -d 1 | rg  "git"  | xargs file
fd -d 1 | rg  "git"  | xargs 
fd -d 1 | rg  "git"  | xargs printf '%s\n\n'
fd -d 1 | rg  "git"  | xargs printf 'me\%s\n\n'
fd -d 1 | rg  "git"  | xargs printf 'me\n%s\n\n'
fd -d 1 | rg  "git"  | xargs printf 'me\n%s\n\n' > nothin
cat nothin
fd -d 1 =X rg  "git"  | xargs printf 'me\n%s\n\n' > nothin
fd -d 1 -X rg  "git"  | xargs printf 'me\n%s\n\n' > nothin
fd -d 1 -X echo
fd -d 1 -X rg 'git'
fd -tf -d 1 -X rg 'git'
fd -tf -d 1 -X rg 'git' | v -
fd -tf -d 1 -X rg 'git' | xagars echo
fd -tf -d 1 -X rg 'git' | xargs echo
fd -tf -d 1 -X rg 'gittt' | xargs echo
v tttcurl 'https://api.github.com/repos/wither7007/all_wsl/commits?per_page=5'
\rm tttcurl
v ttt
fd -tf -d 1 -X rg 'vorpal' | xargs echo
cp ttt sss
fd -tf -d 1 -X rg 'vorpal' | xargs printf '%s\n\n'
hyperfine "fd -tf -d 1 -X rg 'vorpal' | xargs printf '%s\n\n'"
hyperfine "fd -tf -d 1 -X rg 'vorpal' | xargs printf '%s\n\n'" 2> /dev/null
a="hyperfine 'ls -lhrt' 2>/dev/null"
fda --changed-within 1day 'vim'
fda --changed-within 1day 'v'
fda 'vim'
fda --changed-within hours 'v'
fda --changed-within=1hours 'v'
fda --changed-within=1hours
fda --changed-within=1hours | v -
v .local/share/nvim/shada/main.shada
nvim -i
nvim -i x
nvim -i 
nvim -i a
wi win32yank
cp /usr/local/bin/win32yank.exe /usr/local/bin/clip.exe
sudo cp /usr/local/bin/win32yank.exe /usr/local/bin/clip.exe
clip
sudo rm /usr/local/bin/clip.exe
tmux new-window -c "#{pane_current_path}" bash
fda 'conf'
cat co
v -i co
nvim -i co
cat AnyFile.txt
v co
fda -d 1 'tmux'
fda -d 1 'tmux' | xargs rg "a"
fd --changed-within 1hour -0 
fd --changed-within 10mins -0 
chmod 755 aaa
fd --changed-within 1hour -0 | xargs -0 sh -c \\n: 1667455039:0;v aaa
fd --changed-within 1hour -0 | xargs -0 sh -c 
fd --changed-within 1hour -0 'aaa' | xargs -0 sh -c 
fd  -0 'aaa' | xargs -0 sh -c 
fd  -0 'aaa' | xargs  -0 echo; sh -c 
fd  -0 'aaa' | xargs  -0 echo;
fd  -0 'aaa' | xargs  -0 echo {};
fd  -0 'aaa' | xargs  -0 stat;
fd  -0 'aaa' | xargs  -0 stat; echo
fd  -0 'aaa' | xargs  -0 echo
fd  -0 'aaa' | xargs  -0 echo; stat
fd  -0 'aaa' | xargs  -0 echo; stat {}
fd  -0 'aaa' | xargs  -i echo; stat {}
fd  'aaa' | xargs  -i echo; stat {}
fd  'aaa' | xargs  -i echo; stat 
fd  'aaa' | xargs  -i{} echo; stat 
fd  'aaa' | xargs  -I{} echo; stat 
fd  'aaa' | xargs  -I{} echo {}
fd  'aaa' | xargs  -I{} echo {}; stat {}
fd  'aaa' | xargs  -i{} echo {}; stat {}
wc *.sh
fd  'aaa' | xargs  -I{} /bin/bash -c "echo {}; stat {}"
fd  'aaa' | xargs  -I{} /bin/bash -c "echo {}; cat {}; stat {}"
fd  'aaa' | xargs  -I{} /bin/bash -c "echo {}; cat {}; stat {}; printf '\n\n' "
fd  -esh | xargs  -I{} /bin/bash -c "echo {}; cat {}; stat {}; printf '\n\n' "
fd  -esh | xargs  -I{} /bin/bash -c "echo {}; cat {}; stat {}; printf '\n\n' " | v -
fd  -esh | xargs  -I{} /bin/bash -c "echo ************* {}; cat {}; stat {}; printf '\n\n' " | v -
fd  -esh | xargs  -I{} /bin/bash -c "echo {}; cat {}; stat {}; printf '**********\n\n' " | v -
v hyper/k.sh
fd  -esh | xargs  -I{} /bin/bash -c "source ~/.bash_aliases; echo {}; cat {}; stat {}; printf '**********\n\n' " | v -
fd  -esh | xargs  -I{} /bin/bash -c "source ~/.bash_aliases; echo {}; cat {}; stat {}; printf '**********\n\n' "
alias
fd  -esh | xargs  -I{} /bin/bash -c "source ~/.bash_aliases; alias; echo {}; cat {}; stat {}; printf '**********\n\n' "
fd  -esh | xargs  -I{} /bin/bash -c "source ~/.bash_aliases; alias; echo {}; cat {}; stat {}; printf '**********\n\n' " | v -
ls | echo ok
ls | xargs echo ok
printf "jim\n"
ls | xargs printf "jim\n"
ls | xargs echo "jim\n"
ls | xargs echo "jim"
ls | xargs printf "jim"
lt | xargs echo "jim"
lt | xargs echo "jim\n"
lt | xargs printf '%s\n'
ls | xargs printf '%s\n'
ls | xargs printf '%s\n' "jim "
ls | xargs printf '%s\n' "jim " | v -
ls | xargs -n 1 printf '%s\n' "jim " | v -
ls | xargs -n 1 printf '%s' "jim " '\n' | v -
ls | xargs -n 1 printf '%s' "jim "  | v -
ls | xargs -n 1 printf '%s ' "jim "  | v -
printf '%s and %s\n' How now brown cow
/usr/bin/printf '%s and %s\n' How now brown cow
printf --version
se 'help'
he() { $1 --help | nvim - }
he 
he() { eval '$1 --help | nvim -' }
he
he pwd
locate sample.txt
find / -mtime 10
cd /home
cd new
rm new
rm -rf new
cd steff007
find /proc -print0 | xargs -0
find /proc | xargs
find /proc | xargs printf '%s\n'
find /proc | xargs -n1 printf '%s\n' "jim"
find /proc | xargs -n1 printf '%s%s\n' "jim"
find /proc | xargs -n1 printf '%s%s\n' "jim "
cd /proc
cd 33
cat arch_status
cd net
sudo duh
sudo du -h --max-depth=1
he proc
he xargs
he ifs
man ifs
find / -mmin -1
find  -mmin -1
find  -size 10M
find  -size 10M | xargs ls -lhrt
find  -size 5M | xargs ls -lhrt
find  -size 2M | xargs ls -lhrt
find  -size 1M | xargs ls -lhrt
lcd
a ="something"
a="something"
e $a
echo $a
alias e
p "$a"
p '$a"'
p '$a'
p '"$a"'
a="- lshrt"
ls $a
eval "ls $a"
p $A
a="fd -d 1"
a="fd -d 1 | tail"
a="fd -d 1 \'up\' | tail"
a="fd -d 1 'up' | tail"
$b="up"
b="up"
$b="a.*"
b="a.*"
p $b
eval $a
v date
chmod 755 date
./date
a=''
[[ -e a ]] && echo 'yes'
[[ -e ff ]] && echo 'yes'
[[ -e a ]] || echo 'no'
[[ -e ff ]] || echo 'no'
a="fd -d 1 '$b' | tail"
[[ -z $a ]] && echo 'no'
[[ -z $a ]] || echo 'no'
fd hum
alias lt='ls --human-readable --size -1 -S --classify'
lt |head
lls
lts | 
alias lts='ls --human-readable --size -1 -S --classify | head -n9'
alias lts='ls --human-readable --size -1 -S --classify | head -n19'
lt *.txt
alias lta='ls -ahrt'\nalias ltc='ls --human-readable --size -1 -S --classify | column' \nalias lth='ls --human-readable --size -1 -S --classify | head -n19'\nalias ltl='ls --human-readable --size -1 -S --classify'
ltc
ltl
lth
cd sheet
du -sh * | sort -h
alias zsort="du -sh * | sort -h"
zsort
fd 'all'
se '.*()'
se '.*().*{'
se '.*().*\{'
lt bash*
lt bas*
ls bas*
ls bas.*
ls t*
ls git*
ls b*
ls -lhrt ba*
fd -tf bash
fd -tf bash -X ls -lhrt
bash bashrc
se 'v.*\d'
se 'v\s.*\d'
shellcheck bashrc
v +48 bashrc
fd bash
git commit -am "updated bashrc"
ls *.sh | xargs head
\rm n.sh
find / - inum `ls -i | grep work | cut -d' ' -f1`
find  - inum `ls -i | grep work | cut -d' ' -f1`
find  inum `ls -i | grep work | cut -d' ' -f1`
find . - inum `ls -i | grep work | cut -d' ' -f1`
find / - inum `ls -i | grep <file-name> | cut -d' ' -f1`
alias ll='LC_COLLATE=C LS_COLORS="$LS_COLORS:mh=1;37" ls -lA --si --group-directories-first'
ll | rg 'work'
lt work
ls -lhrt work
lt wor*
fd -a work
lt | rg work
lt | rg w*
lt | rg w.*
lt | rg 'w.*'
lt | rg '^d'
stat work
ln aaa junk/aaa
sh aa
sh aaa
stat aaa
find . -samefile aaa
ls -li
ls -li | rg -v '^d'
ls -l | rg -v '^d'
ls -l | rg -v '^d' | xargs ls -i
ls -i xx
ls -i x
stat bashrc
ls -i ba*
fd 'bash'
fd 'bash' -X ls -i
fd 'bash' -X ls -li
fd 'bash' | xargs ls -li
ls -i /
ls -i
ls -il
cat /dev/random
cat /dev/random | tail
cat /dev/random | head
cat /dev/random | head -n1
echo -n "Enter the username: "\nread name
echo  "Enter the username: "\nread name
echo -n "Enter the username: "\nread name
echo -n "Enter the username: ";read name
echo -n "Enter the username: ";read name; printf '%s\n' $name
echo -n "Enter the username: ";read name; printf 'hello %s\n' $name
printf "Enter the username: ";read name; printf 'hello %s\n' $name
touch jim
printf "Enter the username: ";read name; printf 'hello %s\n' $name; ls $name
sd 'xxx' 'a' err
v err
lt /mnt/c/all/ps
chmod 755 space.sh
man read
tldr read
sed '1 aappended line' your-file ok
v ok
sed '1 aappended line' ok
cat ok
sed '1 $(date)' ok
a=$($date)
e a
a=$(date)
p a
echo a
touch ###
touch "xxx'
bash -c fd "[^a-zA-Z0-9]" -exec rename "s/[^a-zA-Z0-9]/_/g" #!good replace garbage names
echo ${nvim -i co}
eval fd "[^a-zA-Z0-9]" -exec rename "s/[^a-zA-Z0-9]/_/g" #!good replace garbage names
touch \{
eval fd "[^a-zA-Z0-9]" | xargs rename "s/[^a-zA-Z0-9]/_/g" #!good replace garbage names
rm _
fd "[^a-zA-Z0-9]"
fd "[^a-zA-Z0-9]" | xargs rename "s/[^a-zA-Z0-9]/_/g" #!good replace garbage names
fd "[^a-zA-Z0-9]" -exec rename "s/[^a-zA-Z0-9]/_/g" #!good replace garbage names
j=$(echo "$(${FDL_HOME}/bin/cypher2 DEC ${CF_KEYPFX} ${CF_KEYLEN} ${CF_PASS}== | grep "decrypt text" | gawk -F': ' '{print $2}')" | perl -e print)
echo '2 * 3 > 5' is a valid inequality.
2+3
echo 'fd "[^a-zA-Z0-9]" -exec rename "s/[^a-zA-Z0-9]/_/g" #!good replace garbage names'
n=$(echo 'fd "[^a-zA-Z0-9]" -exec rename "s/[^a-zA-Z0-9]/_/g" #!good replace garbage names')
rm jim jim\ is
rm jim_is
touch 'jim is'
eval $n
v space_sh
touch 'jimmy is'
bash -c fd "[^a-zA-Z0-9\.]" -exec rename "s/[^a-zA-Z0-9]/_/g" #!good replace garbage names
mv count_sh count.sh
mv count_py count.py
fd "[^a-zA-Z0-9\.]" -exec rename "s/[^a-zA-Z0-9]/_/g" #!good replace garbage names
fd "_" -exec rename "s/_/\./g" #!good replace garbage names
touch ' a '
./space_sh
./space.sh
fd -td
pwd \\n: 1667626346:0;pwd; \\n: 1667626362:0;his
stty
stty all
stty --help
stty --help |v -
stty -a
du -a | cut -d/ -f2 | sort | uniq -c | sort -nr
du -a | cut -d/ -f2 | sort | uniq -c | sort -nr | head -n10
du -a | cut -d/ -f2 | sort | uniq -c | sort -nr 
cd travis
v output.log
fd "_+" -exec rename "s/_+/_/g" #!good replace mult underscore names
v ~/pys/space.sh
fd 'fun'
cha 20
\rm hyper/ok\n\rm jq/ok\n\rm junk/ok
fd 'ok'
\rm moregit/ok\n\rm ok\n\rm pys/ok
fd 'ok' | v -
du -a
du -a | cut -d/ -f2 | sort | uniq -c | sort -nr | v -
cd ~/.config/nvim
v init.vim
v init2.vim
mv init.vim init3.vim
cp init2.vim init.vim
rg 'f6'
rg -ignore-case 'f6'
rg -ignore-case 'f6' .
rg -ignore-case 'a' .
grep 'a' *
grep 'f6' *
v /mnt/c/all/vmaps.txt
cat xxxxx
\rm xxxxx
md to
\rm -rf to
mkcd to
seq 10
seq -w 10
he seq
hit 
seq 0 1 10
for P in $(seq 10); doc touch $P; done
for P in $(seq 10); do touch $P; done
ls | sort -n | sd '\n' ,''
ls | sort -n | sd '\n' ,' '
ls | sort -n | sd '\n' ,' - '
ls | sort -n
ls | sort -n | v -
git log 
git stat
git commit -am "playing with more"
lt -hrt
rg 'bash' 
sed -i 's/old-word/new-word/g' test.sh
sed -i 's/special/nnnnnnnnnnnnnnnnnnnnnnnnnnnnn/g' test.sh
sed -i '1s/^/task goes here\n/' 3
cat 3
sed -i '1itask goes here' 2
cat 2
se 'seq' | tail
for pp in $(seq -f "%04g" 5 3 20); do touch $pp; done
sed -i '1itask goes here' 0020
sed -i '1i\n\n\nj' 0020
v 0020
sed -i '\n\n\nj' 0017
sed -i '1i\n\n\nj' 0017
v 0017
echo '\n\n\n' >>0011
sed -i '1i\n\n\nj' 0011
v 0011
chmod 755 tx.sh
echo 'echo "!#/bin/bash"'
echo '"!#/bin/bash"'
echo '!#/bin/bash'
cd hyper/to
\rm jojo
./tx.sh jojo
cat jojo
fd | 
fd | xargs tx.sh
se 'fd.*xargs'
se 'fd.*xargs' | v -
fd | xargs ./tx.sh
fd -X ./tx.sh
fd -x ./tx.sh
fd '\d' -x \rm
fd '\d' -x ./tx.sh
head -n2 *
#sed -i 's/\$//g' test.sh
v test.sh
sed -i 's/\$//g' test.sh
cat test.sh
fd '1' | xargs sed -i 's/\$//g'
fd '1' | xargs sed -i 's/\!\#//g'
fd '1' | xargs sed -i 's/\/bin//g'
cat 10
rg 'bash' l*
rg 'bash' 1
rg 'bash' 1*
rg 'bash' *
fd 'taxi'
cha 2000 | nl
git diff | more
less nuts
cat nuts
git diff > nuts
v nuts
rg 'cl.*' *
fd -d 1 xargs rg 'cl.*' 
fd -d 1 -tf xargs rg 'cl.*' 
fd -d 1 -tf -x rg 'cl.*' 
fd -d 1 -tf -x rg 'clip.*' 
fd -d 1 -tf -x rg 'clip.*' | v -
chmod 755 t
t 'jim'
fd -d 1 -tf -x t
v kkk
cat t
fd -d 1 -tf -x t | v -
v t | less
v t
t | v -
t > v 
v v
t
\rm v
t > ww
v ww
cat ww
scripts/zcorrupt.sh
PATH=/bin:/home/steff007:/home/steff007/.cargo/bin:/home/steff007/.local/bin:/home/steff007/jq:/home/steff007/pys:/sbin:/usr/bin:/usr/games:/usr/lib/wsl/lib:/usr/local/bin:/usr/local/games:/usr/local/sbin:/usr/sbin:
I3
v bashrc
v 
v .bashrc .zshrc
se
type -a se
rg --max-depth 2 bash
rg --max-depth 1 bash
head .bashrc
rg --max-depth 1 frumious
rg -c --no-ignore --no-ignore-dot --no-ignore-vcs --max-depth=1 'frumious'
grep 'frumious' *
rg -c --no-ignore --no-ignore-dot --no-ignore-vcs --max-depth=1 'frumious' .bashrc
rg  --no-ignore --no-ignore-dot --no-ignore-vcs --max-depth=1 'frumious' .bashrc
rg  --no-ignore --no-ignore-dot --no-ignore-vcs --max-depth=1 'frumious' 
alias glf='git log --oneline HEAD..@{u}'
git commit -am "playing glf"
glf
get fetch
cd crows
v mp3
rg --hidden 'f'
rg --hidden 'frumious'
v qqq
\rm qqq
rg --hidden --max-depth=1 'frumious'
rg --hidden --max-depth=1 'rc'
rg --hidden --max-depth=1 'rc' | v -
rg --hidden --max-depth=1 'bashrc' | v -
rg bash scripts
ls scripts
rg --ignore-case bash scripts
rg bash *
head -n1 *.sh
rg --ignore-case bin scripts
rg --ignore-case bin winps
rg --ignore-case bin pys
rg --ignore-case '\sbin' pys
rg --ignore-case 'bin\s' pys
rg --ignore-case 'bin\s' pys | args stat
rg --ignore-case 'bin\s' pys | xargs stat
rg --ignore-case 'bin\s' pys | echo
rg --ignore-case 'bin\s' pys 
rg --ignore-case 'bin\s' pys | xargs echo
rg --ignore-case 'bin\s' pys | xargs printf '%s\n'
rg --ignore-case 'bin\s' pys | xargs printf '%s'
he set
man set
man variable
ls '*.sh'
rg -l 'frum'
rg -l 'frum' | xargs stat
type -a fdh
manv read
he read
he fd
he rg
rg 'frum;
rg 'frum'
rg --stats 'frum'
rg --stats 'frum' | nl
fd -tx
fd -d 1 -tx
v xx.sh
rg --stats 'frum' | xargs ./xx.sh
rg -v 'x'
rg -v 'x' | v -
grep 
perl
rg image --type py
rg 'a.*' --type sh
rg 'x.*' --type sh
cat -v err
tldr cat
tldr --update
mkcd ps
mv ~/mp3_to_link
mv ~/mp3_to_link .
cat mp3_to_link
cha 2000 | v -
cha 2000 | rg -v "tld'
cha 2000 | rg -v "tld"
cha 2000 | rg -v "tld|conf"
ls | clip
ls | cl
cat file\none\ntwo\nthree\nfour\none two\ntwo\nnine\nsix two
awk '!/one|two/' file
awk '!/one|two|nine/' file
awk '!/o.*|two|nine/' file
awk '!/^o.*|two|nine/' file
v re.py
ls -l /etc
ls -lt /etc
ls -lt winp
ls -lt hyper
tree hyper
tree sort
v ex
chmod 755 ex
./ex
./ex -t
#!/bin/bash\nRED='\033[0;31m'\nNOCOLOR='\033[0m'\necho -e "I ${RED}love${NOCOLOR} Linux"
alias fda
fda -d 1 | xargs grep -n 'frumious' #!good find
fda -d 1 -tf | xargs grep -n 'frumious' #!good find
fda -d 1 -tf | xargs rg 'path' #!good find
fda -d 1 -tf | xargs rg --stat 'path' #!good find
se 'rg.*st'
trash nothin
fda -d 1 -tf | xargs rg --stats 'path' #!good find
lt fd*
cat fdh
v fdh
fda -d 1 -tf
fd moregit
lt more*
gstr
ls -a moregit
fda moregit
fda -a moregit
trash moregit
tree -a moregit
git commit -am "monday blues"
se 'tar'
se 'du\s'
se 'du\s' | v -
se 'du.*sort' | v -
cha 2000 | rg -v "tld|conf|hyp"
cha 2000 | rg -v "tld|conf|hyp|git"
cha 2000 | rg -v "tld|conf|hyp|git" | args echo
wget "https://pdst.fm/e/chtbl.com/track/E91833/cdn.twit.tv/audio/twit/twit0898/twit0898.mp3" ##twit 8/15
fda .m2
trash m2
trash .m2
trash .nexe
trash .jdks
rm -rv .idea
\rm -rf .idea
\rm -rf .idea .redhat .virtualenvs
cd Music
cd Dylan
\rm *.jpg
rm -rf .aws .azure .jupyter/\n: 1667846038:0;rm -rf .aws .azure .jupyter/
dfc
rm Compiler .wallaby
rm -rf Compiler .wallaby
wget "wget "https://pdst.fm/e/chtbl.com/track/E91833/cdn.twit.tv/audio/twit/twit0899/twit0899.mp3" ##twit 8/15"
wget "https://pdst.fm/e/chtbl.com/track/E91833/cdn.twit.tv/audio/twit/twit0899/twit0899.mp3" ##twit 8/15
fd '0.*'
fd '0.*' | xargs \rm -rf
fd '0.*' | xargs echo "#-v "
fd '0.*' | xargs echo "#-v " > 
se 'xargs'
cat 05
fd '0.*' | xargs tx.sh
cat 01
fd '0.*' | \rm
fd '0.*' | xargs \rm
head -n2 *.sh
sed -i '/#!/bin/bash/#!/bin/bash -v/g' xx.sh
sed -i '/bash/bash -v/g' xx.sh
sed -i '/bash/bash \-v/g' xx.sh
sed -i '/bash/bashb/g' xx.sh
se 'sed.*i'
sed -i 's/bash/bashb/g' xx.sh
sed -i 's/bashb/bash/g' xx.sh
sed -i 's/bash/bash \-v/g' xx.sh
cat xx.sh
xx.sh
xx.sh 'ok'
se 'red'
se 'red.*nor'
head -n2 '\0.*'
fd '0.*' -x head -n2
fd '0.*' -x echo; head -n2
fd '0.*' -X echo; head -n2
fd '0.*' -X head -n2
cat tx.sh
fd '0.*' -X \rm
for pp in $(seq -f "%02g" 1 1 10); do touch $pp; done
cat 07
cat 06
rg 'echo' *
fd '0.*' -X tx.sh
v 06
fd '0.*' -x tx.sh
fdh | v -
fd '0.*' 
fd '0.*' -X head -n3
fd '0.*' -x head -n3
alias fdh
alias fdh='fd -help | v -'
alias fda="fd --help -I"
fd -help
fd --help
fd --help | v -
fday
cat *.sh
he cat
cat -A *
batcat -A *
fd -d 1 -tf -x batcat
l.sh
l.sh j
v l.sh
fd -d 1 -tf -X batcat
dq
fd -epy --changed-within=1days
fd -epy --changed-within=2days
fd -d 2 'mp'
fd 'worr' -x rm
fd 'worr'
v nu.xspf
fd 'mp3_'
v mp3_to_link
fd -a 'American_Pie'
p3 cool_read_ps.py
v filename2.txt
v cool_read_ps.py
a=$(ls *.sh)
vim -o $(ls *.sh)
rg 'sed' *
cp to/tx.sh
cp to/tx.sh .
v tx.sh
cat h.sh - tx.sh
se 'sed'
batcat h.sh tx.sh
./
./h.sh 1 2 3
rg 'printf' *
printf "Enter the username: ";read name; printf 'hello %s\n' $name; ls -lhrt $name
cat h.sh tx.sh
fd -esh | xargs cat
fd -esh | xargs batcat
./h.sh 1
fd -esh | xargs batcat | v -
ll=$(echo 'fd -H -I')
se 'hyperfine.*2'
hyperfine $ll 2>dev/null
ll=$(echo 'fd -H -I 2>dev/null')
lll 2>x
ll=$(echo 'fd -H -I 2>nnn')
chmod 755 hype.sh
sleep 10000 &
ll=$(echo 'fd -H -I 2>nnn')\nhyperfine $ll
hyperfine ls
hyperfine ls 2>nn
hyperfine 'fd -H -I' 2>nn
echo "'fd -H -I' 2>nn"
ll=$(echo "'fd -H -I' 2>nn")
p $ll
ll=$(echo "fd -H -I")
hyperfine $ll
hyperfine $ll 2>/dev/null
./hype.sh
rg eval
rg eval *
p mmm
v hype.sh
mmm=$(echo "'fd -H -I'")
jj="hyperfine 'ls -lhrt' 2>&1"\neval $jj\neval $jj 2>&1
alias cha
type -a cha
tmux --version
tmux -v
he tmux
man tmux
manv tmus
manv tmux
tmux -V
fda -d 1 -tf 'conf'
nvim -o $(ls *.sh)
git commit -am "Tues"
lt k
lt k*
fd -esh -x chmod 755
./k.sh "b" 2 "bill is bill"
head -n4 $(ls *.sh)
head -n4 $(ls *.sh) | less -N
rg 'hyper' *
bat j.sh
alias cat="batcat"
./j.sh ls -lhrt
cat j.sh
./j.sh ls
./j.sh ls 2>/dev/null
fd -esh -x vim
se 'fd.*vim\n: 1667959726:0;se 'fd.*vim'
fd -esh -x nvim
fd -esh -X nvim
\rm tmux-client-20404.log
up
mm=$(echo 'hyperfine ls -lhrt')
p $mmm
eval $mm 2>/dev/null
a=$mm
a=$mm '/dev/null'
a+=" steffes"
unset a
200/60
mm=$(echo "hyperfine 'ls -lhrt'")
expr length "hello world"
man expr
manv expr
tldr expr
expr index 'i' 'jim'
expr 'jim' : '\i\'
expr 2+2
expr 2 eq 2
expr 2 -eq 2
v too
v to
$mm
1=' aaa'
m=$mm+$l
p $m
p $l
l= " aaa"
l=" aaa"
echo "$mm $l"
prog="ls -lhrt"\nmm=$(echo "hyperfine '$prog'")
p $mm
mm+=" 2>/dev/null"
eval $mm
prog="ls -lhrt"\nmm=$(echo "hyperfine '$prog'")\nmm+=" 2>/dev/null"\neval $mm
chmod 755 h.sh
./h.sh
cat h.sh
./h.sh "ls -hrt"
./h.sh "xxxxxxxxxxxxxxxxxxxxxx"
./h.sh "xxxxxxxxxxxxxxxxxxxxxx yyyyyyyy"
./h.sh "ls"
./h.sh "fd -H -I"
./h.sh "find ."
v a.py
source x.sh
chmod 755 a.py x.sh
./a.py
cat a.py
p3 a.py
wi a.py
alias p3
COMMAND="alias"\nbash --login -c "$COMMAND"
COMMAND="alias"\nbash --login -c "alias"
bash --login -c "alias"
bash --login -c "lt"
bash -i -c lt
bash -i -c p3
he shopt
manv shopt
man shopt
bab() { python "$@"; }\n$(echo bab)       # launches a python shell
python
bab() { p3 "$@"; }\n$(echo bab)       # launches a python shell
fd -esh -X nvim -o
p $SHELLOPTS
p $BASHOPTS
shopt
setopt
man setopt
tldr setopt
set -o | v -
alias -g xx="echo 'xx'"
xx
p $OSTYPE
setopt complete_aliases
bash -c x.sh
cat ~/functions.sh | v
shellcheck x.sh
./x.sh
hit() { history | tail -n $1 }u
function myip() {\n        curl http://icanhazip.com      \n        ip addr | grep inet$IP | \\n        cut -d"/" -f 1 | \\n        grep -v 127\.0 | \\n        grep -v \:\:1 | \\n        awk '{$1=$1};1'\n: 1667969186:0;myip
unset myip
myip=''
type -a myip
myip
(cd hyper; echo "I'm now in $PWD")
(cd hyper; ls)
(cd hyper; ls; ls -lhrt)
v -o .bash_history hyper/x.sh
hisf(){\\nhis\n: 1667969939:0;type -a hisf
type -f hisf
type -f hisf | v -
hisf () {\n\tomz_history | cut -c 1-7 --complement > hisfile\n: 1667970115:0;hisf
v hisfile
hisf () {\n\tomz_history | cut -c 1-7 --complement > hf\n: 1667970174:0;v functions.sh
hf () {\n\tomz_history | cut -c 1-7 --complement > hf\n}hf () {\n\tomz_history | cut -c 1-7 --complement > hf\n: 1667970196:0;hf () {\n\tomz_history | cut -c 1-7 --complement > hf\n: 1667970198:0;hf
exec bash
$(shuf -e "echo hi" "echo bye" "ls" -n 1)
$p
echo hi
eval $0
eval $p
p=$(shuf -e "echo hi" "echo bye" "ls" -n 1)
p $p
set -o
cd you/ame
fd -epy -d 1 -x \rm
fd -epy -d 1
fd -emp3 -d 1
fd -emp3 -d 1 -x \rm
fd -d 1 --changed-before=3weeks -x \rm
\rm -rf 'Saved Games/'
\rm -rf kot
trash star.ps1
cd webmp3
\rm -rf webmp3
lt gitbranch
rm -rf gitbranch
trash hello
trash gr2
lt streets
trash streets
trash pyj court ht
trash IntelGraphicsProfiles
trash 12barblues_ms.mid\ntrash 3d-flip-cards-css-only\ntrash BB-BLUES.MID\ntrash BLUES_BR.Sweet_home_Chicago.mid\ntrash Beatles_Beatles_While_my_guitar.mid\ntrash Blues_Licks_Blues_Fast_Blues_Licks__WWW.MIDISFREE.COM.mid\ntrash Blues_Licks_Blues_Licks_From_Arlen_Roth__WWW.MIDISFREE.COM.mid\ntrash Bob_Dylan_Stuck_Inside_of_Mobile_with_the_Memphis_Blues_Again.pdf\ntrash Boogie_Woogie_Improv.mid\ntrash Ex_Files_Learning_Docker_Upd.zip\ntrash HLSPlaylist.m3u8\ntrash Jimmy_Smith_Chicken_Shack.mid\ntrash LICENSE\ntrash MuseScore-en.pdf\ntrash NFLDK2022_CS_PPR.pdf\ntrash OmensOfLove.mid\ntrash Piano.Trainer_1.0.1_x64_en-US.msi\ntrash Prelude_in_C_Major-Bach_guitarTAB.mid\ntrash Prelude_in_C_Major-Bach_guitarTAB.pdf\ntrash README.md\ntrash Synthesia-10.8\ntrash TransHistory20220531223325166.csv\ntrash _april.mp3\ntrash _bmv846.mp3\ntrash _bmv846_1.mp3\ntrash april.mp3\ntrash bach-prelude-and-fugue.mid\ntrash bach_846.mid\ntrash back.jpg\ntrash bartleby_scrivener_1107_librivox_64kb_mp3.zip\ntrash bash_aliases\ntrash bottom.jpg\ntrash calendar-txt-until-2033.txt\ntrash cloud.sh\ntrash court\ntrash dot.zip\ntrash eblue.svg\ntrash election-judge-interest-form.pdf
trash april.mp3\ntrash essays_of_schopenhauer_2107_librivox.zip\ntrash f.txt\ntrash fc.sh\ntrash firstBach.mid\ntrash flash-cards\ntrash flashs\ntrash flipc\ntrash gh_2.14.4_windows_amd64.msi\ntrash init.vim\ntrash install.sh\ntrash knockin_on_heavens_door.mid\ntrash knocking_on_heavens_door.mid\ntrash legend.docx\ntrash let.mid\ntrash lnl\ntrash logioptionsplus_installer.exe\ntrash london.pdf\ntrash nonfiction059_1809_librivox.zip\ntrash ok\ntrash pen-export-BarmGLm.zip\ntrash picard-setup-2.8.3.exe\ntrash profile-card-hover\ntrash sh.zip\ntrash snf091_2204_librivox.zip\ntrash squid\ntrash submit-button\ntrash t.sh\ntrash tag.jpg\ntrash test.sh\ntrash test.txt\ntrash thr.tar.gz\ntrash top.jpg\ntrash tzdata2022c.tar.gz\ntrash unifying250.exe\ntrash unknown.mid\ntrash util-linux-2.38-rc1.tar.gz\ntrash v.sh\ntrash weekly-challenge\ntrash win32yank-x64.zip\ntrash win32yank.exe\ntrash winning_numbers.csv\ntrash wn.csv\ntrash z-coil.jpg\ntrash zsh-autosuggestions_0.7.0-1+3.1_amd64.deb\ntrash zsh-in-docker.sh
trash unifying250.exe\ntrash unknown.mid\ntrash util-linux-2.38-rc1.tar.gz\ntrash v.sh\ntrash weekly-challenge\ntrash win32yank-x64.zip\ntrash win32yank.exe\ntrash winning_numbers.csv\ntrash wn.csv\ntrash z-coil.jpg\ntrash zsh-autosuggestions_0.7.0-1+3.1_amd64.deb\ntrash zsh-in-docker.sh
rm win32yank.exe
duh > duh2.txt &
ps -aux | v -
ps -aux | rg 'duh'
fd -d 1 --changed-before=3weeks
fd -d 1 'j'
fd -d 1 -tf 'j'
fd -d 1 -tf 'j' -x \rm
v -o up.sh a.sh AnyFile.txt
v jjj
git commit -am "Wed cleanup"
fd -d 1 -tf -esh -x v -o
fd -d 1 -tf -esh -X v -o
fd -d 1 -tf -esh -X nvim -o
fd -d 1 -tf -X nvim -o
fd -d 1 -tf | head -X nvim -o
v sss
fd -d 1 -tf | head | xargs nvim -o
fd -d 1 -tf |
\rm x
git commit -am "Wed More delete"
rm -rf newdir
lt reg
rm -rf reg
fd -d 1 -tf -esh
wing
v gitignore
he tree
cd .config/nvim\\n: 1668034812:0;git checkout fbf9446
mv init3.vim init.vim
git branch trouble
git checkout trouble
git checkout aebc75b
git restore --staged init.vim
git switch trouble
git log | v -
fd -d 1 -tf 
fd -d 1 -tf |  xargs nvim -o
\rm C:Usersjayst.confignvimundodir
lt C:Usersjayst.confignvimundodir
\rm -rf C:Usersjayst.confignvimundodir
fd -d 1 -elua
fd -d 1 -elua | xargs \rm
git show -s --format=%s
git commit -am "Wed trouble"
cd Local
fd 'code'
cd Google
trash AndroidStudio2020.3
fd 'av'
fd 'avett' -x \rm
fd 'avett'
fd 'grays'
fd 'grays' -x \rm
fd 'official'
fd 'official' -exec sed "s/[^a-zA-Z0-9]/_/g"
fd 'official' | sed "s/[^a-zA-Z0-9]/_/g"
fd 'official' | sed "s/mp3/_/g"
fd 'official' | sed "s/off/_/g"
fd 'official' | sed "s/off.*\./_/g"
fd 'official' | sed "s/Off.*\./_/g"
fd 'official' | sed "s/Off.*_\./\./g"
cd /mnt/c/you/kb
fd 'official' 
fd 'official' | sed "s/Off.*\./\./g"
fd "official" -exec rename "s/Off.*\./\./g" #!good replace garbage names
fd "official"
fd '^_'
fd '_\.'
fd '_\.' | sed "_\./\./g"
fd '_\.' | sed "s/_\./\./g"
fd '_\.' -exec rename "s/_\./\./g" #!good replace garbage names
fd '^_' -exec rename "s/^_//g" #!good replace garbage names
fd 'Guy'
mv lyric_txt mp3lyric.txt
fd | rg -v 'mp3' | xargs \rm
fd | rg -v 'mp3'
he hyperfine
hyperfine 'sleep 0.020' 'sleep 0.021' 'sleep 0.022' --export-json sleep.json
hyperfine 'ls /' 'ls ~/' --export-json sleep.json
v sleep.json
cd DriveFS
ls -s /mnt/c/projects/hyper hyper
ls -s /mnt/c/projects/ hyper
ls -s /mnt/c/projects hyper
se '\sln'
cd .config/nvim
git diff HEAD~2 | v -
git diff HEAD~4 | v -
git diff HEAD~4 | v - #!git stuff
curl --silent https://api.github.com | tr ',' ' ' #! good github api split
curl --silent https://api.github.com | tr ',' ' ' | v - #! good github api split
curl --silent https://api.github.com  | v - #! good github api split
curl https://api.github.com/users/wither7007/repos
curl https://api.github.com/users/wither7007/repos | v -
vfm
fd -d 1 -esh | xargs shellcheck
fd hyp
sudo apt-get install xsel
wi clip
cd Windows
cd System32
fd 'clip'
fd -d 1 'clip'
cp clip.exe ~/
clip.exe
wi clip.exe
cp clip.exe /home/steff007/.local/bin
\rm clip.exe
ls | clip.exe
ld time21
cd time21
mkcd tar
cp -R /mnt/c/projects/node .
trash bookmarks_10_29_22.html bootclean.html indexnoicon dd.txt
cat ok pys
trash ok pys
trash duh.txt duh2.txt get bashrc.sh
trash gline.txt hisback line.txt ipy_linux3
v vs
v vsext.txt
cd cleancode
cp exten Uexten
v Uexten
fd -d 1 'h'
ln -s /mnt/c/projects/hyper hyper
manv ln
he ln
ln -s  ~/hyper /mnt/c/projects/hyper
ln -s h ~/h
rm h
ln -s /mnt/c/projects/h ~/h
cp -R hyper/* h
ls -l
rm hyper
se '_mp3'
fd '.*_mp3' -exec rename "s/_mp3/\.mp3/g" #!good replace  names
rm output_log t Weird_
mv Best_Documentary_on_French_Revolution_Where_Republic_was_born_in_Blood_webm_part FrenchR.mp3
mv A_History_of_Soviet_Atheism_Antireligious_campaign_in_the_USSR_under_Lenin_Stalin_and_Khrushchev.mp3 Rus_atheism.mp3
mv Frederick_Copleston_on_Schopenhauer_1987_webm_part Schop.mp3
ls | v -
vlc FrenchR.mp3 Quantum_Mechanics_Isn_t_Weird_We_re_Just_Too_Big_Qiskit_Seminar_Series_with_Phillip_Ball.mp3 Schopenhauer.mp3 In_Our_Time_S16_12_Hindu_Ideas_of_Creation_Dec_5_2013.mp3 Debate_on_Scientific_Reason_Truth_1984_.mp3 FAUST_Explained_Goethe_s_eulogy_of_the_Enlightenment_its_philosophical_influence.mp3 Friedrich_Nietzsche_J_P_Stern_Bryan_Magee_1987.mp3
rm Snake.mp3 n
fd -tf | column
duh > duh2.txt
fd -tf -d 1 | column
git commit -am "Friday clean 1"
fd -tf --size=10m | column
fd -tf --size+10m | column
fd -tf --size+ 10m | column
fd -tf --size +10m | column
fd -tf --size +1m | column
fd -tf --size +1b
fda 'mp3'
lt d*
v duh2.txt
ls *.mp3
md \you\folk
tar -cvf back.tar .
fda -d 1 'git'
v .gitconfig
cd .ssh
fd -d 1 'igno'
git commit -am "Friday clean 1 dell"
git branch -a
git diff main origin/main
git merge
v 2253_hist.txt
wget -qO- bench.sh | bash
fd bench
wget --help | grep -Ewi -- '-(i|w|e)'
fda 'bench.sh'
cd ~/temp
wget -O- www.codonomics.com
wget -O- www.codonomics.com | v -
wget --help | v -
wget -O- bench.sh | bash
wget -O- umn.edu > x
wget -qO- umn.edu > x
wget -qO- ibm.com > x
wget -qO- bench.sh > x
wget -qO- bench.sh > coolbench.shell
fda -emp3
fda -emp3 -x \rm
md back
fd d 1 
cd youfolk
rm -rf youfolk
fda -emp4
mv Configuring\ Neovim\ With\ Lua\ \(It\'s\ Easy\!\).mp4 /mnt/c/you/vim
\rm Configuring\ Neovim\ With\ Lua\ \(It\'s\ Easy\!\).mp4
fda -tf --size +10m
rm back.tar
duh > duh3.txt
v duh3.txt
alias lts='ls --human-readable --size -1 -S --classify | column'
lts | rg -v '^0'
lts | rg -v '^\s+0'
lts | rg -v '^\s+0' | v -
fda -tf --size +5m
fda -tf --size +1m -x ls -lhrt
\rm b.json
ld ~\n: 1668230118:0;ld ~/
ld ~
rsync -v ata.txt ~/back/
sudo rsync -avz /mnt/c/all ~/back
ls d*
fda -td
fda -td | rg -v 'git'
fda -d 1 'tmp'
fda -d 1 'tmp' -x \rm
fda -d 1 -td
fda -d 1 -td 'mp4_'
fda -d 1 -td 'mp4_' -x \rm -rf
fda -d 1 -tf 'mp4_' -x \rm -rf
\rm Dockerfile\n\rm a\n\rm a.json\n\rm cli.json\n\rm dir.py\n\rm duh2.txt\n\rm duh3.txt\n\rm e\n\rm err\n\rm fileName\n\rm filename.txt\n\rm hello\n\rm index.html\n\rm ipy\n\rm ipy_linux3\n\rm ipysql.py\n\rm j.py\n\rm j.sh\n\rm json.sh\n\rm ok\n\rm practice.sh\n\rm profit.txt\n\rm readb.py\n\rm s.sh\n\rm test.py\n\rm test.sh\n\rm wrap.sh\n\rm x\n\rm y1.sh\n\rm yd.py\n\rm yt.sh
\rm -rf mp4
cd mp4
se 'rsync'
md rs
rsync -avz mp4 rs/
cd rs
rsync -avz mp4 /mnt/c/all/bash
ps -aux | rg 'ff'
ps -aux | rg 'ff.*'
ps -aux | rg 'ffmp.*'
\rm -rf src
\rm -rf stable
\rm -rf stable_lib_python3.10_site_packages
\rm -rf linux junk docker
\rm -rf newdir
bash yv
rm -rf delete
fd -d 1 -tf | v -
\rm zzzz
\rm ok
cat q.sh
./q.sh
./q.sh | v -
fd -d 1 -tf 'vi'
fd -d 1 -tf 'vi' -x nvim -o
fd -d 1 -tf 'vi' -X nvim -o
fd -d 1 -tf 'vi' 
cat vim_comm.txt vim_h.txt >> vim_all.txt
v vim_all
v vim_all.txt
awk '!a[$0]++' vim_all.txt| v -
v wsl_aliases
alias lts='ls --human-readable --size -1 -S --classify'
lts | head
lts | head -n8
lts | head -n8 | nl
cd ...
duh | rg 'm'
duh | rg 'M'
cd 2b
v a58f9cc5044989ba114a4a07b9950e580c192f
ls v
ls v*
\rm vim_comm.txt vim_h.txt
close
cd you/kb
fd 'rain'
fd 'rainbow'
fd 'rainbow' -x \rm
fd 'sissel'
fd 'sissel' -x \rm
fd 'the gu'
fd 'Guit'
fd 'the_Guit'
fd '%he_Guit'
fd 'The_Guit'
fd 'The_Guit' -x \rm
fd 'waterfa' -x \rm
fd 'Waterfa' -x \rm
fd 'ess.*' -exec mv {} /mnt/c/you/shop
fd 'ess.*'
fd 'ess.*' -x \rm
fd 'firman'
fd 'fireman'
fd 'fireman' -x \rm
cd AppData
fd 'trash'
cd .Trash
fda -x rm -rf
cd .local/share/Trash
fda 'trash'
fda 'jayst'
trash --v
trash --version
alias trash
type -f trash
manv trash
type -f trash-list
lt files
cd files
mnt
ls -r
mount -l
sudo trash-empty
cd sdf
cd wsl
manv tree
tree -d
tree -d | more
p $0
sudo mkdir /mnt/d\nsudo mount -t drvfs d: /mnt/d -o uid=$(id -u $USER),gid=$(id -g $USER),metadata
cd /mnt
cd d/
tree | v
\rm -rf mmmm
fd -d 1 -tf "\s" -exec rename "s/\s/_/g" {} \;
\rm 01_Track_1.mp3
\rm Charlie_Parker_-_The__Levin_Wilson_Controversy_part_1..mp3
fd -d 1 -tf " -exec rename "s/\!//g" {} \;
fd -d 1 -tf " -exec rename "s/\\!//g" {} \;
fd -d 1 -tf " -exec rename "s/\\!//g" {}
fd -d 1 -tf "\!" -exec rename "s/\\!//g" 
fd -d 1 -tf "(" -exec rename "s/\(//g" 
fd -d 1 -tf "\(" -exec rename "s/\(//g" 
fd -d 1 -tf "\)" -exec rename "s/\)//g" 
rm Oh_Tokyo_-_Loudon_Wainwright_III_-_M.A.S.H._s03e02.wmv.mp4
\mv The_Velvet_Underground_-_Heroin_Lyrics.mp3 Waiting_for_the_Man_-_Reed_and_Bowie.mp3 kb
fd -d 1 -td 'gen'
fd -d 1 -td 'Gen'
\rm -ff gen
\rm -rf gen
cd g
mv COOLHAND_LUKE_Paul_Newman_PLASTIC_JESUS_fingerstyle_GUITAR_LESSON.mp4 ../gut
rm -rf g
cd letit
\rm -rf wsl
\rm -rf linux
fd -emp4
\rm -rf sheet
\rm -rf theo pl
rm -rf linux2
fd -h
fd -emp4 | rg -v 'vim'
fd -emp4 | rg -v '[vim|gut]'
fd -emp4 | rg -v 'vim|gut'
\rm -rf bash 
cd ame
rm -rf ame
df -h
fda 'vscode'
cd .vscode
duh > duh4.txt
v duh4.txt
cd extensions
du -sh .
cd mix
\rm -rf mix
cd mixc
l | v -
\rm -rf mixc
du -sh *
fd -tf --size -1b -x \rm
fd -tf --size -1b
fd 'web'
fd '83'
fd '___'
fd '__+'
fd '__+' -x \rm
du -sh
fd 'nap'
\rm The_Napoleonic_Soldier_History_Documentary.mp3
cd Program\ Files
cd ld
find /etc -maxdepth 0 -type d -exec du -sh {} \;
find /bin -maxdepth 0 -type d -exec du -sh {} \;
fd -td /
fd . -td /
fd . -td -d 1 /
fd . -td -d 1 / -x du
fd . -td -d 1 / | xargs echo
fd . -td -d 1 / | head | xargs echo
fda 'extension'
rm -rf Android
cd -
xxx Android
xxxx Android
sudo rm -rf Android
du -lh –max-depth=1
du -lh –-max-depth=1
alias duh
hyperfine --warmup 3 'grep -R TODO *'
grep todo *
hyperfine --warmup 3 'grep -R b *'
hyperfine --warmup 3 'rg b *'
fda . ~
hf=fda . ~
type -a p
p jim'
p jim
a=123
hf='fda . ~'
p $hf
eval $hf
v -o h.sh b.sh
v h.sh
hyperfine --warmup 3 'b.sh'
fd -H -I
fd -H -I ~
fd -H -I . ~
sc b.sh > out
v out
v -o ~/.bash_history x.sh b.sh
chmod 755 b.sh
./b.sh
v a.sh
chmod 755 a.sh
fd time
fd 'time'
cd time13
vlc In_Our_Time_S6_01_Maxwell_Oct_2_2003_.mp3 In_Our_Time_S6_02_Bohemianism_Oct_9_2003_.mp3 In_Our_Time_S6_03_The_Schism_Oct_16_2003_.mp3 In_Our_Time_S6_04_Infinity_Oct_23_2003_.mp3 In_Our_Time_S6_05_Robin_Hood_Oct_30_2003_.mp3 In_Our_Time_S6_06_Sensation_Nov_6_2003_.mp3 In_Our_Time_S6_07_Duty_Nov_13_2003_.mp3 In_Our_Time_S6_08_Ageing_the_Earth_Nov_20_2003_.mp3
sc h.sh
cat a.sh
cat b.sh
cat hyp
now=$(date)
p $(date)
p $now
p $(date +'%d/%m/%Y')"
"$(date +'%d/%m/%Y')"
p "$(date +'%d/%m/%Y')"
p "$(date +'%m/%d/%Y')"
p "$(date +'%m/%d/%Y - %M')"
p "$(date +'%m/%d/%Y - %H:%M')"
p "$(date +'%a %m/%d/%Y - %H:%M')"
alias p
printf '%s\n' "$(date +'%a %m/%d/%Y - %H:%M')"
v b.sh
\rm hyp
sc b.sh
./a.sh
sup
v hyp
x='to b & b'
x='to b & \\b'
x='to b & \\!b'
x='fd -H -I | xargs echo'
p $s
p $x
eval $x
echo " the path is $PATH "
echo ' the path is $PATH '
echo ' the path is ${x}JJJJJJJJJJJJJJJJJJ '
echo " the path is ${x}JJJJJJJJJJJJJJJJJJ "
FC
?:
p ?:
JAMES="steffes"
p $EDITOR
env
export $JAMES
printenv | v -
set | grep BASH
set | grep path
set | grep HIST
p $PS1
readonly PI=3.14\nexport PI # Make it enviorment/global var
v x.sh
v export
sc exx
chmod 755 exx
./exx
$pwd
export PATH="$(pwd):$PATH"
exx
h/exx
~/h/exx
export je="home is $(pwd)"
p $je
bash -c 'lt'
bash -c 'echo $je'
bash -c 'exx'
/usr/bin/perl -e 'print "$FOO \n"'
/usr/bin/perl -e 'print "$PATH \n"'
/usr/bin/perl -e 'print "JIM \n"'
cd profile.d
v bash_completion.sh
cd environment.d
v 90qt-a11y.conf
cd profile
fdc | rg '^p'
v y.sh
cat y.sh
PI=3.141
p $PI
sc y.sh
bash -c 'sc y.sh'
export PI
bash -c 'source y.sh'
\rm date
rm hyp exx
git commit -m 
touch jjj
git commit
git commit -a
git commit -am
git commit -am "second"
v ~/.gitconfig
touch f
touch fd
cd to
ls -S 
ls -S -l
ls -S -l -h
ls -S -l -h /mnt/c/you/lazy | head
ls -S  -h /mnt/c/you/lazy | head
ls -S  -h /mnt/c/you/lazy | sed -n '5p'
ls -S  -h /mnt/c/you/lazy | nl
ls -S  -h /mnt/c/you/lazy | nl | head
ls -S  -h /mnt/c/you/lazy | sed -n '9p'
ls    /mnt/c/you/lazy | sed -n '9p'
lt /mnt/c/you/lazy
space.sh
ls -S   /mnt/c/you/lazy | sed -n '9p'
ls -S -l -h  /mnt/c/you/lazy | sed -n '9p'
cp $(ls -S -l -h  /mnt/c/you/lazy | sed -n '9p') .
echo $(ls -S -l -h  /mnt/c/you/lazy | sed -n '9p')
echo $(ls -S  -h  /mnt/c/you/lazy | sed -n '9p')
cp $(ls -S  -h  /mnt/c/you/lazy | sed -n '9p') .
man cp
manv ls
fd . /mnt/c/you 
fd . /mnt/c/you/lazy
fd . /mnt/c/you/lazy -x lt
fd . /mnt/c/you/lazy -x ls -lhrt
fd . /mnt/c/you/lazy -x ls -l -S
fd . /mnt/c/you/lazy -x ls -l -S -h
echo $(ls -S  -h  /mnt/c/you/lazy | sed -n '9p') .
echo "/mnt/c/you/lazy/$(ls -S  -h  /mnt/c/you/lazy | sed -n '9p')"
s=echo "/mnt/c/you/lazy/$(ls -S  -h  /mnt/c/you/lazy | sed -n '9p')"
s=$(echo "/mnt/c/you/lazy/$(ls -S  -h  /mnt/c/you/lazy | sed -n '9p')")
cp $s .
du
du -lh *
du -lh * | sort -ha
du -lh * | sort -h
du -lh * | sort -dh
du -lh * | sort -h -r
du -lh /* | sort -h -r
du -lh /mn/you/* | sort -h -r
du -lh /mnt/c/you/* | sort -h -r
du -lh /mnt/c/you/lazy/* | sort -h -r
du -lh /mnt/c/you/* | sort -h -r | head
du -lh /mnt/c/you/* | sort -h -r | head #cool quick size sort
du -lh /mnt/c/you/lazy/* | sort -h -r | head #cool quick size sort
du -lh /mnt/c/you/lazy/* | rg 'Will' | sort -h -r | head #cool quick size sort
se 'cool'
du -lh /mnt/c/you/lazy/* | rg 'Will' | sort -h -r 
hyperfine 'du -lh /mnt/c/you/lazy/* | rg 'Will' | sort -h -r | head'
du -lh /mnt/c/you/lazy/* | rg 'Will' | sort -h -r | head
du -lh
du -lh | rg -v '^0'
du -lh * 
du -lh * | rg -v '^0'
du -lh * /bin | rg -v '^0'
du -lh /bin/* | rg -v '^0'
du -lh /bin/* | rg -v '^0' | head
du -lh /* | rg -v '^0' | head
sudo du -lh /* | rg -v '^0' | head
sudo du -lh /* | sort -h -r | head
fda '^mnt'
fda -E 'mnt'
fda -E 'mnt' -d 2
fda -E 'mnt' -d 2 | v -
fda -E 'mnt' -d 2 | sort
fda -E 'mnt' -d 2 | sort | less
fda -E 'mnt' -d 2 | sort | xargs echo
fda -E 'mnt' -d 2 | sort | xargs printf '%s\n'
fda -E 'mnt' -d 2 | sort | xargs du -h
duh | sort -h
duh | sort -hr
ps
cd node
cd wes
cd JavaScript30
cd 03\ -\ CSS\ Variables
cd ../you
cd blonde_dy
fd 'vi'
fd 'visi'
cp Dylan_VisionsofJohannaOfficialAudio.mp3 ../kb
cp VisionsofJohannaLive.mp3 ../kb
cd hyper
\rm -rf hyper
duh | sort -hr | head
du -lh /* | sort -h -r | head
du -lh * | sort -h -r | head
du -lh * | sort -h -r | head | xargs l -lshrt
du -lh * | sort -h -r |  xargs l -lshrt
du -lh * | sort -h -r | head | xargs ls -lshrt
fda | xargs ls -lhrt
fda | xargs ls -lhrt | rg '\d+M'
git rm --cached *
fd space
v space.sh
mv space.sh space
cd /mnt/c/you/lazy
g='gitrepo'
mkdir $g; cd $g
echo "frumious secret" > .env
cat .env
git init$ add .
git remote
echo '{ "name":"John", "age":31, "city":"New York" }' | jq .
curl 'https://api.github.com/repos/wither7007/all_wsl/commits?per_page=5' | jq '.' | v -
curl 'https://api.github.com/repos/wither7007/all_wsl/commits?per_page=5' jq '.[] | {full_name: .full_name, url: .url}'
curl 'https://api.github.com/repos/wither7007/all_wsl/commits?per_page=5' | jq '.'
https://www.xvideos.com/video4363530/90_s_extreme_teens_-_must_watch
chmod 755 gist.sh
chmod 755 gits.sh
./gits.sh
./gits.sh jamessteffes | column
./gits.sh jamessteffes
v gits.sh
./gits.sh wither7007
touch 
manv chmod
tldr chmod
he chmod
chmod 444 k
.t
chmod 0444 k
df -hT .
chmod 000 k
touch l
rm l
\rm k
touch k
chattr +i k
sudo chattr +i k
mkdir i; cd i
touch v
chmod 444 v
fd -x rm
chmod 444 gits.sh
mv gits.sh ~/pys
mv gits.sh gits
v gits
unalias gits
he unalias
manv alias
mv gits gitr
fd -etxt 'p.*'
fd -ejs
fd -ejs | column
fd -ejs | column -E tar
fd -ejs -E tar
fd -etxt -E tar
fd -etxt -E tar -E back
fd -ejs -E tar -E back
fd 'voic'
git commit -m "second"
cd gitrepo
fda -x stat
fda voice
v h/voice.js
ls ~/pys
gitr
gitr jamessteffes
v space
v gitr
git log --graph --full-history --all --pretty=format:"%h%x09%d%x20%s"
touch 1
fd "[^\W\d_]"
fd "[\W\d_]"
fd "[\W\d]"
fd "[\W]"
fd i
lt voice.js
lt i
cd i
cd wes30
v back.tar
tar -zcvf back.tar .
\rm back.tar
fd -tf --size 10m
\rm wes30/back.tar
v default_tc.mp3@aid=embed
\rm default_tc.mp3@aid=embed
tls
fd -tf --size +10m
fd -tf --size +5m
\rm -rf streets
gits wither7007
gitr wither7007
wither7007.github.io.git
tar -zcvf 11-15-22_projects.tar .
\rm -rf 50
\rm -rf react
fd -td | v -
sc del
v gcloud_als
type -a d
type -f d
dirs
type -f dirs
manv dirs
tldr dirs
wget https://podtrac.com/pts/redirect.mp3/traffic.libsyn.com/latenightlinux/LNL200.mp3\nwget https://podtrac.com/pts/redirect.mp3/traffic.libsyn.com/latenightlinux/LNL201.mp3\nwget https://podtrac.com/pts/redirect.mp3/traffic.libsyn.com/latenightlinux/LNL202.mp3
ex LNL202.mp3
wget "https://pdst.fm/e/chtbl.com/track/E91833/cdn.twit.tv/audio/twit/twit0900/twit0900.mp3" ##twit 8/15
fd '1'
fd '\.1' -x \rm
wget "https://pdst.fm/e/chtbl.com/track/E91833/cdn.twit.tv/audio/twit/twit0901/twit0901.mp3" ##twit 8/15
fd 'tw.*1'
fd 'tw.*1' -x ex
ex twit0901.mp3
fd 
cd OneDrive
cd Documents
cat ~/pys/space
fd "Dylan" -exec rename "s/["s/[^a-zA-Z0-9\.]/_/g"')
fd "Dylan" -exec rename "s/["s/[^a-zA-Z0-9\.]/_/g"
fd "Dylan" -exec rename "s/[^a-zA-Z0-9]/_/g" #!good replace garbage names
fd "Dylan"
cd Bob
head -n4 $(ls *.sh) | less -NX
head -n4 $(ls *.ps1) | less -NX
v pss.ps1
pss
v mov.py
v x3
bs
gh repo create waylonwalker-cli
rm -rf gitrepo
cd tar
rm -rf tar
git --rm tar
git -rm tar
fd '\.git'
fda '\.git' -E config
fda '\.git' -E '\.config'
fda '\.git' -E '\.config|.cache'
fda '\.git' -E '[config|cache]'
fda '\.git' | rg -v 'cache'
gh pr status
se 'git.*rm'
git rm back/
git rm back/ -r
git rm back -r
git rm tar
git rm -r tar
cha 4000
fda -tf --size +1m
cd youDL
\rm -rf now
fda -tf --size +3m
fda -td -d 1 | column
fda '\.git' rg -v 'cache'
fda '\.git' | -E .config -E .cache rg -v 'cache'
fda '\.git'  -E .config -E .cache rg -v 'cache'
fda '\.git'  -E .config -E .cache
cd back
lt all
\rm -rf back
git rm -r back
\rm -rf .idea .ipynb_checkpoints .vscode __pycache__ 
rm dd66e9f2-0631-4117-9a25-bf5a0a956100@dark=false
v bsp.py
p3 bsp.py
\rm -rf jgit
mkcd jgit
git rm .bash_aliases
git rm .bash_aliases -f
git restore --staged .bash_aliases
git checkout c91bde3
fd -d 1 'alias'
fda -d 1 'alias'
fda -d 1 'alias' -x stat
fda -d 1 'alias' -x stat | rg 'Access'
stat coolbench.shell --format='%A %h %U %G %s %Z %n'
stat coolbench.shell --format=%h %U %G %s %Z %n'
stat coolbench.shell --format='%h %U %G %s %Z %n'
date +"%m-%d-%y"
cha 200 | rg -v "tld|conf|hyp|git" | xargs printf '%s\n'
cha 20000 | rg -v "tld|conf|hyp|git" | xargs printf '%s\n'
alias man="manv"
fd 'x'
alias fdd="fd -d 1"
fdd -tf
stat --format="%F" up.sh
man stat
stat --format="%N %x" up.sh
fdd -tf | xargs state --format"%N %x"
fdd -tf | xargs stat --format"%N %x"
fdd -tf | xargs stat --format="%N %x"
fdd -tf | xargs stat --format="%N %x" | sort
fdd -tf | xargs stat --format="%N\t %x" | sort -r
fdd -tf | xargs stat --format="%N \t %x" | sort -r
fdd -tf | xargs stat --format="%N %x" | sort -r
git check-ignore -v
v bas
chmod 755 /home/steff007/jgit/cd
v cd
cha 200 | xargs stat --format="%N %x" | sort -r
se 'fd.*cach'
set | rg 'hist'
set | rg 'hist' | v -
cha 2000 | rg -v "tld|conf|hyp|git" | xargs echo
cha 2000 | rg -v "tld|conf|hyp|git" | xargs printf '%s\n'
cha 2000 | rg -v "tld|conf|hyp|git|cache" | xargs printf '%s\n'
cha 2000 | rg -v "tld|conf|hyp|git|cache" | xargs ls -lhrt
touch z
md jg
cp jgit jg -r
lt jg
lt jg/jgit/
\rm -rf jg
t z
alias t="touch "
cha 5000 | rg -v "tld|conf|hyp|git|cache" | xargs ls -lhrt
cha 5000 | rg -v "tld|conf|hyp|cache" | xargs ls -lhrt
cal
cha 5000 | rg -v "tld|conf|\.git|hyp|cache" | xargs ls -lhrt
cha 9000 | rg -v "tld|conf|\.git|hyp|cache" | xargs ls -lhrt
type -a gs
fd -d 2 '\.git'
fda -d 2 '\.git'
git ls
gst | head
\rm -rf .git
git init; git add jgit
git add scripts/
\rm *
ls -lah
fda -x \rm
gda
watch -n .5 date
watch -n 3 date
watch -n .5 ls -lhrt
t 
watch -n .5 ls -alhrt
git init; git add .
t readme.txt
git show 1403b89
git show 773470
git show --pretty=raw 1403b89
git ls-tree 1403b89
gitk
tree .git
t y
git ls-tree -d
git ls-tree -l
git init;
t gg
touch gg
git log --stat
fatal: cannot lock ref 'HEAD': unable to resolve reference 'refs/heads/master': ref││   ├── pre-merge-commit.sample
v .git/refs/heads/master
ls .git/refs/heads
la .git/refs/heads
git commit -am "new clean"
git ls-tree
git ls-tree 339892f
git show 773701
git show 339892f
git show --pretty=raw 3398892f
git show --pretty=raw 339892f
v newf
git add . ; git commit -am "ok"
watch -n .5 tree .git
watch -d -n .5 tree .git
watch -d -n .5 tree .git | tail
watch -d -n .5 ps -aux
ld .git
ld -a .git
fda .git
#watch -d -n .5 tree .git
fda . .git
t xxx
git commit -am "newf"
git show master
cd /home/steff007/jgit
#ls *.sh | xargs head
ls * | xargs head
fd -f
fd -tf -x head
tree | head
cat 10994476
cat 1094476
git show 1094476
fd -tf /mnt/c/you
fd . -tf /mnt/c/you
fd . -td /mnt/c/you
fd . -td /mnt/c/you | rg 'git'
vlc In_Our_Time_S16_12_Hindu_Ideas_of_Creation_Dec_5_2013.mp3 Despot_or_Enlightenment_Hero_Napoleon_Bonaparte.mp3 C_Span_The_Dark_Side_of_Bro._Napoleon_Bonaparte_That_Books_Try_to_Suppress_1997_.mp3 FrenchR.mp3 In_Our_Time_S15_09_The_Upanishads_Nov_8_2012.mp3 In_Our_Time_S22_01_Napoleon_s_Retreat_from_Moscow_Sept_19_2019_.mp3 Islam_s_Origins_Myth_and_Material_Evidence.mp3 Machiavelli_s_Advice_For_Nice_Guys.mp3
se 'aux'
git commit -am "wsl side"
fd -d 1 -x rg -H '2365'
fd -d 1 -x rg -H '46.*2365'
git commit -am "new phone"
md nfl
cp nfl.html nfl/index.html
git commit -am "NFL test 1"
fd nfl
fd -a nfl
trash nfl.html
git commit -am "NFL test 2"
git diff | nl
git commit -am "NFL test 3"
git commit -am "NFL test 4"
hyperfine 'cha 2000'
type -f cha
hyperfine 'fd -H -I --changed-within=30mins'
p=echo "'fd -H -I --changed-within=30mins'"
echo ''fd -H -I --changed-within=30mins'
echo 'fd -H -I --changed-within=30mins'
echo 'fd -H -I --changed-within=\'30mins'
echo 'fd -H -I --changed-within=\"30mins'
echo "fd -H -I --changed-within=\"30mins"
echo "fd -H -I --changed-within=\"\n30mins"
to
p $$
. d
. .bash_aliases
se 'alias'
man alias
he alias
tldr alias
(ls)
(fda)
{1..9}
echo {1..100}
1..100
echo ls *
echo this \\ncould be long\\nbut it\'s not
ls \\n-lhrt
echo \ this
echo \t this
echo \\t this
j=$(echo " the path is ${x}JJJJJJJJJJJJJJJJJJ ")
j=$(echo "echo the path is ${x}JJJJJJJJJJJJJJJJJJ ")
j=$(echo "echo the path is ${x}JJJJJJJJJJJJJJJJJJeval $j ")
j=$(echo '$j')
j=$('echo $j')
j=$(echo 'echo $j')
j=$(echo "echo $j")
j=$(echo 'fd -H')
p $j
j=$(echo "fd -H -I")
j=$(echo 'ls *.sh')
j=$(echo "ls *.sh")
eval $j
t thi\ is
t thi\ 
t thi\ \!is
t "thi\ is"
t "thi\ 
t "thi\ $PATH"
t 'thi\ $PATH'
echo scp gateway:\*.tar.Z .
echo scp gateway:\*.tar.Z .!
echo scp gateway:\*.tar.Z .! @@ .\n: 1668813862:0;echo scp gateway:\*.tar.Z .! @@ .\ 
echo 'scp gateway:\*.tar.Z .! @@ .\ '
echo "scp gateway:\*.tar.Z .! @@ .\ "
echo "scp gateway:\*.tar.Z .! @@ .\ $OS"
set | head
echo $IFS
fdd thi -x \rm
echo "this is weak \" \""
echo "this is weak \" \""\necho 'this is strong""'
echo "this is weak " ""
echo 'this is weak " "'
echo '!!!'
\cat sheets.py
se 'stat'
fdd | xargs stat --format="%n %x"
fdd | xargs stat --format="%n %x" | column -t
cha() {\n   fd -H -I --changed-within $1mins | xargs stat --format="%n %x" | column -t\n: 1668819951:0;fdd
stat -c '%.19y' d
cha 2000
se 'rg.*v'
se 'rg.*v' | v 0
cha() {\n   fd -H -I --changed-within $1mins | rg -v "tld|conf|\.git|hyp|cache" | xargs stat --format="%n %x" | column -t\n: 1668820366:0;cha 200
cha 20000
cha 20000 | sort
cha 20000 | sort -k2D
ls -l -r --sort=time
cha 20000 | sort -k2d
cha 20000 | sort -k2M
cha 20000 | sort -k1,1M -k2,2n
cha 20000 | sort -n -t"," -k1.7,1.10 -k1.1,1.2 -k1.4,1.5 file
cha 20000 | sort -n -t"," -k1.7,1.10 -k1.1,1.2 -k1.4,1.5 
cha 20000 | sort k2
cha 20000 | sort -k 2n
cha 20000 | sort -rk 2n
cha 20000 | sort -rk 3n
ps -ef | sort -nk2
ps -ef | sort -nk3
ps -ef | sort -nk5
cha 20000 | sort -k 2d
cha 20000 | sort -k 3d
ls -ltu
ls -rltu
find / -type f -printf "\n%Ab %p" | head -n 11
find / -type f -printf "\n%AD %AT %p" | head -n 11 | sort -k1.8n -k1.1nr -k1
cha 20000 | sort -k1.8n -k1.1nr -k1
cha 20000 | sort -k2.8n -k2.1nr -k1
cha() {\n   fd -H -I --changed-within $1mins | rg -v "tld|conf|\.git|hyp|cache|\.local" | xargs stat --format="%n %x" | column -t\n: 1668821722:0;cha 20000 
cha 20000 | v -
cha 20000 | sort -k2
cha 20000 | sort -k3
ls -l /home/$USER | sort -nk5
ls -l /home/$USER | sort -nk6
ls -l /home/$USER | sort -k6
man sort
cha 20000 | sort -M -k3
cha 200000 | sort -M -k3
cls
stat -c "%Y/%n" *.sh | sort -t/ -k1,1n -k2 | sed 's@^.*/@@'
stat -c "%Y/%n" *.sh | sort -t/ -k1,1n -k2 | sed 's@^.*/@@' | xargs ls -lhrt
se '#!
se '#!'
stat -c "%Y/%n" *.sh | sort -t/ -k1,1n -k2
stat -c "%Y/%n" *.sh 
stat -c "%Y/%n" *.sh | sort
stat -c "%Y/%n" *.sh | sort -t/ -k1,1n -k2 | sed 's@^.*/@@' | xargs ls -lhrt #!intertesting
stat -c "%Y/%n" *.sh | sort -t/ -k1,1n -k2 | sed 's@^.*/@@' | xargs fd -a
fd -tf | xargs stat -c "%Y/%n"
fd -tf | xargs stat -c "%Y/%n" | sort
fd -tf | xargs stat -c "%y/%n" | sort
fd -tf --changed-within=5days | xargs stat -c "%y/%n" | sort
fda -tf --changed-within=5days | xargs stat -c "%y/%n" | sort
fda -tf --changed-within=5days |  rg -v "tld|conf|\.git|hyp|cache|\.local" | xargs stat -c "%y/%n" | sort
fda -tf --changed-within=5days |  rg -v "tld|conf|\.git|hyp|cache|\.local" | xargs stat -c "%y/%n" | sort | v -
fda -tf --changed-within=5days |  rg -v "tld|conf|\.git|hyp|cache|\.local" | xargs stat -c "%y/%n" | sort | sed "s/\d\d\:.*00//g"
man sed
fda -tf --changed-within=5days |  rg -v "tld|conf|\.git|hyp|cache|\.local" | xargs stat -c "%y/%n" | sort | sed -e "s/\d\d\:.*00//g"
fda -tf --changed-within=5days |  rg -v "tld|conf|\.git|hyp|cache|\.local" | xargs stat -c "%y/%n" | sort | sed -e "s/\d\d\//g"
fda -tf --changed-within=5days |  rg -v "tld|conf|\.git|hyp|cache|\.local" | xargs stat -c "%y/%n" | sort | sed -e "s/\d\d/g"
fda -tf --changed-within=5days |  rg -v "tld|conf|\.git|hyp|cache|\.local" | xargs stat -c "%y/%n" | sort | sed -e "s/\d\d///g"
fda -tf --changed-within=5days |  rg -v "tld|conf|\.git|hyp|cache|\.local" | xargs stat -c "%y/%n" | sort | sed -e "s/\d\d//g"
fda -tf --changed-within=5days |  rg -v "tld|conf|\.git|hyp|cache|\.local" | xargs stat -c "%y/%n" | sort | sed -e "s/\d\d/x/g"
echo '123' | sed -e 's/1/x/g'
find . -type f -print0 | xargs -0 stat -c "%Y/%n" | sort -t/ -k1,1n -k2 | sed 's@^.*/@@'
find . -type f -print0 | xargs -0 stat -c "%Y/%n" | sort -t/ -k1,1n -k2 | sed 's@^.*/@@' | xargs ls -lhrt
echo '123' | sed -e 's/\d/x/g'
echo '123' | sed -e 's/\d+/x/g'
echo '123' | sed  's/\d+/x/g'
echo day | sed s/day/night/
echo '123' | sed -r  's/\d+/x/g'
echo '123' | sed -r  's/[0-9]*/x/g'
echo '123' | sed -r  's/[0-9]/x/g'
echo '123' | sed -r  's/[0-9]//g'
fda -tf --changed-within=5days |  rg -v "tld|conf|\.git|hyp|cache|\.local" | xargs stat -c "%y/%n" | sort 
fda -tf --changed-within=5days |  rg -v "tld|conf|\.git|hyp|cache|\.local" | xargs stat -c "%y/%n" | sort | sed -e "s/[0-9]\:.*00//g"
t v
t jim
t tom
fda -tf --changed-within=5days |  rg -v "tld|conf|\.git|hyp|cache|\.local" | xargs stat -c "%y/%n" | sort | sed -e "s/[0-9]\:.*00//g" #!pretty good
fda -tf --changed-within=5days |  rg -v "tld|conf|\.git|hyp|cache|\.local" | xargs stat -c "%y/%n" | sort | sed -e "s/[0-9]\:.*00//g" | tail #!pretty good
fda -tf --changed-within=5days |  rg -v "tld|conf|\.git|hyp|cache|\.local" | xargs stat -c "%y/%n" | sort | sed -e "s/[0-9]+\:.*00//g" | tail #!pretty good
fda -tf --changed-within=5days |  rg -v "tld|conf|\.git|hyp|cache|\.local" | xargs stat -c "%y/%n" | sort | sed -e "s/[0-9]*\:.*00//g" | tail #!pretty good
fda -tf --changed-within=5days |  rg -v "tld|conf|\.git|hyp|cache|\.local" | xargs stat -c "%y/%n" | sort | sed -e "s/[0-9]*\:.*00\///g" | tail #!pretty good
fd --changed-within .5hour
fd --changed-within .5hours
fd --changed-within=.5hour
se 'changed.'
fd --changed-within=5hours
fd --changed-within=.5hours
fd --changed-within=1.5hours
cha2()  {\nfda -tf --changed-within=$1hours |  rg -v "tld|conf|\.git|hyp|cache|\.local" | xargs stat -c "%y/%n" | sort | sed -e "s/[0-9]*\:.*00\///g" }
cha2 2
trash nvim jim tom
cha2 24
gst | column
git commit -am "Friday"
cham 2
cham 2000
fd 'hype'
git ls-files | column
ls h*
lt h
fd h
fd -td h
fd -td -d 1 h
md h
fda -tf --changed-within=$1hours |  rg -v "tld|conf|\.git|hyp|cache|\.local" | xargs stat -c "%y/%n" | sort | sed -e "s/[0-9]*\:.*00\///g" 
fda -tf --changed-within=5days |  rg -v "tld|conf|\.git|hyp|cache|\.local" | xargs stat -c "%y/%n" | sort | sed -e "s/[0-9]\:.*00[0-9]//g" #!pretty good
fda -tf --changed-within=5days |  rg -v "tld|conf|\.git|hyp|cache|\.local" | xargs stat -c "%y/%n"
t ppp
\rm ppp
gha 24
lt bash/yv.sh
cd 
hp 'p3 x.py'
p3 x.py
x.py
hyperfine 'x.py'
hyperfine 'x.py' 'fd'
hyperfine 'x.py' 'fd' 'find .'
hyperfine 'x.py' 'fd' 'find .' 2>/dev/null
fd -a x
hp '/mnt/c/projects/p3/x.py'
v /mnt/c/projects/p3/x.py
/mnt/c/projects/p3/x.py
/mnt/c/projects/p3/x.py | column
hp '/mnt/c/projects/p3/x.py' 'find .'
op="lhrt"
op="- lhrt"
ls $op
string='jim'
if [[ -z "$string" ]]; then\n  echo "String is empty"\nelif [[ -n "$string" ]]; then\n  echo "String is not empty"\n: 1668843307:0;string=''
if [[ -z "$string" ]]; then;  echo "String is empty";elif [[ -n "$string" ]]; then;  echo "String is not empty";fi
sc st
string='xxx'
. st
echo {a, b}jim
echo {A,B}.js
echo {a,b}jim
echo {a ,b }jim
str="/path/to/foo.cpp"\necho "${str%.cpp}"    # /path/to/foo
${#string}
echo #string
h3 | nl
h3 | nl -r
h3 | tac | nl | tac
sc .bash_aliases
alias h3
. ~/.bash_aliases
ls -$op
p $op
tac functions.sh
hit 22
. workon
. workon not
. workon new
fd . -td /mnt/c/you 
fd . -td /mnt/c/you | column
md list; cd list
ls *.py | xargs head -n1
v x.py
chmod 755 workon
. workon newer
\rm new newer
mv workon pys
cd /home/steff007/winp/list
sed -i "y/\"/'/" lsp.py
lsp.py
p(d)
perl -pi.back -e 's/oldString/newString/g;' not
v not
cat not.back not
cat lsp.py
perl -pi.back -e 's/\'/\"/g;' lsp.py
perl -w
sed not
perl -pi.back -e ~'s/\'/\"/g;' lsp.py
v coolReadFile.py
d='less'
md $d; cd $d
t sum.py
cd list
\rm not not.back
v lsp.py
cd less
./sum.py
sed -i "s/time3/lazy" ye.sh
sed -i -e "s/time3/lazy" ye.sh
se 'sed' | tail
sed -i "s/time3/lazy/" ye.sh
fda 'voic'
fda -ejs --changed-within=8weeks
fda -ejs --changed-within=2weeks
fda -ejs --changed-within=2weeks > ~/voice.js &
git log --oneline | tail
git checkout 581fd2a
v voice.js
fda -ejs --changed-within=2weeks 
git checkout -
source /mnt/c/all/bash/mp4/bin/activate
fd . /mnt/c/you -td | column
alias fdc
read -p 'Enter DL youtube audio: ' DIRY\nnewdir="/mnt/c/you/$DIRY"\necho newdir
read -p 'Enter DL youtube audio: ' DIRY
read  'Enter DL youtube audio: ' DIRY
workon cool
v cool
cool
ne='/mnt/c'
cd $ne
fd . /mnt/c/you -td -d 1 | column
workon cool2
fd work
ln pys /mnt/c/smith
cp -R pys/ /mnt/c/all
fd -d 1 git
lt gitall*
fd pys
mpc
wget "https://pdst.fm/e/chtbl.com/track/E91833/cdn.twit.tv/audio/twit/twit0902/twit0902.mp3" ##twit 8/15
mc ../all
cd ps
ffmpeg -version
pipenv shell
rm -rf Pipfile
mkcd ffm
pipenv install
cat Pipfile
pipenv ffmpeg
p3 venv ffmpeg
fda -x \rm -rf
tree ffmpeg
ps -aus | rg "py"
sudo p3 -m venv ffmpeg
sudo python3.10 -m venv ffmpeg
p3 list
type -a python3.10
p3 --version
alias p3='/bin/python3.10'
echo $PATH
pip list | v -
mkcd env
rm -rf ffmpeg
p3 -m venv ffm
~/.zshrc
unalias rm
\rm -rf env
cd /mnt/c/all/ps
rm -rf ffm
type -a pip
fd py
\rm -rf ffmpeg
. bin/activate
mkcd ptest
p3 -m venv ffmpeg
./bin/activate
fd activate
bin/activate
fd activate -x ls -lhrt
which python3.10
type -a pip3
pip install ffmpeg-python
pip list
cp -R ffmpeg /mnt/c/projects
source bin/activate
fd -emp4 | head
cd git/
cp git /mnt/c/projects/ffmpeg
cp git.mp4 /mnt/c/projects/ffmpeg
mv git.mp4 movie.mp4
cp twit0902.mp3 /mnt/c/projects/ffmpeg/movie.mp3
v trim.py
p3 trim.py
vlc out.mp3
rm -rf aaaaaaaaaaa 111111111
cd willie
cp Arlo_Guthrie_Willie_Nelson_Will_The_Circle_be_Unbroken.mp3 /mnt/c/alb
cp Brokeback_Mountain_soundtrack_Willie_Nelson_He_was_a_friend_of_mine_lyrics_.mp3 /mnt/c/alb
cp Diana_Krall_Elvis_Costello_Willie_Nelson_Crazy_Live_.mp3 /mnt/c/alb
cp Dolly_Parton_Willie_Nelson_Everything_s_Beautiful_In_It_s_Own_Way_.mp3 /mnt/c/alb
cp Julio_Iglesias_To_all_the_girls_I_loved_before_feat._Willie_Nelson_.mp3 /mnt/c/alb
cp Just_a_closer_walk_with_thee_Patsy_Cline_And_Willie_Nelson.mp3 /mnt/c/alb
cp Kris_Kristofferson_Rita_Coolidge_Please_don_t_tell_me_how_the_story_ends_1978_.mp3 /mnt/c/alb
cp Kris_Kristofferson_They_Killed_Him.mp3 /mnt/c/alb
cp Lukas_Nelson_You_Were_Always_On_My_Mind.mp3 /mnt/c/alb
cp Mind_Your_Own_Business_Willie_Nelson.mp3 /mnt/c/alb
cp My_Heros_Have_Always_been_cowboys..._by_Willie_Nelson.mp3 /mnt/c/alb
cp Night_Life_Willie_Nelson_Charles_Manson.mp3 /mnt/c/alb
cp Norah_Jones_Baby_It_s_Cold_Outside_Willie_Nelson.mp3 /mnt/c/alb
cp Willie_Nelson_1997_Funny_How_Time_Slips_Away.mp3 /mnt/c/alb
cp Arlo_Guthrie_Willie_Nelson_Will_The_Circle_be_Unbroken.mp3 /mnt/c/you/alb\ncp Brokeback_Mountain_soundtrack_Willie_Nelson_He_was_a_friend_of_mine_lyrics_.mp3 /mnt/c/you/alb\ncp Diana_Krall_Elvis_Costello_Willie_Nelson_Crazy_Live_.mp3 /mnt/c/you/alb\ncp Dolly_Parton_Willie_Nelson_Everything_s_Beautiful_In_It_s_Own_Way_.mp3 /mnt/c/you/alb\ncp Julio_Iglesias_To_all_the_girls_I_loved_before_feat._Willie_Nelson_.mp3 /mnt/c/you/alb\ncp Just_a_closer_walk_with_thee_Patsy_Cline_And_Willie_Nelson.mp3 /mnt/c/you/alb\ncp Kris_Kristofferson_Rita_Coolidge_Please_don_t_tell_me_how_the_story_ends_1978_.mp3 /mnt/c/you/alb
cp Kris_Kristofferson_They_Killed_Him.mp3 /mnt/c/you/alb
cp Lukas_Nelson_You_Were_Always_On_My_Mind.mp3 /mnt/c/you/alb
cp Mind_Your_Own_Business_Willie_Nelson.mp3 /mnt/c/you/alb
cp My_Heros_Have_Always_been_cowboys..._by_Willie_Nelson.mp3 /mnt/c/you/alb
cp Night_Life_Willie_Nelson_Charles_Manson.mp3 /mnt/c/you/alb
cp Norah_Jones_Baby_It_s_Cold_Outside_Willie_Nelson.mp3 /mnt/c/you/alb
deactivate
fd Will
vz
cd ffmpeg
fd -a mov
fd -a mov.py
fd -a mov.py | clip
rg clip ~/.bash_aliases
fd -a mov.py | cl
cp /mnt/c/all/ps/mov.py .
mkcd dict
t dic.py
chmod 755 dic.py
dic.py
cd /home/steff007/winp/dict
cd /home/steff007/.ipython/profile_default/startup/
head -n4 $(ls *) | less -NX
v start.py
mv pystart ../pys
fd -d 2 pystart
workon pystart
cd ../winp
pystar
type -a unzip
manv unzip
unzip archive.zip -d /mnt/c/projects/p3
cd Harry_Potter_Movies
cp Characters.csv ../dict
mv listdir.py ..
mkcd dir
mv ../listdir.py 
mv ../listdir.py .
fd -d 1 | xargs rg '
fd -d 1 -tf | xargs rg '
' | less
v t.py
cat -v x.
cat -v x.py
/cat -v x.py
\cat -v x.py
v x.js
cat x.py
\cat -v listdir.py
./listdir.py
p3 -m timeit -s 'text="hello world"'
pip install reader
sed -e "s/\r//g"  Characters.csv > c.csv
\cat -v Characters.csv
\cat -v c.csv
mkcd junk
ls / -lhrt
p3 -m pip install tablute
p3 -m pip install tabulate
resume

v  /home/steff007/.ipython/profile_default/startup
whos
v filename.txt
ie
v tables.txt
fda -d 2 | xargs rg 'HIST'
fda -d 2 -tf | xargs rg 'HIST'
fda -d 2 -tf | xargs rg 'hist'
fda -d 2 -tf | xargs rg -i 'hist'
chah 72
chah 48 | v -
type -f chah | v -
fd -H -I -tf --changed-within=24hours
fd -H -I -L -tf --changed-within=24hours
chah()  {\nfda -tf -L --changed-within=$1hours |  rg -v "tld|conf|\.git|hyp|cache|\.local" | xargs stat -c "%y/%n" | sort | sed -e "s/[0-9]*\:.*00\///g" }\ncham() {\nfda -tf -L --changed-within=$1minutes |  rg -v "tld|conf|\.git|hyp|cache|\.local" | xargs stat -c "%y/%n" | sort | sed -e "s/[0-9]*\:.*00\///g" }
fd -tf 'nap' | v -
bat wrap.txt
cat wrap.txt
. functions.sh
cha 48
v wrap.txt
cat c.csv
cp Characters.csv c.csv
v c.csv
dos2unix
manv dos2unix
dos2unix c.csv
man hd
fd Characters.csv
hd Characters.csv
hd Characters.csv | v -
v Characters.csv
vim --version | grep byte_offset
vim --version
man inconv
man iconv
sudo netstat -lntp
curl cheat.sh/command
find -name '*.py'
datamash
cat >>EOF
LT
yes ro
look cool
toe
apg
sysctl
sysctl -a
lsmod
ddate
apt list --installed 
apt list --installed | rg '^b'
gcc sort.c -o sort
sort
rm sort
gcc sort.c -o sortb
curl http://ocw.mit.edu/ans7870/6/6.006/s08/lecturenotes/files/t8.shakespeare.txt -o shakespeare.txt
v shakespeare.txt
mv shakespeare.txt sh.txt
v sort.c
awk 'NF=2' sh.txt
awk 'NF=1' sh.txt > si.txt
cat si.txt
sortb
awk 'NF=3' sh.txt 
v sh.txt
apt list --installed | rg 'my'
apt list --installed | rg 'maria'
sudo systemctl status mariadb
systemctl start mariadb
nvim --clean
vv maria.txt
v test.py
y=re.sub(r'[^a-zA-Z]', ' ' ,x)
p $y
curl https://api.github.com/repos/wither7007 | jq ' .name'
curl https://api.github.com/repos/wither7007 
curl https://api.github.com/repos/wither7007/
curl 'https://wikimedia.org/api/rest_v1/metrics/pageviews/per-article/en.wikipedia/all-access/all-agents/Talking_Heads_discography/daily/20210928/20210930' | jq '.'
curl 'https://wikimedia.org/api/rest_v1/metrics/pageviews/per-article/en.wikipedia/all-access/all-agents/Talking_Heads_discography/daily/20210928/20220930' | jq '.'
curl 'https://wikimedia.org/api/rest_v1/metrics/pageviews/per-article/en.wikipedia/all-access/all-agents/Talking_Heads_discography/daily/20210928/20220930' | jq '.' | v -
curl https://api.github.com/repos/wither7007
curl https://api.github.com/repos/stedolan/jq | jq ' .name'
curl https://api.github.com/repos/stedolan/
GHUSER=CHANGEME; curl "https://api.github.com/users/$GHUSER/repos?per_page=100" | grep -o 'git@[^"]*'
GHUSER=wither7007; curl "https://api.github.com/users/$GHUSER/repos?per_page=100" | grep -o 'git@[^"]*'
GHUSER=wither7007; curl "https://api.github.com/users/$GHUSER/repos?per_page=1 | v -
GHUSER=wither7007; curl "https://api.github.com/users/$GHUSER/repos?per_page=1" | v -
GHUSER=wither7007; curl "https://api.github.com/users/$GHUSER/repos?per_page=1" | jq '.[] | {full_name: .full_name, url: .url}'
curl "https://api.github.com/users/$GHUSER/repos?per_page=1" | jq '.[] | full_name: .full_name, url: .url'
curl "https://api.github.com/users/$GHUSER/repos?per_page=1" | jq '.[] | {full_name: .full_name, url: .url}'
curl "https://api.github.com/users/$GHUSER/repos?per_page=3" | jq '.[] | {full_name: .full_name, url: .url}'
curl "https://api.github.com/users/$GHUSER/repos?per_page=3" | jq -r '.[] | {full_name: .full_name, url: .url}'
curl 'https://api.github.com/users/jojozhuang/repos' | jq -r '.[] | .html_url + "/archive/master.zip"'
curl 'https://api.github.com/users/jojozhuang/repos' | jq -r '.[] | keys'
curl 'https://api.github.com/users/jojozhuang/repos' | jq -r '.[] | keys' | v -
curl "https://api.github.com/users/$GHUSER/repos?per_page=1" |  keys' | v -
curl "https://api.github.com/users/$GHUSER/repos?per_page=1" |  '.[] | keys' | v -
column j
column j | v -
column -t j | v -
column -t j 
column  j 
\cat j | column 
\cat j | column -t
curl "https://api.github.com/users/$GHUSER/repos?per_page=3" | jq '.[] | {full_name: .full_name, size: .size, ssh: .ssh}'
curl "https://api.github.com/users/$GHUSER/repos?per_page=1" | jq '.[] | keys' | v -
curl "https://api.github.com/users/$GHUSER/repos?per_page=3" | jq '.[] | {full_name: .full_name, size: .size, ssh: .ssh_url}'
curl "https://api.github.com/users/$GHUSER/repos?per_page=13" | jq '.[] | {full_name: .full_name, size: .size, ssh: .ssh_url}' | v -
curl "https://api.github.com/users/$GHUSER/repos" | jq '.[] | {full_name: .full_name, size: .size, ssh: .ssh_url}' | v -
curl "https://api.github.com/users/$GHUSER/repos" | jq '.[] | {full_name: .full_name, size: .size, ssh: .ssh_url}' #cool git repo
curl "https://api.github.com/users/$GHUSER/repos?per_page=13" | v -
./jqjq -n 'def f: 1,8; [f,f] | map(.+105) | implode'\n"jqjq"
g:
type -f omz_history
fd -d 1 conf
fda -d 1 conf
v .tmux.conf
type -f omz_history | v -
date -ud @1669514959
date -ud @1669515089
date -d @1669515089
perl -e 'print scalar(localtime(1284763671)), "\n"'
time perl -we 'my $sum = 0; while (<>) { my @F = split; \n$sum += $F[4]; } printf "%dn", $sum; ' transaction.list\n53951193376
time ls
time fda
manv time
tldr time
type time
ls > 2>&1
cat --INCORRECT_OPTION > dev/null 2>&1
cat --INCORRECT_OPTION > /dev/null 2>&1
llllkj > /dev/null 2>&1
llllkj >  2>&1
mkcd c
v out.log err.log
asdf 2>err.log 1>out.log
v -o err.log out.log
fd -d 1 -tf | xargs rg 'pu=' | less
fdd vim
type -a time
time --version
time -version
time -v
wget "https://raw.githubusercontent.com/dylanaraps/neofetch/master/neofetch"
v neofetch
. neofetch
sh neofetch
bash neofetch
mv neofetch ~/pys/neo.sh
chmod 755 neo.sh
file cool
file voice.js
file functions.sh
read a
read ; echo $REPLY
read ; echo ls $REPLY
read ;  ls $REPLY
ls git
ls cb
#sudo apt install -y lf
fdd ins
fdd up
apt
apt-get moo
apt moo
apt search lf
apt search lf | v -
apt list
apt list rg "^lf"
apt list | rg "^lf"
apt install -y lfm
sudo apt install -y lfm
lfm
lm
man lf
wget https://github.com/gokcehan/lf/releases/download/r6/lf-linux-amd64.tar.gz \\n-O lf-linux-amd64.tar.gz
v lf-linux-amd64.tar.gz
tar -xvf lf-linux-amd64.tar.gz
lf -help
lf -doc
lf -doc | less
cp lf /usr/local/bin
sudo cp lf /usr/local/bin
unalias lf
t x b c
wget "https://raw.githubusercontent.com/ericmurphyxyz/dotfiles/master/.config/lf/lfrc"
cat lfrc
v /etc/lfrc
fdd lf
mfd lf
md lf
v ~/.config/lf/lfrc
cham 20
cham 200
t de
lt winp
neo.sh
apt list --installed | wc
hyperfine --warmup 3 rg function
hyperfine --warmup 3 "rg function"
hyperfine --warmup 3 "rg function" "ls"
time 'rg function'
time rg function
hyperfine --warmup 3 "rg function" 
hyperfine --warmup 3 "fd -d 1 | rg function" 
hyperfine --warmup 3 "fd -d 1 | xargs rg function" 
rg -n function
rg function
rg pwd
rg -c 'function'
mkcd lf
v xxxx
rg -c 'frumious'
cat lf/deleteme/xxx
cat lf/deleteme/xxxx
v rclone/pimple
rg -c --no-ignore 'frumious'
rg -c --no-ignore --no-ignore-dot --no-ignore-vcs 'frumious'
fda -tf
fda -tf -x xargs rg -c --no-ignore --no-ignore-dot --no-ignore-vcs 'frumious'
fda -tf -x  rg -c --no-ignore --no-ignore-dot --no-ignore-vcs 'frumious'
fda -tf -x  rg --no-ignore --no-ignore-dot --no-ignore-vcs 'frumious'
fda | xargs rg -c --no-ignore --no-ignore-dot --no-ignore-vcs 'frumious'
fda -tf | xargs rg -c --no-ignore --no-ignore-dot --no-ignore-vcs 'frumious'
v .config/nvim/plugged/vim-prettier/node_modules/linguist-languages/data/Jison
v .config/nvim/plugged/vim-prettier/node_modules/linguist-languages/data/Type
cd .config/nvim/plugged/vim-prettier/node_modules/linguist-languages/data/
sudo netstat -tlnp
netstat -lntp
curl https://api.github.com/repos/stedolan/jq/issues\?per_page\=5 | \\n jq '.[4].title' \n"Compile error messages don't provide column only line number"
curl https://api.github.com/repos/stedolan/jq/issues\?per_page\=5 | \\n jq '.[4].title'
curl https://api.github.com/repos/stedolan/jq/issues\?per_page\=5 |  jq '.[4].title'
se 'stedo.*page' | tail
curl https://api.github.com/repos/stedolan/jq/issues\?per_page=5 |  jq '.[4].title'
curl https://api.github.com/repos/stedolan/jq/issues |  jq '.[4]'
echo '["1","2","3"]' | jq -j '.[]'
printf '%s\n' '["1","2","3"]' | jq -j '.[]'
printf '%s\n' "$(date +'%a %m/%d/%Y - %H:%M:%S')"
fd was
fd cher
fd cher | v -
vlc Q_A_Ron_Chernow.mp3 Q_A_Ron_Chernow_Part_2.mp3 Debate_on_Scientific_Reason_Truth_1984_.mp3
wget https://raw.githubusercontent.com/gokcehan/lf/master/etc/lfrc.example
v lfrc.example
fda -d 1 -tf gi
mkcd gitapi
manv curl
curl -i https://api.github.com 
curl -i https://api.github.com | jq '.[] | keys'
curl https://api.github.com | jq '.[] | keys'
curl https://api.github.com | v -
curl https://api.github.com/issues
curl -v --http2 --head --silent --output /dev/null https://example.com
curl -o output.html www.dataden.tech
curl -o output.html www.wandinround.com
cat output.html
curl -w "%{time_total}\n" -o /dev/null -s www.example.com
curl -w "%{time_total}\n" -o /dev/null -s www.wandinround.com
curl -w "%{time_total}\n" -o /dev/null -s www.ibm.com
curl dict://dict.org/m:curl
curl dict://dict.org/m:Burl
curl -O www.haxx.se/index.html -O curl.se/download.html
v index.html download.html
v $(ls)
fd --changed-within=1hours -x rm
curl --trace trace.txt www.haxx.se
v trace.txt
curl dict://dict.org/d:heisenbug:jargon
curl -I -XHEAD http://example.com --verbose
git https://api.github.com/users/timmywheels/repos
curl https://api.github.com/users/timmywheels/repos
curl -i "https://api.github.com/repos/vmg/redcarpet/issues?state=closed"
curl -i "https://api.github.com/repos/vmg/redcarpet/issues?state=closed" | jq
se 'git.*jq'
curl -i "https://api.github.com/repos/vmg/redcarpet/issues?state=closed" | jq '.'
curl https://api.github.com/repos/vmg/redcarpet/issues?state=closed" | jq '.'
curl "https://api.github.com/repos/vmg/redcarpet/issues?state=closed" | jq '.'
curl "https://api.github.com/repos/vmg/redcarpet/issues?state=closed" | jq '.' | v -
curl "https://api.github.com/repos/wither7007" | jq '.' | v -
f1
rm de
fdd git
lt git*
cd /mnt/c/all
fd -tf whis
trash whis
git rm whis
chis
./gitAll.sh
curl "https://api.github.com/repos/wither7007" | jq 'keys' | v -
curl "https://api.github.com/repos/wither7007" 
head -n4 $(fd --changed-within=2days) | less -NX | v -
head -n4 $(fd --changed-within=2days) | less -NX | v - #good header
rm pys/jimmy.is\nrm pys/jim.is
head -n4 $(fd --changed-within=8days) | less -NX | v - #good header
rm pys/_a_
fdd gc
fdd gc -x ls -lhrt
. rm
sc rm
git rm rm
rm rm
v -o gcloud_his gcloud_his_u
v -O gcloud_his gcloud_his_u
curl "https://api.github.com/users/wither7007/repos" | jq '.[] | { ssh: .ssh_url }' | v -
v cloud_alias
v chis
shellcheck chis
curl https://api.github.com/zen
curl https://api.github.com/zen | xargs printf '%s'
curl https://api.github.com/zen | xargs printf '%s\n'
curl https://api.github.com/ | v -
curl https://api.github.com/ | jq '.[]' | v -
curl https://api.github.com/ | jq -r '.[]' | v -
git log HEAD@{1} --stat 
git diff HEAD~4 | v - #!good git stuff
git diff --name-only HEAD~4 | v - #!good git stuff
git diff --name-only HEAD~24 | v - #!good git stuff
git rm zzzz
git log HEAD@{1} --stat | v -
curl  https://api.github.com/user
gh auth login
gh api --header 'Accept: application/vnd.github+json' --method GET /repos/octocat/Spoon-Knife/issues -F per_page=2 > data.json
v data.json
workon api
cat api
./api
cur https://api.github.com/gists
curl https://api.github.com/gists
curl https://api.github.com/gists | jq '.[] | keys'
se 'curl.*api'
curl https://api.github.com/gists | jq '.[1] | keys'
curl https://api.github.com/gists | jq '.[1] | { .description } '
curl https://api.github.com/gists | jq '.[1] | { desc: .description } '
curl https://api.github.com/gists | jq '.[1] 
curl https://api.github.com/gists | jq '.[1]'
curl https://api.github.com/gists | jq '.[1]' | less
curl https://api.github.com/gists | jq '.[1]' | v -
gh api \\n  -H "Accept: application/vnd.github+json" \\n  /gists/GIST_ID
gh api \\n  -H "Accept: application/vnd.github+json" \\n  /gists/12344
curl \\n  -H "Accept: application/vnd.github+json" \\n  -H "Authorization: Bearer <YOUR-TOKEN>" \\n  https://api.github.com/gists/starred
echo '""' | jq '1,2'
curl https://api.github.com/repos/stedolan/jq/issues\?per_page\=5 | \\n  jq '[ .[].title ] '
curl 'https://api.github.com/repos/wither7007/all_wsl/commits?per_page=5' | jq '.[] | {full_name: .full_name, url: .url}'
curl 'https://api.github.com/repos/wither7007/all_wsl/commits?per_page=5' | jq '.[1] \n: 1669610474:0;curl 'https://api.github.com/repos/wither7007/all_wsl/commits?per_page=5' | jq '.[1] \n' | v -
curl 'https://api.github.com/repos/wither7007/all_wsl/commits?per_page=5' | jq '.[] \n' | v -
curl 'https://api.github.com/repos/wither7007/all_wsl/commits?per_page=5' | jq '.[] ' | v -
cd winp/
l | rg 'git'
type -f l
type -f lf
rg 'tar' gcloud_his_u
rg 'tar' gcloud_his_u | v -
fdd -esh
tar -czf shells.tar.gz -T $(fd -esh)
fd -esh
fd -a -esh 
fd -a -esh tfiles
fd -a -esh > tfiles
cat tfiles
fda lfrc
v .config/lf/lfrc
fd voice
v $(fd -egz)
fd -egz
fda -egz
v $(fda -egz)
fda -egz | v -
rm lf/lf-linux-amd64.tar.gz\nrm sh.tar.gz\nrm shells.tar.gz
v .
q=language:js+repo:reactjs/reactjs.org
p $q
curl https://api.github.com/ | jq '.[]'
curl https://api.github.com/ 
fd -tf | v -
rm Napoleon_A_Dealer_in_Hope_FULL_MOVIE_.mp3
rm Napoleon_1955_French_Historical_Movie_Jean_Pierre_Aumont_Jeanne_Boitel.mp3\nNapoleon_A_Dealer_in_Hope_FULL_MOVIE_.mp3
rm Napoleon_1955_French_Historical_Movie_Jean_Pierre_Aumont_Jeanne_Boitel.mp3
fdd ign
fda -d 1 ig
[ -e .gitignore ] && echo “File exists.” || echo "File does not exist"
f =".config"
f=".config"
f=".configs"
[ -e $f ] && echo “File exists.” || echo "File does not exist"
mkcd work
workon move
cat move
f="jj"
printf "Enter a decimal number:\n"\nread number\nprintf "%5.2f\n" "$number"
printf -v var 'Welcome'
p $vare
p $var
manv export
c ~/.bashrc
head -n2 work
head -n2 move
head -n3 move
export f="noth"
./move 2
set | rg 'f'
set | rg 'f' | v -
./move z
shellcheck move
printf '\n\n'
./move move
./move mover
RED='\033[0;31m'\necho "This is the color ${RED}Red"
sc xx
bash xx
sh xx
chmod 755 xx
./xx
bash move
echo "COLORS:\n 30\t\x1b[30mBLACK\x1b[0m \n 31\t\x1b[31mRED\x1b[0m \n 32\t\x1b[32mGREEN\x1b[0m \n 33\t\x1b[33mYELLOW\x1b[0m \n 34\t\x1b[34mBLUE\x1b[0m \n 35\t\x1b[35mMAGENTA\x1b[0m \n 36\t\x1b[36mCYAN\x1b[0m \n 37\t\x1b[37mWHITE\x1b[0m" && echo "BACKGROUND COLORS:\n 40\t\x1b[40mBLACK\x1b[0m \n 41\t\x1b[41mRED\x1b[0m \n 42\t\x1b[42mGREEN\x1b[0m \n 43\t\x1b[43mYELLOW\x1b[0m \n 44\t\x1b[44mBLUE\x1b[0m \n 45\t\x1b[45mMAGENTA\x1b[0m \n 46\t\x1b[46mCYAN\x1b[0m \n 47\t\x1b[47mWHITE\x1b[0m"
move x
sc move
cp move te
blue=$(tput setaf 4)\nnormal=$(tput sgr0)\nprintf "%40s\n" "${blue}This text is blue${normal}"
sc ~/.zshrc
./te
sc tt
workon col
head col
colors256
sc col
./col
printf $(tput setaf "$c")"
printf $(tput setaf "$c")
printf $(tput setaf "$c")jim
printf $(tput setaf "$c")"jim"
workon mc
cat mc
type -a v
nvim mc
v mc
v col
v te
type -a mc
mv mc mcc
v mcc
./mcc
v -O mcc move
./move x
./move xxxx
./move xx
rg '\!\#' xx
rg '\!' xx
rg 'a' xx
rg 'a' move
rg '\!' move
type -f rgh
echo "\!"
printf "\!"
printf "
lt ~/pys
git ls-files 
fd > tfiles
tar czf sh.tar.gz -T files
ls f*
tar czf sh.tar.gz -T tfiles
mkcd t
lt ..
tar xvzf ../sh.tar.gz
rm -rf t/
fd -a tar
fda -a gz
fda -a gz | cl
mkcd deleteme
tar xvzf /home/steff007/pys/sh.tar.gz
rm -rf deleteme
cat pystart
git restore pys/ipy_linux3
rm -rf c/
se 'git.*log'
git log --stat | v -
git commit -am "Monday"
cd junk/work
head -n4 $(ls *.*) | less -NX | v -
ls *.*
ls *
head -n4 $(ls *) | less -NX | v -
cp move ~/pys
rm move
ln ~/junk/work/move move
./move xxx
cd ../junk/work
./move space
./move te
cp mov cols
cp move cols
cp cols ~/winp
fda > yous
cd stoneshits
cp Beast_Of_Burden_by_The_Rolling_Stones.mp3 /mnt/c/you/kb
sc scop
v cols
cp move m
cat cols col
rm col
cat m
cp m n
v n
v m
./m
sc m
sc m n
cp n ~/pys/colors
cd ~/pys
cat n m
cp m ~/pys/test
cat colors test
fd -a color
fd -a color | cl
test
./test move
./test mover
sc colors
./colors
./test jim.is
./test jim.ist
rm test
tar -tf sh.tar.gz
wi unzip
manv tar
tar -tvf sh.tar.gz
tar -xf backup.tar.gz one
rm one
tar -xf sh.tar.gz one
v yous
fd -a space
fd -a space | cl
/home/steff007/pys/space
ps -aux | rg "py" | awk {'print $1'}
ps -aux | rg "py" | awk {'print $1,$2'}
ps -aux | rg "py" | v
ps -aux | rg "sql" | v
ps -aux | rg "py"
cd coolside
workon sleep
./sleep
cat sleep
v sleep
t l m n o
la | rg az
v y.py
rm .aws
rm .azure
ls -a
y.py
fda -tf -d 1 | rg mysq
fda -tf -d 1 | xargs rg mysq
fda -tf -d 1 | xargs rg mysq | less
fda -tf -d 1 
fd -td j
cd jc
fd | xargs rg "yt-"
rg source yv.sh
head yv.sh
head yv.sh | sed -n '2p'
head yv.sh | nl
head yv.sh | sed -n '7p'
manv nl
head yv.sh | nl -v 0
head yv.sh | sed -n '5p'
head yv.sh | sed -n '0p'
head yv.sh | sed -n '1p'
head yv.sh | nl 
head yv.sh | sed '/^$/d'
head yv.sh | sed '/^$/d' | nl
head yv.sh | sed -n '6p'
sed '/^$/d' $(ls)
sed '/^$/d' yv.sh
sed -i '/^$/d' yv.sh
sed -i '/^$/d' dm
v dm
fd --changed-within=1hours
fd --changed-within=10min    -exec echo {} \;
head dm
cat dm
fd --changed-within=10min | xargs sed -i '/^$/d' #!good remove blanks
v .bash_history
fda z.*his
fda 'z.*his'
v .zsh_history
fda 'z.*rc'
ps -aux | rg "sq"
#fd '.*_mp3' -exec rename "s/_mp3/\.mp3/g" #!good replace  names
fd 'will_durant' | head -n1
fd 'will_durant_' | head -n1
fd 'will_durant_' -exec rename "s/Will_Durant_//g"
rm *.mebm
ls *.webm
fd 'The_' -exec rename "s/The_//g"
vlc Reformation.mp3 Waterloo_Causes_Courses_and_Consequences_Professor_Sir_Richard_Evans_FBA.mp3 St._Augustine_354_430_.mp3
cat listdir.py
t ldir.py
head -n4 $(ls *.py) | less -NX | v -
fd -a ldi
fd -a ldi | cl
/mnt/c/projects/p3/dir/ldir.py
./ldir.py
tree | v -
ex twit0903.mp3
se 'cur.*jq'
cd /mnt/c/twit
ex twit0903.mp3 | j1 '.[]'
ex twit0903.mp3 | jq '.[]'
type -f ex
exiftool -j twit0903.mp3 | jq '.[]'
se 'cur.*jq' | tail -n2
se 'cur.*jq' | tail -n5
se 'cur.*jq' | tail -n10
exiftool -j twit0903.mp3 | jq '.[] | {gen: .Genre}'
exiftool -j twit0903.mp3 | jq '.[] | {comment: .Comment}'
exiftool -j twit0902.mp3 | jq '.[] | {comment: .Comment}'
workon tcom
./tcom
exiftool -j LNL202.mp3 | jq '.[] | {comment: .Comment}'
ex LNL202.mp3 
v tcom
mv twit0903.mp3.1 twit0903.mp3
v wt.ps1
v $HISTFILE
sed -e "s/^M//" sheets.py
sed -e -i "s/^M//" sheets.py
sed -i "s/^M//" sheets.py
//" sheets.py
fd -d 1 -epy | xargs sed -e -i "/^M//"
fd -d 1 -epy | xargs sed -i "/^M//"
fd -d 1 -epy | xargs sed -i "s/^M//"
fd -d 1 -epy | xargs sed -i "s/
fda -d 1 alias
fda -d 1 -a alias
fda -d 1 -a alias | cl
workon alss
source /home/steff007/.bash_aliases && lt
source /home/steff007/.bash_aliases || lt
fd -epy| xargs sed -i '/^$/d' #!good remove blanks
zsh 'for i in {1..10000}; do echo test; done'
se 'bash.*\-c'
bash -c 'for i in {1..10000}; do echo test; done'
v listdir.py
t Diagnose\ slow\ Python\ code.\ \(Feat.\ async_await\).mp4
cat ye.sh
rg 'yt' *
fdd | xargs rg 'yt'
fdd -tf | xargs rg 'dl'
yt-dlp -j https://www.youtube.com/watch\?v\=m_a0fN48Alw
se 'jq'
yt-dlp -j https://www.youtube.com/watch\?v\=m_a0fN48Alw | jq '.[]'
yt-dlp -j https://www.youtube.com/watch\?v\=m_a0fN48Alw | jq '.[]' | v -
yt-dlp -j https://www.youtube.com/watch\?v\=m_a0fN48Alw > b.json
cat b.json
yt-dlp -j https://www.youtube.com/watch\?v\=m_a0fN48Alw | jq 'keys[]'
yt-dlp -j https://www.youtube.com/watch\?v\=m_a0fN48Alw | jq 'keys[]' | v -
#"_filename"
se 'jq' | tail
yt-dlp -j https://www.youtube.com/watch\?v\=m_a0fN48Alw | jq '.[]' | {file: ._filename }
yt-dlp -j https://www.youtube.com/watch\?v\=m_a0fN48Alw | jq '.[]' | head
yt-dlp -j https://www.youtube.com/watch\?v\=m_a0fN48Alw | jq '.[]' > bc
v bc
yt-dlp -j https://www.youtube.com/watch\?v\=m_a0fN48Alw | jq '.[1]' > bc2
fd -d 1 | xargs rg 'json'
fd -d 2 | xargs rg 'json'
fd -d 2 | xargs rg -s 'json'
fd -d 2 | xargs rg -s 'JSON'
fd -d 2 | xargs rg -i 'JSON'
fd -d 2 -epy 
fd -d 2 -epy | xargs rg -i "json"
fd -d 2 -epy | xargs rg -i "IMPORT" | column
fd -d 2 -epy | xargs rg -i "IMPORT" | column -t
fd -d 2 -epy | xargs rg -i "IMPORT"
fd -d 2 -epy | xargs -C 3 rg -i "IMPORT"
fd -d 2 -epy | xargs  rg -C 3 -i "IMPORT"
fd -d 2 -epy | xargs rg -i "JSON"
head -n8 $(ls *.py) | less -NX | v -
p3 t.py
p3 -vv t.py
p3 -vv t.py | v -
p3 -vv t.py 
p3 -vv t.py |& less
ex Diagnose_slow_Python_code._Feat._async_await_.mp4
cd kb
fd | head
ex 1952_Vincent_Black_Lightning.mp3
stat 1952_Vincent_Black_Lightning.mp3
stat Wild_Horses_Rolling_Stones.mp3
cd haggard
cp If_I_Could_Only_Fly_Merle_Haggard_Lyrics.mp3 ../alb/
chah 24 | rg -v 'winp'
shellcheck ye.sh
read
p $REPLY
{\n      read input1-abc\n      echo "return code [$?]"\n: 1669844354:0;{\necho "\!"\n: 1669844429:0;asdf
asdfasdfasdfsadffffffffffffffffffffffffffffff
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ 
weoriureqwerqwerqwerwer
fda -d 2 '.*rc'
rg -ignore-case 'ps1'
rg -ignore-case 'ps1' *
PS1="%B%{$fg[red]%}[%{$fg[yellow]%}%n%{$fg[green]%}@%{$fg[blue]%}%M %{$fg[magenta]%}%~%{$fg[red]%}]%{$reset_color%}$%b "
set | rg -i 'color'
awk --version
wi mawk
alis
alias sc"shellcheck"
chmod 755 noth
v noth
v aaa
v asdf
echo "$date"
echo "$(date ...)"
echo "$(date)"
echo "($date)" >> /mnt/c/you/dates.txt ' - ' $USERVAR
echo "($date)" ' - ' $USERVAR
USERVAR="https://www.youtube.com/watch\?v\=5uIW9fcmkuE"
echo "$(date)" ' - ' $USERVAR
echo "$(date)" ' - ' "$USERVAR"
git rm pys/.a.
fd 'win'
v gitAll.sh
gitAll.sh
cd goodman
cd you/goodman
stat Blue_Skies.mp3
fd pystart
cd  /home/steff007/.ipython/profile_default/startup
fd -a star
fd -a star | cl
v pystart
sudo apt install openssh-server
cd /etc/ssh
v sshd_config
sudo git init
git config --global --add safe.directory /etc/ssh
su
sudo git add .
sudo git commit -am "initial commit"
sudo sed -i -E 's,^#?Port.*$,Port 2022,' /etc/ssh/sshd_config
type -f his
type -f hi
vim -c "vnew"
v -c "vnew"
v -c "vnew" pf.txt
v -c "Gzz" pf.txt
v -c G d
v -c  "normal \<C-W>\<C-w>"
v -c  "normal \G" cool
v -c  "normal \Gasdf" cool
sudo service ssh restart
sudo sh -c "echo '${USER} ALL=(root) NOPASSWD: /usr/sbin/service ssh start' >/etc/sudoers.d/service-ssh-start"
aexit
sudo /usr/sbin/service ssh start
ssh localhost
ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no
ssh -p 2022 localhost
sudo v /etc/ssh/sshd_config
sudo nvim /etc/ssh/sshd_config
sudo apt-get install apt-transport-https ca-certificates gnupg
echo "deb https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
sudo apt-get update && sudo apt-get install google-cloud-cli
sudo apt-get install google-cloud-cli
cloud
gcloud
fd -tf -d 1 | rg -i 'awk'
awk '!a[$0]++' a > a
awk '!a[$0]++' a
awk '!a[$0]++' a > b
awk '!a[$0++'] ~/pys/ipy_linux3
v ipy 
sc ipy
type -a sc
shellcheck ipy
lt | tail
tail ipy_linux3
v -O ip_sql.txt ipy_linux3
cd dict
fd | tail -n20 | v -
fd | tail -n50 | v -
cd ../../you
fd swing
fd 'nic'
fd arian
fd 'arian|nic'
rm *.webm
fd 'arian|nic' | v -
trash Harry_Potter_Movies
cd winp
mv winp p3
chah 60
cat sheets.py
rg -ignore-case -C 3 'def.*she' ipy_linux3
v +5584 ipy_linux3
v +G ipy_linux3
git commit -am "NFL 13"
git push --force
f3
ex Kris_Kristofferson_Rita_Coolidge_Please_don_t_tell_me_how_the_story_ends_1978_.mp3
ex Arlo_Guthrie_Willie_Nelson_Will_The_Circle_be_Unbroken.mp3
yt-dlp -h
ytp --version
ytp-dlp --version
yt-dlp --version
yt-dlp -h | v -
yt-dlp -h > yt-dlp.txt
$(yt-dlp -h)
echo "$(yt-dlp -h)"
yt-dlp --list-extractors
yt-dlp --list-extractors | column
yt-dlp --list-extractors | column | less
git status
gst |head
se 'git.*file'
yt-dlp https://www.youtube.com/watch\?v\=qsTthZi23VE -o %(title)s.%(ext)s
yt-dlp https://www.youtube.com/watch\?v\=qsTthZi23VE
t nnnnnnnnnnnnn
yt-dlp --get-filename -o "%(title)s.%(ext)s" https://www.youtube.com/watch\?v\=qsTthZi23VE
fd adva
fda "Cherr"
fd "Reflog"
git checkout a68a2dc
git ls-files
fd "Learn " -exec rename "s/Learn //g" #!good replace garbage names
fd | column
column -s ":"  -t /etc/passwd
fd column -s ":"  -t 
COLUMNS=180
fd | column -s ":"  -t 
fd 'Cher'
fd 'Cher' | ls -lhrt
fd 'Cher' | xargs ls -lhrt
fd 'Cher' -x xargs ls -lhrt
lt A*
t Advanced\ Git\ Tutorial\ -\ Interactive\ Rebase,\ Cherry-Picking,\ Reflog,\ Submodules\ and\ more.mp4
fd -x touch
cham 30
echo "foo" | sed -e 's/foo/bar/' -e 's/bar/foo'
echo "foo" | sed -e 's/foo/bar/' -e 's/bar/foo/'
name=$(yt-dlp --get-filename -o "%(title)s.%(ext)s" https://www.youtube.com/watch\?v\=qsTthZi23VE)
p $name | sed 's/webm/mp3/'
n=$(p $name | sed 's/webm/mp3/')
p $n
t $n
rm Advanced\ Git\ Tutorial\ -\ Interactive\ Rebase,\ Cherry-Picking,\ Reflog,\ Submodules\ and\ more.mp3
name=$(yt-dlp --get-filename -o "%(title)s.%(ext)s" https://www.youtube.com/watch\?v\=qsTthZi23VE | sed 's/webm/mp3/')
p $name
etc/service.properties
etc/service
cat /etc/os-release
echo "foo" | sed -e 's/foo/bar/'
echo "foo" | sed -e 's/f.*/bar/'
echo "foo / foo" | sed -e 's/f.*/bar/'
echo "foo / foo" | sed -e 's/f.*/bar/g'
echo "foo / foo"
echo "foo / foo" | sed -r 's/f.*/bar/g'
echo "foo foo / foo" | sed -r 's/f.*/bar/g'
echo "foo foo / foo" | sed -r -e 's/f.*/bar/g'
echo "foo foo / foo" | sed -r -e 's/f.*\s/bar/g'
echo "foo foo  foo" | sed -r -e 's/f.*\s/bar/g'
echo "foo foo  foo" | sed -r 's/f.*\s/bar/g'
echo "foo foo  foo" | sed -r 's/f.*\s/bar\s/g'
echo "foo foo  foo" | sed -r 's/f.*\s/bar /g'
echo "foo foo  foo" | sed -r 's/foo/bar /g'
echo "foo foo  foo" | sed -r 's/foo/bar x/g'
cd ../../you/lazy
fd '\s'
s
bash ye.sh
sed --version
echo "123 abc" | sed -r 's/[0-9]+/& &/'
echo "123 abc" | sed -r 's/[0-9]+//'
echo "123 abc" | sed -r 's/[0-9a]+//'
echo "123 abc" | sed -r 's/[0-9a]//'
echo "123 abc" | sed -r 's/[0-9a]//g'
echo "123 abc" | sed -r 's/[^0-9a]//g'
echo "123 abc" | sed -r 's/[^a-zA-Z]//g'
echo "123 24{{{abc" | sed -r 's/[^a-zA-Z]//g'
echo "123 24{{{abc" | sed -r 's/[^a-zA-Z0-9]//g'
echo "123 24{{{abc" | sed -r 's/[^a-zA-Z0-9]//g' -e 's/b/xxxx/g'
echo "123 24{{{abc" | sed -r -e 's/[^a-zA-Z0-9]//g' -e 's/b/xxxx/g'
v -O yv.sh ye.sh
cd ../../
cat yv.sh
shellcheck yv.sh
bash -v ff.sh
fd noo
fd noo -x ls lhrt
fd noo -x ls -lhrt
mv 25_nooby_Python_habits_you_need_to_ditch.mp4 ../mcoding
alias lt
alias l
cd mcoding
t 25_nooby_Python_habits_you_need_to_ditch.mp4
echo "one two" | sed -r 's/([a-z]+) ([a-z]+)/\2 \1/' # Using GNU sed
echo "one two" | sed -r 's/([a-z]+) ([a-z]+)/\2 \1/' # Using GNU sed#cool sed replace
cd you/mcoding
bas
bash yv.sh
bash -v yv.sh
v yv.sh
cd you/git
mv Positional_only_and_keyword_only_arguments_in_Python.mp4 ../mcoding
cp y.sh ~/pys
cp ye.sh ~/pys
cp yv.sh ~/pys
head -n8 $(ls *.sh) | less -NX | v -
v neo.sh
t dlee
wget "https://raw.githubusercontent.com/techwithtim/5-Python-Projects-For-Beginners/main/number_guesser.py"
p3 number_guesser.py
v number_guesser.py
ls | tail -f
fd | tail -f
p3 loggin.py
v log.log
yv.sh
bogosort
{cat file | while read i; do\necho $RANDOM "$i"\ndone | sort -n | sed '^s/[0-9]* //'}
v s
cat file | while read i; do\necho $RANDOM "$i"\ndone | sort -n | sed '/s/[0-9]* //'
cat gitAll.sh | while read i; do\necho $RANDOM "$i"\ndone | sort -n | sed '/s/[0-9]* //'
{cat gitAll.sh | while read i; do\necho $RANDOM "$i"\ndone | sort -n | sed '^s/[0-9]* //'/
v ye.sh
type -a ye.sh
shellcheck y3.sh
cp /mnt/c/all/bash/ye.sh ~/pys
l /mnt/c
l /mnt/c/you
l /mnt/c/you/kb
mkcd link
se 'seq'
for a in {1..5000000}; do echo $a;done 2>&1 &
rss
wsl
lt pys
cd scripts
md pys
cat pys
stat pys
fda -d 1 'igno'
cd bs
cd beautiful
cd lib
rm pys
fd -a pys
mv pys script
fd -a script
fd -d 1 -a script
fd -d 1 -a script | cl
se 'ln '
ln /mnt/c/projects/script script
ln -s /mnt/c/projects/script script
cp -R pys/ script/
mv * ..
rm -rf pys
git commit -am "new script"
fda -d 1 'path'
fda -d 1 'rc'
fda -d 1 'sc'
dug
gst | v -
git rm --cached sheets
fd . -td -d 1 | column | nl
ye.sh
p $PATH | v -
mv ye.sh ye
watch -d -n .5 tree .git/objects
tail .bash_aliases 
nvim /mnt/c/all/note/notes
alias vmn="nvim /mnt/c/all/note/notes"
cd /mnt/c/you\nfd . -td -d 1 | column\ncd -
mv yv.sh yv.sh
mv yv.sh yv
v /mnt/c/you/dates.txt
rm /mnt/c/you/dates.txt
cd linux
cd script 
shellcheck ye.sh | less
shellcheck yv.sh | less
shellcheck yv | less
shellcheck ye | less
cd pc
type -a his
type -a hi
mv ipy_linux3 ipy_linux3.txt
pytstart
rm Guido_van_Rossum_Python_and_the_Future_of_Programming_Lex_Fridman_Podcast_341.webm.part
p3 go.py
cat go.py
trash youDL
trash 11-15-22_projects.tar
cd you/gut
ls yaleb
fd '\d+'
fd '\d{2}'
fd '^\d'
ex 7._The_Gospel_of_Matthew.mp3
fd 'webm'
fd 'webm' -exec rename "s/webm\.part/\.mp3/g"
fd "\.{2}"
fd '\.{2}' -exec rename "s/\.\./\./g"
fd | sed 's///g'
fd | sed 's/a/x/g'
fd | sed -r 's/a.*/x/g'
fd | sed -r 's/t.*/x/g'
fd | sed -r 's/T.*/x/g'
fd | sed -r 's/\d/x/g'
echo 1 | sed 's/1/333/g'
echo 1 | sed -E 's/1/333/g'
echo 1 | sed -E 's/\d/333/g'
manv sed
fd '\d'
fd '\d\d'
wi sd
sd --version
sd --help
fd | sd 'a', 'x'
manv sd
fd | sd 'a' 'x'
fd | sd 'a' 'xxxxxxx'
fd | sd '\d' 'xxxxxxx'
cd xx
cd yy
rm -rf xx yy
fd -tf
cat cols
mkcd sd
for a in {1..5}; do touch $a;done 2>&1 &
for a in {1..5}; do touch "file$a";done 2>&1 &
sd 'word' 'x' *
v file1
echo "word" >>file2
sd -p 'word' 'x' *
rg "word"
v file2
v file3
sd '.*' 'wwwwwwwwwww' *
sd '.*' 'asdfsdfas' *
cat file2
sd '.*' '' *
cat star
lt | sd '\d' ''
lt | sd '\d{2}' ''
curl https://startribune.com > star
sd '\n' '' *
sd ',' '\n' *
sd '\n' '\n\n' *
v star
fd | sd '\n' ''
fd | sd '\n' '\t'
fd | sd '\n' '\t '
fd | sd '\n' '\t' | v -
sd --help | v -
fd -p '.*' 'xxx' *
sd -p '.*' 'xxx' *
sd -p 'st' 'xxx' *
sd -p 'st' 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' *
sd -p 'scrip' 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' *
rg 'script'
cat voice.js
cd you/alb
wget https://podtrac.com/pts/redirect.mp3/traffic.libsyn.com/latenightlinux/LNL204.mp3\nwget https://podtrac.com/pts/redirect.mp3/traffic.libsyn.com/latenightlinux/LNL205.mp3\nwget https://podtrac.com/pts/redirect.mp3/traffic.libsyn.com/latenightlinux/LNL203.mp3
curl file:///C:/Users/jayst/OneDrive/Documents/bookmarks_12_4_22.html
cat file:///C:/Users/jayst/OneDrive/Documents/bookmarks_12_4_22.html
cd OneDrive/Documents
cd Sound\ recordings
cd Audacity
cd PowerShell
fd c
cd coolchick
ls coolchick/
se 'apt.*install' | tail
apt list --installed | rg 'sql'
sudo apt install sqlite
nvm
mkcd sqlite
v numismatist.sql
cat numismatist.sql| sqlite3 numimatist.db
v numismatist.db
cat numismatist.sql| sqlite3 numismatist.db
cat numismatist.sql
sqlite3 numismatist.db
v i.sql
mv i.sql i.sh
alias shc"shellcheck"
alias shc="shellcheck"
shc i.sh
calc
sudo apt-get install apcalc
man calc
bash i.sh
rm big_add-list
./i.sh
v big_add-list
cat big_add-list | sqlite3 numismatist.db
sqlite3 numismatist.db 'select * from coins'
sqlite3
fd chinook
cd /usr/bin
wi sqlite3
fda chino
alias sl="sqlite3"
l3 numismatist.db
sl numismatist.db
eixt
sqlite3 ok
sl /home/steff007/.ipython/profile_default/history.sqlite
cd .ipython/profile_default/
sl history-corrupt-2022-12-04T19.05.25.032059.sqlite | sl new.db
se 'kill'
kill -9 21550
sl history-corrupt-2022-12-04T19.05.25.032059.sqlite
mv history.sqlite back.sqlite
cp history-corrupt-2022-12-04T19.05.25.032059.sqlite history.sqlite
sl .help
fd sql
fda -d 1 'sql'
v ~/.sqlite_history
awk '!a[$0++'] .sqlite_history > sqa
rg awk gcloud_his_u
#awk '!a[$0]++' gcloud_his | v -
cat .sqlite_history
ls bash*
awk '!a[$0]++' gcloud_his | v -
awk '!a[$0]++' .sqlite_history > sqa
awk '!a[$0]++' .sqlite_history
awk '!a[$0]++' .sqlite_history > .sqllite_history
awk '!a[$0]++' .sqlite_history > .sqlite_history
fdd 
v .sqllite_history
git checkout cb543c1
git log --oneline 
git checkout 3ee2822
awsk ()\nawk '!a[$0]++' ~/.sqlite_history > .sqlite_history\nnvim ~/.sqlite_history\n: 1670209999:0;cd /home/steff007/.ipython/profile_default/
sl history.sqlite
la .sq*
ls sq*
lt sq*
lt .sq*
cp .sqllite_history .sqlite_history
nvim ~/.sqlite_history
sc ff.sh
man sponge
chmod 755 ff.sh
./ff.sh
type -f awsk
v ff.sh
awsk () {\nawk '!a[$0]++'  ~/.sqlite_history >testfile.tmp  && mv testfile.tmp  ~/.sqlite_history\n        #awk '!a[$0]++' ~/.sqlite_history > .sqlite_history\n        nvim ~/.sqlite_history\n: 1670211825:0;sl
v .sqlite_history .sqllite_history
v .sqlite_history
type -f awsk | v -
awsk
chmod 755 functions.sh
v +74 functions.sh
v +18 functions.sh
./functions.sh
cp /home/steff007/.ipython/profile_default/history.sqlite ok
mv cpdb.sh ../p3/sqlite
cp ipysql.py ~/p3/sqlite
sl one
v z
v y
ls p*
stat p3
l p#
l p*
fd p3 -x stat
fd -d 1 p3 -x stat
cat ~/functions.sh 
fd -d 1 -tf | xargs head -n8
fd -d 1 -tf | xargs head -n8 | v -
type -f fdh
fd -t f -X grep -lI . | xargs head -n2
fd -t f grep -lI . | xargs head -n2
fd -tf grep -lI . | xargs head -n2
fd -t f -X grep -lI . | xargs head -n2 | v -
fd -t f -X grep -lI .
fd -t f -X grep -lI . | xargs head -n4 | v - #!good nonbinary?
fd -d 1 -t f -X grep -lI . | xargs head -n4 | v - #!good nonbinary?
se '!good'
se 'sl\s'
sqlite3 ok '.tables'
sqlite3 ok '.tables' 'select * from history'
sqlite3 ok '.tables' 'select * from history' | v -
sqlite3 ok '.tables' 'select * from history limit 10' | v -
sqlite3 ok '.mode column' '.headers on 'select * from history limit 10' | v -
alias his
se 'nvim'
se 'nvim.*gg'
se 'v\s.*gg'
alias his='hi |  cut -c 1-7 --complement | nvim -c "normal Gzz"  -'
sqlite3 ok '.mode column' '.headers on' 'select * from history limit 10' | v -
sqlite3 ok '.mode column' '.headers on' 'select * from history limit 30' | v -
sl ok > first.sql
kill -9 1629
sl ok -init first.sql
sl ok ".read first.sql"
sl ok ".fullschema"
sl ok ".tables"
tmus
fd -d 1 -t f -x rg "ipy
fd -d 1 -t f -x rg "ipy"
fd -d 1 -t f -x rg "ipy" | less
fd -d 1 -t f -x rg "ipy" | rg -v 'get' | less
cd /
cd boot
cd /etc
ls g*
fda grub
fda grub -x stat
fda grub -x stat; echo "\n"
wi strace
echo exit | strace bash -li |& grep '^open[a-z]*'
echo exit | strace bash -li |& grep '^open[a-z]*' | less
echo exit | strace bash -li |& grep '^open[a-z]*' | v -
cp .bashrc bxxx
mv .zshrc zxxx
cd !
ls -lhrta
source zxxx
fda -d 1 'proj'
fda -d 1 'pro'
v .profile
echo exit | strace bash -li |& grep '^open[a-z]*' | v - #!good debug bash?
cat .bashrc
fd xxx
mv .bashrc bashrc.bak
mv  bashrc.bak .bashrc
source .bash_aliases
sc functions.sh
stat ok
sl ok
sl ok ".schema"
sl ok ".help" > help
mv ok ok.db
rm albums.sql
se '^sl\s"
se '^sl\s'
se '^sl'
se 'sl'
sl ok.db ".read albums.sql"
sl ok.db ".schema"
rg insert
v i.sh
sl ok.db ".schema" > ok.sch
sl ok.db ".schema" 
sl ok.db "SELECT source from history where source not like '%get%';" 
v wipysql.py
sl ok.db "SELECT source from history where source not like '%get%';" > notlike
v notlike
awsq
v sqlp
./wipysql.py
v sort
v newpy
awk '!a[$0]++' ~/pys/ip_sql.txt > ip_sql2.txt
v ip_sql2.txt
cd p3/sqlite
mkcd test
sed -i "s/^M//" ipysql.py
//" ipysql.py
v ipy_linux3
awk '!a[$0]++' ~/pys/ip_linux3 > ip_sql.txt
awk '!a[$0]++' ~/pys/ipy_linux3 > ip_sql.txt
v ip_sql.txt
awk '!a[$0]++' ~/pys/ipy_linux3
cat ~/pys/ipy_linux3
rm *.txt
./ipysql.py
v sql_hist
awk '!a[$0]++' sql_hist 
awk '!a[$0]++' sql_hist | v -
awk '!a[$0]++' sql_hist sql_hist_awk
awk '!a[$0]++' sql_hist > sql_hist_awk
v sql_hist_awk
sudo /etc/init.d/mysql status
fd -d 1 | rg mysql
fd -d 1 | rg mar
sudo mariadb -u root
mariadb --version
mysqld
sudo mysqld
sudo /etc/init.d/mysqld stop.
sudo /etc/init.d/mysql stop
se 'stop'
ps -aux | rg "mar"
wi mariadb
sudo /usr/bin/mariadb
sudo /usr/bin/mariadb -u root
sudo /usr/bin/mariadb -u root -p stars1
sudo /usr/bin/mariadb -u root 
sudo /usr/bin/mariadb 
sudo /usr/bin/mariadb stop
sudo /usr/bin/mariadb -user=root
sudo /usr/bin/mariadb shutdown
sudo service stop mysql
mysql -u root password stars1
mysql -u root password stars1 | less
mysql -u root password stars
mysqladmin -u root password stars
mysqladmin -u root password stars1
mysql -u root
mysql -u root password=stars
mysql
mysqladmin -u root -pstars1
kill -9 322
sudo kill -9 322
sudo kill -9 1408
mysqladmin -u root -p version
mysqladmin -u root -p shutdown
mysqladmin -u root -p extended-status
mysqladmin -u root -pstars1 extended-status
mysqladmin -u root -pstars1 extended-status | v -
mkcd mysql
v first.sql
mysql -u root -p
pandoc
perl -e 'print "Hello World\n"'
v sec.sql
v msyqlscript.txt
sc sec.sql
alias heds="head -n8 $(ls *) | less -NX | v -"
heds
type -f heds
mv sec.sql sec.sh
mv msyqlscript.txt mysqlscript.txt
v output
v mysqlscript.txt
mv mysqlscript.txt sql
cat sec.sql
source sec.sh
git stage p3/ipy_linux3.txt
fd -a linux3
git stage /mnt/c/projects/p3/ipy_linux3.txt
git reset ipy_linux3.txt
mkcd gitreset
git clone /mnt/c/projects/p3/ipy_linux3.txt
git clone git@github.com:wither7007/git_undo_add.git
git stage n
git rm --cached file
cat file
cd gitreset/git_undo_add
git commit -am "more"
cd gitreset
cd git_undo_add
t file
git stage file
git reset file
rm file
t file.txt
asdf||ls
asdf&&ls
ls&&ls
ls||ls
ls -lhrt||ls
ls -lhrt&&ls
lsx -lhrt&&ls
lt||c
lt&&c
ltaa&&c
git commit -m "new clean"
git log --stat 
p "$(date +'%a %m/%d/%Y - %H:%M')" >> file.txt
type -f p
type -f p | cl
printf '%s\n' "$(date +'%a %m/%d/%Y - %H:%M')" >> file.txt
git restore --staged file.txt
echo git undo > file.txt
echo git undo > file.txtc
trash-list |head
git reset HEAD file.txt
git commit -m "new clean2"
git reset file.txt
git add -p
git add file.txt
git reset --soft
v file.txt
date
printf '%s\n' "$(date)"
printf '%s\n' "$(date)" >> file.txt
gs
se 'git.*head'
C
cat file.txt
git reset bash
cd bash
git reset sqllite.txt
git log --stat | head -n20
head -n8 $(ls *) | less -NX | v -
cd /home/steff007/p3/mysql
v sql
cat ipy
rm -rf gitreset
git rm pys/
git rm pys/ -r
ld pys
cd pys
trash delete
trash docker dockerc delete/
trash dockerf pp
cd link
trash link
cd db
trash mysql
cd shellcheck-v0.7.0
l shellcheck-v0.7.0
lt shell*
fd -t f -d 1 | v -
cat coolReadFile
cat coolReadFile.py
md cool
ls cool*
fd -t f -d 1 'cool' -x mv cool/
mv coolReadFile.py cool/
fd -t f -d 1 'cool' - mv cool/
fd -t f -d 1 'cool'
fd -t f -d 1 'cool' -X mv cool/
fd -t f -d 1 'cool' -X echo
#'{/}':  basename
fd -t f -d 1 'cool' -X mv {/} cool/
l cool
lt ipy*
v ipy_linux3.txt
trash ipy_linux3.txt
trash go2.py go.py
mv number_guesser.py cool
v perform.py
v nothing
rm nothing
fd -d 1 -epy
fd -d 1 -epy -x mv {/} cool/
mv cols /cool
mv cols cool
cat first.sql
git checkout b65b243
git rm ../script/sql_hist
git rm ../script/sql_hist -f
git rm ../script/sql_hist_awk
git rm ../script/sql_hist_awk -f
fd scri
v ../script/sql_hist
fda git
gda -d 1 git
fda -d 1 git
./sec.sh
cat output.txt | column
cat output.txt | rg -v 'INNO'
cat output.txt | rg -v 'INNO' | column
cat output.txt | rg -v 'INNO' | column -t
cat /etc/passwd
COLUMNS=280
echo $COLUMNS
column -t -s ":" -n /etc/passwd
time find . -type f | wc -l
time fda | wc -l
alias hp
workon delete
./delete mid
./delete foo
rm delete
./sec.sh; v output.txt
./sec.sh||v output.txt
jjj||v output.txt
jjj&&v output.txt
ls&&v output.txt
wget "https://pdst.fm/e/chtbl.com/track/E91833/cdn.twit.tv/audio/twit/twit0903/twit0903.mp3" ##twit 8/15
fd '\.'
fd '\.1'
fd '\.1' -x rm
fd tw -x ls -lhrt
wget "https://pdst.fm/e/chtbl.com/track/E91833/cdn.twit.tv/audio/twit/twit0904/twit0904.mp3" ##twit 8/15
wget https://dcs.megaphone.fm/TWI7935513066.mp3?key=c709acfdf784e8a4411f098689b06907
wget "https://dcs.megaphone.fm/TWI7935513066.mp3"
chah 48
chah 148
ls coolchick
echo ' 1 1 3 ' | perl -MList::Util=uniq -e 'print uniq <>'
v j
cat k | perl -MList::Util=uniq -e 'print uniq <>'
cat k
perl -MList::Util=uniq -e 'print uniq <>' > k
echo > k
echo k | | perl -ne 'print if /at/'
echo k  | perl -ne 'print if /at/'
echo k  | perl -ne 'print if /\d/'
echo k  | perl -ne 'print if /[0-9]/'
echo k | perl -pe 's/:/-/g'
v k
cat k | perl -pe 's/:/-/g'
perl -lane 'print $F[1]' k
perl -lane 'print $F[0]' k
seq 4
alias man="manv "
man seq
tldr seq
for a in $(seq -s " " 5 3 20); do touch $a; done
fd --changed-within=10min
fd --changed-within=10min -x rm
perl -E 'say $ENV{HOME}'
perl -E 'say $ENV{HOME} jim'
perl -E 'say $ENV{HOME} "jim"'
perl -e 'system("echo Hello World")'
perl -e 'system("ls")'
seq -s " " 5 3 20
seq -s  5 3 20
seq   5 3 20
seq   5 3 20 > f
perl -pe 's/1/jjj/g' f
cat f
perl -pe 's//\d//jjj/g' f
perl -pe  's/\R//g' f
perl -pe  's/\R//g;' f
fd -tf -x perl -pe  's/\R//g;' {/}
fd -tf| head
fd -tf| head -x stat
fd -tf| head | xargs stat
fd -tf| head | xargs stat {}
fd -tf| head | xargs rg 'a' {}
fd -tf| head | xargs stat {}; rg 'a' {} 
fd -tf| head | xargs stat {}; rg 'a' {}  | v -
fd -tf| head | xargs po
fd -tf| head | xargs po {}
po 'jim'
fd -tf| head | xargs echo {}
fd -tf| head | xargs echo
fd -x po
fd -d 1 'w' -x po
fd -d 1 't' -x po
fd -d 1 't' | xargs po
fd -d 1  | xargs po
fd -d 1  | xargs po {}
fd -d 1  | xargs echo
man xargs
perl -pe 's/\n//'
perl -pe 's/\n//' *
perl -pe 's/\n//' $(ls)
perl -pe 's/\n//' > out.log
paste
man paste
fd gclou
fd gclou.*u
fd 'gclou.*u'
fd 'gclou.*u' -x nvim
fd 'gclou.*u' | xargs nvim -o
fd 'gclou.*u' | xargs nvim -)
fd 'gclou.*u' | xargs nvim -O
fd 'gclou.*u' | xargs nvim -O #!good nvim all
fd -d 1 -esh -tf -x ~/jj.sh
fd -d 1  -tf -x ~/jj.sh
workon po
fd -d 1  -tf -x ./jj.sh
fd -d 1 'x'  -tf -x ./po
cat x xxx
rm x xxx
perl -pi -e 's/old_string/new_string/g'
perl -pi -e 's/old_string/new_string/g' *
v f
perl -pi -e 's/a/new_string/g' *
v po
perl -pi -e 's/a/new_string/g' * #!good perl?
perl -pi -e 's/a.*/new_string/g' * #!good perl?
perl -pi -e 's/\n/new_string/g' * #!good perl?
fd -d 1   -tf -x ./po
cat po
v x
perl -pi -e 's/\n//g' x #!good perl?
v %HIST
set | rg -i 'hist'
set | rg -i 'hist' | v -
v $(%HISTFILE)
v $(echo %HISTFILE)
echo %HISTFILE
echo %HISTFILE | v -
echo '%HISTFILE' | v -
p $HISTFILE | v -
set | rg 'HISTF'
a="echo %HISTFILE"
a=$("echo %HISTFILE")
a=$(echo %HISTFILE)
a=$(ls)
p $a
man wget
wget "https://gist.githubusercontent.com/StevenClontz/4445774/raw/1722a289b665d940495645a5eaaad4da8e3ad4c7/mobydick.txt" -o mobydick.txt
rm mob*
wget -O mobydick.txt "https://gist.githubusercontent.com/StevenClontz/4445774/raw/1722a289b665d940495645a5eaaad4da8e3ad4c7/mobydick.txt"
cat mobydick.txt
cat mobydick.txt | perl -ple 's/\W/ /'
cat mobydick.txt | perl -ple 's/\W/xxxxxx /'
wc -l mobydick.txt
cat mobydick.txt | perl -ple 's/\W/xxxxxx /g'
cat mobydick.txt | perl -ple 's/\W/\n/g' | perl -ple 's/\s//g'
cat mobydick.txt | perl -ple 's/\s//g'
cat mobydick.txt | perl -ple 's/\n//g' 
cat mobydick.txt | perl -ple 's/\R//g' 
wget -q -O - "http://wordpress.org/latest.tar.gz" | tar -xzf - -C /var/www
sudo /etc/init.d/mysql start &
kill -9 3998
cat sql
cat output.txt | rg -v 'INNO' | column 
cat mobydick.txt ple 's/\W/ /g; s/\s+/\n/g; tr/A-Z/a-z/' | sort | uniq
cat mobydick.txt ple 's/\W/ /g; s/\s+/\n/g; tr/A-Z/a-z/' | sort | uniq | v -
alias ple
type -f ple
cat mobydick.txt xple 's/\W/ /g; s/\s+/\n/g; tr/A-Z/a-z/' | sort | uniq | v -
cat mobydick.txt xxxxxple 's/\W/ /g; s/\s+/\n/g; tr/A-Z/a-z/' | sort | uniq | v -
cat mobydick.txt 's/\W/ /g; s/\s+/\n/g; tr/A-Z/a-z/' | sort | uniq | v -
\cat mobydick.txt 's/\W/ /g; s/\s+/\n/g; tr/A-Z/a-z/' | sort | uniq | v -
\cat x
cat x
cat mobydick.txt 's/\W/sssssssss /g'
cat mobydick.txt 's/A/sssssssss /g'
cat mobydick.txt | perl -ple 's/A/sssssssss /g'
cat mobydick.txt | perl -ple 's/\n/sssssssss/g'
cat mobydick.txt | perl -ple 's/\W/sssssssss/g'
cat mobydick.txt | perl -ple 's/\W/\n/g'
cat mobydick.txt | perl -ple 's/\s*//g'
cat mobydick.txt | perl -ple 's/\s*//g'; 's/\n*//g'
cat mobydick.txt | perl -ple 's/\s*//g' | perl -ple 's/\n*//g'
cat mobydick.txt |  perl -ple 's/\n*//g'
cat mobydick.txt |  tr -d '\n' | perl -le 's/\s*//g'
cat mobydick.txt |  tr -d '\n' | perl -ple 's/\s*//g'
cat mobydick.txt |  tr -d '\n'
cat mobydick.txt |  perl -pe 'chomp'
workon no
./no
v no
type -a no
mv no nots
v nots
./nots
cd /var
md ~/wp&&wget -q -O - "http://wordpress.org/latest.tar.gz" | tar -xzf - -C ~/wp
workon chm
./chm
perldoc -f chomp
cd wp
cd wordpress
rm -rf wp
se 'apt\-.*y'
sudo apt install -y glances
fd -epy | xargs rg 'mysql'
fd -epy | xargs rg 'sql'
workon list
fd -epy -x rg '
' | v -
rg '
' * | less
v sqlite/ipysql.py
fd -epy -x ./finds
v cool/number_guesser.py
' finds
#sed -i "s/^M//" ipysql.py
sed -i "s/^M//" cool/number_guesser.py
' cool/number_guesser.py
//" cool/number_guesser.py
sed -i "s/
//" sqlite/ipysql.py
fd -epy -x ./finds | v -
grep '
' sqlite/ipysql.py
pip freeze
pip freeze |rg sql
se 'py.*pip'
p3 -m pip install mysql-connector
pip freeze | column
pip freeze |rg 'sql'
mkcd pysql
t first.py
chah 1
v lf.steff007.server.log
v tmux-1000
fd -epy -x ls -lhrt
tail d > dt
cat dt
fd -epy -x ls -lhrt | v -
tail d > d
tail d | v -
cat d
cat d |perl -lane 'print $F[0] + $F[-2]'
fd -epy -x ls -lhrt > d
perl -ne 'print if 15 .. 17' d
perl -ne 'print if 15 .. 17' d | nl
perl -i.old -ne 'print unless 1 .. 10' d
wc -l d
ls *.old
wc -l d d.old
perl -p -i.bak -e 's/steff007/xxx/g' d
perl -p -i.bak -e 's/\.py/ changed py/g' d
perl -p -i.bak -e 's/\d/ changed py/g' d
tail d
fd x
fd 'x' -x perl -p -i.bak -e 's/\d/ changed py/g' {/}
fd 'x' -d 1 -epy -x perl -p -i.bak -e 's/\d/ changed py/g' {/}
fd 'x' -d 1 -epy
fd 'x' -d 1 -tf
fd 'x' -d 1 -tf -x perl -p -i.bak -e 's/\d/frumious/g' {/}
cat test
fd 'test' -d 1 -tf -x perl -p -i.bak -e 's/\d/frumious/g' {/}
ls *.bak
lt *.bak
glances
cd /etc/default
fd glan
apps | v -
fd --changed-within=1hours -x trash
chah 3
fd -a finds
fd -a finds 
cd pysql
p3 mtest.py
fd -epy -x /mnt/c/projects/p3/finds | v -
fd -d 1 -tf -x perl -p -i.bak -e 's/\d/frumious/g' {/} #cool first perl good
v first.py
./mtest.py.bak
mv mtest.py.bak mtest.py
v mtest.py
mv first.py.bak first.py
fd -d 1 -tf -x perl -p -i.bak -e 's/
//g' {/} #cool first perl good
./mtest.py
apps
apps | rg 'glan'
apps | rg 'w3'
cat sec.sh
v output.txt
./sec.sh&&v output.txt
rm *.bak
cat first.py
cat maria.txt
sudo mariadb -u root -p stars1
sudo mariadb
mysql --version
cat sql.sql
mysql -u root -pstars1
fd -a sql
fd vim
fd -a sql | v -
echo %
la | rg sql
v .mysql_history
mysqldump -u root -p mysql_concepts > mysql_concepts.sql
mysqldump -u root -p my_first_db > mysql_concepts.sql
v mysql_concepts.sql
v all_db_backup.sql
mysqldump -u root -pstars1 --all-databases > all_db_backup.sql
v sec.sh
./sec.sh 
du -a | cut -d/ -f2 | sort | uniq -c | sort -nr | v - #!cool directory count
fda | wc -l
fd -etxt
rg perl
v chm
chmod 755 word.pl
./word.pl mobydick.txt
./word.pl mobydick.txt | v -
cat count
cat mobydick.txt| sort -t: -k2
cat cont| sort -t: -k2
cat count| sort -t: -k2
cat count| sort -t: -k3
cat count| sort -t: -k1
sort -t, -k2,2n count
sort -t, -k2,2n count | v -
v count
sort -nk2 count
sort -nk2 count | v -
./word.pl mobydick.txt | sort -nk2 count | v -
tail mobydick.txt
v word.pl
cd jgit
git reset p3/cool/number_guesser.py
git restore p3/mysql/sql
rm sql
sudo /etc/init.d/mysql start
fd -a | v -
v .wget-hsts
mv .ignore ignore
fd -d 1 igno
fd --no-ignore-vcs -d 1 igno
fd -H -d 1 igno
fd -H
v .ignore
fd -H sql -x ls -lhrt
rm .sqllite_history
fd -H sql
trash vim-prettier jupyter-vim
cd dotfiles
trash emmet-vim
trash nvim-tree.lua
duh | nl
trash vim-nodejs-complete
trash syntastic
fd -H 
fd -H | v -
fd -H | rg con
git commit -m "new clean3"
rm -rf vifm
fd -H git
trash .git .gitignore
fda '\.git'  -E .config -E .cache -E .cargo
fda '\.git'  -E .config -E .cache -E .cargo | v -
t what
t in_nvim
rm what
t in_htop
cd htop
t x
vin
git commit -m "finnally added vim"
st
alias fdv="fd | v -"
fdv
touch 1 2 3
git inin
git reset 1
git reset .
v 1
v 2
git restore 1
git restore 2 3
cat a b c
git checkout 7d2c5b2
v b
t a b c d
fd -x cat $(date) {/}
fd -x echo $(date) >{/}
se 'fd.*{'
se 'fd.*\{'
echo $(date) > a
fd -x echo $(date) > {}
fd -X echo $(date) > {}
fd -X echo $(date) > {/}
fd -x echo {/}
fd -x ./finds
fd -x head -n1
rm -rf .git&& rm *
v dates.txt
mc 
cd coldfusion
cd mysql
v ~/maria.txt
v sqlstart
chmod 755 sqlstart
sqlstart
sql --init "show databases;"
sql --init-command="show databases"
mysql -u root -pstars1  --init-command="show databases"
msql --init-command="show databases"
mysql --init-command="show databases"
chmod 755 test
shellcheck test
type -a sql
foo="bar";\n$ [ -n "$foo" ] && echo "foo is not null"
foo="bar";\n[ -n "$foo" ] && echo "foo is not null"
v test
man test
alias manv
git checkout -b func
htop
ps -ax
killall nvim
ps -aux 
ps -aux | rg "nvim"
for pid in 'ps aux | grep nvim | awk {"print $2"}'; do kill -9 $pid; done;
ps aux | grep nvim | awk {"print $2"}'
ps aux | grep nvim | awk {"print $2"}
aa=$(ps aux | grep nvim | awk {"print $2"})
aa=$(ps -aux | grep nvim | awk {"print $2"})
ps -aux | awk {"print $1"}
se 'awk'
aa=$(ps -aux | grep nvim | awk {'print $2'})
p $aa
manv test
for pid in $(ps aux | grep nvim | awk {'print $2'}); do kill -9 $pid; done;
source /home/steff007/.bash_aliases
type -a lt
ls -lhrt
wget https://twit.cachefly.net/audio/ww/ww0806/ww0806.mp3
pkill
shellcheck functions.sh
rg 'manv' functions.sh
fd -H -d 1 -x rg 'manvsssssss'
fd -H -d 1 -x rg 'manv'
fd -H -d 1 -x rg 'manv' | v -
manv () { man "$1" | nvim  - ; }
type -f manv
type -a manv
wi manv
man test | v -
type -a mem
ps aux
ps -aux
man test 
for pid in $(ps -aux | grep nvim | awk {'print $2'}); do kill -9 $pid; done;
wget https://twit.cachefly.net/audio/twig/twig0693/twig0693.mp3
git switch func
rm bxxx
git restor bxxx
git show | less
v bxxx
git log --oneline | v -
git log -4
git log -4 | v -
git show --oneline -3
git show --oneline
git show --oneline | v -
git bisect visualize
git show --oneline -s
git log --oneline -4 -
git describe
git rev-parse --short HEAD
git rev-parse  HEAD
git HEAD
git show --help
git show --help > help
v help
git show --help | v -
git dif --help | v -
git diff --help | v -
gith(){\ngit "$1" --help | nvim - \n: 1670557191:0;gith(){\ngit "$1" --help | nvim - \n}
rm help
type -f gith
gith show
gith merge
gith git
mme
mkcd quick
touch a b c
echo date
echo $date
v finds
finds c
cat c
fd '[a-d]'
fd '[a|b|c]'
cat a
git commit -am "first"
git log -2 --oneline
rm c
fd '[a|b|c]' -x head -n2
fd '[a|b|c]' -x bat
git checkout e3c46a6
fd '[a|b|c]' -x finds
fd '[a|b|c]' -x cat
git log --oneline
rm -rf quick
git diff head^..
git diff head
git diff head{2}
git diff head^
git diff head~2
git diff HEAD~15
git diff HEAD~4
git diff HEAD~1
git diff HEAD~2
gith reflog
./test
wget https://twit.cachefly.net/audio/floss/floss0710/floss0710.mp3
v eval
sc eval
cp eval p3/mysql
cd h
v coolbench.shell
sh coolbench.shell
sql
se 'rename'
lt | tail n2
lt | tail -n2
se tar
se 'tar\s'
tar -zcvf vid.tar.gz .
lt | awk {'print $1, $5'}
lt | awk {'print $1, $5'} | v -
echo 'mmm' | sed 's/h//g'
echo 'hhhmmm' | sed 's/h//g'
lt | awk {'print $1, $5'} | sed 's/M//g | v -
lt | awk {'print $1, $5'} | sed 's/M//g' | v -
lt | awk {'print $5'} | sed 's/M|G//g' | v -
lt | awk {'print $5'} | sed 's/[M|G]//g' | v -
tar -cvf ~/vid.tar.gz .
lt ~/ |rg 'gz'
rename "s/Python_Flask_Tutorial_Full_Featured_Web_App_//g"
man rename
cd ~/junk
se 'rename' | tail -n3
cd flask
fd '.*'
se 'fd.*rename' | tail -n 4
fd '.*' -exec rename "s/Python_Flask_Tutorial_Full_Featured_Web_App_Part_//g"
fd '.*' -exec rename "s/Python_Flask_Tutorial_//g"
mv vid.tar.gz junk
tar -xvf vid.tar.gz
tar -tvf vid.tar.gz | v -
tar -xvf vid.tar.gz Python_Flask_Tutorial_Full_Featured_Web_App_Part_10_Email_and_Password_Reset.mp4
tar -tvf vid.tar.gz ./Python_Flask_Tutorial_Full_Featured_Web_App_Part_10_Email_and_Password_Reset.mp4
tar -xvf vid.tar.gz ./Python_Flask_Tutorial_Full_Featured_Web_App_Part_10_Email_and_Password_Reset.mp4
ls *.mp4
rm *.mp4
lst
tldr tar
tar -rvf vid.tar.gz debug.log
tar -tvf vid.tar.gz
rm *.part
git commit -am "2"
cd p3/mysql
pwd | sed 's/\//g'
pwd | sed 's/\///g'
pwd | sed 's/\//\/g'
pwd | sed 's/\//\\/g'
pwd | sed 's/\//\\/g' | sed 's/home//g'
pwd | sed 's/\//\\/g' | sed 's/home\///g'
pwd | sed 's/\//\\/g' | sed 's/home\//c:/g' 
pwd | sed 's/\//\\/g' | sed 's/home\/c:/g' 
pwd | sed 's/\//\\/g' | sed 's/home\/c\:/g' 
pwd | sed 's/\//\\/g' | sed 's/home\//c\:/g' 
echo '\home\steff007\'
echo '\home\steff007\' | sed 's/\/home/c:/g'
echo '\home\steff007\' | sed 's/\\home/c:/g'
echo '\home\steff007\' | sed 's/\\home/c:/g' | sed 's/steff007\\//g'
pwd '\home\steff007\' | sed 's/\\home/c:/g' | sed 's/steff007\\//g'
pwd  | sed 's/\\home/c:/g' | sed 's/steff007\\//g'
pwd  | sed 's/\\home/c:/g' 
pwd  | sed 's/\/home/c:/g' 
pwd  | sed 's/\/home/c:/g' | sed 's/steff007\\//g'
pwd  | sed 's/\/home/c:\\/g' | sed 's/steff007\\//g'
pwd  | sed 's/\/home/c:\\/g' | sed 's/\/steff007\\//g'
pwd  | sed 's/\/home/c:\\/g' | sed 's/\/steff007\/\//g'
pw=$(pwd  | sed 's/\/home/c:\\/g')
p $pwd
p $pw
echo "$pw"
echo "$pw" | sed 's/\/steff007'//g'
echo "$pw" | sed 's/\/steff007//g'
echo "$pw" | sed 's.\/steff007./g'
echo "$pw" | sed 's.\/steff007./.g'
echo "$pw" | sed 's.\/steff007.xx.g'
echo "$pw" | sed 's.\/steff007..g'
echo "$pw" | sed 's.\/steff007..g' | sed 's.\/..g'
pwd | sed 's.\/steff007..g' | sed 's.\/..g'
pwd | sed 's.\/mnt..g' | sed 's.\/..g'
pwd | sed 's.\/mnt.c\:.g' | sed 's.\/..g'
pwd | sed 's.\/mnt.c\:\c.g' | sed 's.\/..g'
pwd | sed 's.\/mnt.c\:\.g' | sed 's.\/..g'
pwd | sed 's.\/mnt.\:\\.g' | sed 's.\/..g'
pwd | sed 's.\/mnt.c\:\\.g' | sed 's.\/..g'
pwd | sed 's.\/mnt.c\:\\.' | sed 's.\/..g'
pwd | sed 's.\/mnt.c\:\\.'
pwd | sed 's.\/mnt\/c.c\:\\.' | sed 's.\/...'
pwd | sed 's.\/mnt\/c.c\:\\.' | sed 's.\/..g'
pwd | sed 's.\/mnt\/c.c\:\\.' | sed 's.\/.\\.'
pwd | sed 's.\/mnt\/c.c\:\\.' | sed 's.\/..'
pw=$(pwd | sed 's.\/mnt\/c.c\:\\.' | sed 's.\/..')
echo $pw
echo $pw | sed 's.\/.\\.g'
pwd | sed 's.\/mnt\/c.c\:\\.'
pwd | sed 's.\/mnt\/c.c\:\\.' | sed 's.\/.\\.g'
alias pwin="pwd | sed 's.\/mnt\/c.c\:.' | sed 's.\/.\\.g'" #!good sed replace windows
alias pwin
alias ls
pwin
pwd | sed 's.\/mnt\/c.c\:.' | sed 's.\/.\\.g'
q
pwin() {
pwin() {pwd | sed 's.\/mnt\/c.c\:.' | sed 's.\/.\\.g'}
windir () {\npwd | sed 's.\/mnt\/c.c\:.' | sed 's.\/.\\.g'\n: 1670626959:0;windir
mkcd with2
winp
cat ~/functions.sh
rm index.html
git checkout fae64c7
cd nfl
cp index.html ~/tmp
cp ~/tmp/index.html .
git commit -am "nfl 14"
git remote prune origin
git commit -am "nfl 14 fix?"
git fsck
git gc --prune=now
cd objects
fd -H --size +1m
fd -H --size +1m -x ls -lhrt
git fetch
#tar -zcvf vid.tar.gz .
tar -xcvf ~/tmp/vid.tar.gz .
tar -zcvf ~/tmp/vid.tar.gz .
v vid.tar.gz
ex vid.tar.gz
exiftool -artist=me vid.tar.gz
cp /mnt/c/twit/ww0795.mp3 .
cp /mnt/c/twit/ww0806.mp3 .
exiftool -artist=me ww0806.mp3
exiftool --version
fd -a -ejpg 
fda -a -ejpg 
fda -a -ejpg | head -n3
fda -a -ejpg | head -n3 | v -
cp /mnt/c/projects/bs/mission/group.jpg ~/tmp
exiftool -artist=me group.jpg
exiftool -artist=meeeeeeee group.jpg
ex group.jpg
exiftool -artist=meeeeeeee index.html
wi exiftool
h
fd -I -H --size +1m
fd -I -H -a --size +1m -x ls -lhrt
stat /mnt/c/projects/with2/wither7007.github.io/build/static/js/main.259349ad.js.map
git verify-pack -v .git/objects/pack/pack-{hash}.idx | sort -k 3 -n | tail -n 20
git branc
git branch
git switch main
cd pack
cd objects/pack
git verify-pack -v pack-3c463a08488ea3f232b65d67f92ee8b1c5f49561.pack | sort -k 3 -n | tail -n 20
git rev-list --objects --all | grep 0348464cee3fc21e1414e13
git rev-list --objects --all | grep 28ee5f688420b38f1
..l
git filter-branch --index-filter 'git rm --cached --ignore-unmatch ./path/to/resource/*.ext' --tag-name-filter cat -- --all
git filter-branch --index-filter 'git rm --cached --ignore-unmatch ./path/to/resource/*.jpg' --tag-name-filter cat -- --all
git filter-branch --index-filter 'git rm --cached --ignore-unmatch ./path/to/resource/*.jpg' --tag-name-filter cat -- --all -f
git filter-branch -f --index-filter 'git rm --cached --ignore-unmatch ./path/to/resource/*.jpg' --tag-name-filter cat -- --all
cd git
chah 4
u
rm -rf wither7007.github.io
cp -avr wither7007.github.io ..
#tar -zcvf ~/tmp/vid.tar.gz .
tar -zcvf ~/tmp/streets.tar.gz .
v streets.tar.gz
rm vid.tar.gz
git checkout --orphan last
git branch -D main
git branch -M main
git gc --aggressive --prune=all
git push -f origin main
cd with2
se 'fd.*size'
rm -rf build
fd -I -H --size +1m -x ls -lhrt
cd docs
rm minn.pdf
cd img
fda -d 1 igno
git commit -am "fresh commit"
cd streets
fd -I -H --size +500k -x ls -lhrt
v package-lock.json
rm -rf dis dist 
mkcd street3
git clone git@github.com:wither7007/wither7007.github.io.git
git remote -v
cd jamessteffes.github.io
type -f lts
cd ppm
./move
sh move
v -O yv ye
fd -x rg 'pys'
fd -a -x rg 'pys'
rg 'pys\/'
rg 'pys/'
rg 'pys/' ye yv
rg 'pys' ye yv
cd /home/steff007/script
rg --files-with-matches 'pys'
rg 'pys'
move xx
move xxx
v move
move .bashrc
move .bashrcc
move
rm move cdemo
git restore move
move ~/.bash_aliases
mv move cdemo
cdemo ipy
cdemo ~/.bashrc
cdemo ~/.bashrcc
rm group.jpg_original
rm TWI7935513066.mp3
lts | head -n18 | nl
lt lf
type -a fdd
v vdiff
v yv
fd -d 1
vdiff yv ye
fd '[yv|ye]'
fd 'y[v|e]'
fd 'y[v|e]' | rg 'pys'
fd 'y[v|e]' -x rg 'pys'
fd 'y[v|e]' -x perl -p -i.bak -e 's/pys/script/g' {/}
v ye
v /home/steff007/script/space
vdiff yv yv.bak
cd stones
v morphine.txt
se 'exift'
windir | cl
echo "tttttttttttt is nothing" | rg -v "[^\s]{5,}"
echo "tttttttttttt is nothing" | rg  "[^\s]{5,}"
echo "tttttttttttt is nothing\nmemm" | rg  "[^\s]{5,}"
t p
t ppppppppppp
fd | rg '[^\s]{5,}'
lt p*
rm p ppppppppppp
fd | rg '[^\s]{25,}'
fd | rg '[^\s]{125,}'
fd | rg '[^\s]{90,}'
fd | rg -v '.*{50,}'
fd | rg -v '[^\s]{50,}'
fd | rg  '[^\s]{50,}' #cool file name length
rm xx
mkcd tmp
rename "s/xx/gggg/g"
rename "s/xx/gggg/g" *
rm -rf tmp
lts
lts | v -
#tar -cvf ~/tmp/vid.tar.gz .
tar -cvf ~/tmp/stones.tar .
cd ~/tmp
v stones.tar
se 'rename' | tail -n6
rename "s/The_Rolling_Stones_//g"
rename "s/The_Rolling_Stones_//g" *
rename "s/_OFFICIAL_PROMO//g" *
fd | rg  '[^\s]{50,}'
fd | rg -i 'off'
fd | rg -i 'off.*\.'
rg 'black' *
v x4
cat ditto x3 x4 ditto ditto14 x2 > x6
v x.txt
cat x.txt >> x6
fd 'georgia'
fd 's\.m'
fd '__.*s\.m'
fd '__.*s\.m' -x exiftool
fd '__.*s\.m' -x exiftool | v -
workon finds
workon rgs
rgs sql_hist.txt
rgs ~/.bashrc
export f="move"
workon
workon nn
export f="python"
t xx
v xx
mv rgs ~/
export f="fr.*"
export f="import"
fd -d 1 -t f -x ~/rgs | v -
read f
read f; $no
read f; $no; export xx=$no
p $xx
{\nread f input\necho "return '$?'"\n: 1670725302:0;{\nread f input-2\necho "return '$?'"\n: 1670725321:0;$?
p $k
v ~/.bashrc
set
set | v -
hsi
export f="frumious"
export jim="frumious"
p $f
var6=Jack\necho My name is $var6
./nn
v ~/.zshrc
p $ZSH
. ./nn
v nn
sudo v /etc/environment
sudo nvim /etc/environment
v /etc/environment
echo $jim
echo $GLOBAL
cat nn
sc nn
p $GLOBAL
rg 'man'
fd -d 1 -x rg 'man'
fd -d 1 -x rgs
rm ipy_linux3
fd ip*
rm ip_sql.txt
tmux ls
type -a man
unalias man
man source
help source
source --help
curl cheat.sh/find
curl cheat.sh/source
curl cheat.sh/source | v -
curl cheat.sh/source | less
curl cheat.sh/printf | less
printf -v FileName 'Backup_%(%F_%X)T.tgz' -1
printf "\e[1;34m%.3d\e[0m\n" "42"
printf "\e[1;34m%.3d\e[0m\n" "jim steffes"
printf "\e[0m\n" "jim steffes"
cat ~/.bashrc
rm xx nn
cp ~/rg .
cp ~/rgs .
rm sql_hist.txt
rg 'sheets' *
rg 'sheets' * | v -
fd  -d 1 -t f -x rgs | v -
fd  -d 1 -t f
fd  -d 1 -t f -x rgs
v vlc.xspf
rg 'sheets' vlc.xspf
rgs vlc.xspf
v gs
fd  -d 1 -tf -x rgs
type -a rgs
fd   -tf -x ./rgs
fd   -tf -x ./rgs | v -
cd sqlite
cat sqlp
rm sqlp newpy
fd  -d 1 -tf -x ./rgs
v cool/sheet.js
v cool/sheet.py
fd  -tf -epy -x ./rgs
fd shee
fd corrup
sh scripts/zcorrupt.sh
base scripts/zcorrupt.sh
bash scripts/zcorrupt.sh
fd squi
fd zip
fd dy
fd sq
cd merle
apce
fd '_\d-'
fd '_\d_'
rename "s/_\d_//g" *
rename "s/_\d\d_//g" *
rename "s/Merle_Haggard//g" *
cp The_Bottle_Let_Me_Down_.mp3 Okie_From_Muskogee_.mp3 Swinging_Doors_.mp3 ../alb
ip
cd pd
import pandas as pd
p3 -m pip install pandas
ls u*
v up.sh
cat /etc/apt/sources.list
sudo apt upgrade
sudo apt install -y zip
git --version
git restore rgs
git reset rgs
rv rgs
fd -H -d 1 -t f -x rgs | v -
v rgs
fd -H -d 1 -t f -x ./rgs | v -
git reset
stat .
-
fd -ebak
git commit -am "messed with ye yv"
p3 -m timeit -s 'text = "sample string"; char = "g"'  'char in text'
kill -9 2569
cd rythm
cp * ../alb
alias python='python3.10'
python -m timeit "sum(range(1_000_001))"
func="sum(range(1_000_001))"\npython -m timeit $func
python -m timeit -s "import numpy" "numpy.arange(10)"
docker run -w /home -it -v $(pwd):/home python:3.10.4-alpine python -m timeit -s "<some setup code>" "my_function()"
wi docker
docker
apt list --installed | rg 'dock'
python -m timeit "sum(n * n for n in range(1_000_001))"
python -m pyperf timeit "sum(n * n for n in range(1_000_001))" -o bench.json\n.....................
mkcd benches
cd ../junk .
cp ../junk * .
cp ../junk *.* .
cp ../junk  .
cd ../junk
mv sorting.py ../benches
p3
python -m timeit -s "from sorting import nuts" "nuts()"
python -m timeit -s "from sorting import sheets" "sheets('data')"
python -m timeit -s "from sorting import sheet" "sheet('data')"
python -m  "from sorting import sheet" "sheet('data')"
python -m  "from sorting import sheet"
python -m pdb
python -m pdb -c "print('jim')"
md math
set 'py.*install'
se 'py.*install'
p3 -m install matplotlib
p3 -m pip install matplotlib
cd time
cd time33
md tmp
cp In_Our_Time_S6_02_Bohemianism_Oct_9_2003_.mp3 tmp
fd | sed -r 's/In/xxxxxxxx/g'
se 'perl'
se 'perl' | tail -n3
se 'perl' | tail -n5
fd | perl -e 's/Boh/xxxxxx/g'
rg -r 'perl'
rg -r 'perl' *
rg -r 'perl' * | less
fd | perl -p 's/Boh/xxxxxx/g'
se 'perl' 
fd | perl -ple 's/mian/xxxx/g'
fd | perl -ple 's/I.*2_/xxxx/g'
fd | perl -ple 's/I.*[2|3]_/xxxx/g'
fd | perl -ple 's/I.*[23]_/xxxx/g'
fd | perl -ple 's/I.*[3]_/xxxx/g'
fd | perl -ple 's/I.*[2]_/xxxx/g'
fd | perl -ple 's/I.*[\d]_/xxxx/g'
fd | perl -ple 's/I.*\d_/xxxx/g'
fd | perl -ple 's/\d/xxxx/g'
fd | perl -ple 's/\d//g'
fd | perl -ple 's/\d[A-Z]//g'
fd | perl -ple 's/\d[A-Z]/xxx/g'
fd | perl -ple 's/\d_/xxx/g'
fd | perl -ple 's/.._/xxx/g'
fd | perl -ple 's/.._/x/g'
fd | perl -ple 's/.\d_/x/g'
fd | perl -ple 's/.\d_/x/'
fd | perl -ple 's/I.*.\d_/x/'
cd locke
trash --help
man trash
tldr trash
trash-restore /mnt/c/you/locke/The_British_Philosophers_John_Locke.mp3
mv John_Locke_s_Political_Philosophy.webm.part Locke.mp3
fd | perl -ple 's/T.*ers_/x/'
rename 's/T.*ers_/x/' *
cat ~/p3
type -a p3
type -a p3 | v -
./percounter.py
v percounter.py
hexdump -C --skip 0x7fffffffeb58 /dev/mem | head
cd /dev
cat mem
sudo cat mem
man hexdump
man hexdump | v -
man sss | v -
mt() {\nman $1 | nvim -\n: 1670867769:0;mt ls
mt nnnn
mt fd
type -a mt
type -a vman
sc ~/functions.sh
vman ls
vman rg
cd Downloads
mv 127909587259.JPEG springs.jpg
fdd cool
fd -d 2 cool
ls *.sh
cat neo
cat neo.sh
lt n*
./neo.sh
v readme.txt
cat sorting.py
sc README.md
cat README.md
bash README.md
python -m timeit -s "from sorting import test_sort" "test_sort()"
v sorting.py
cd /home/steff007/p3/benches
v README.md
./runt.sh
v runt.sh
sc runt.sh
v wincon
hp "fda | wc -l"
time "fda | wc -l"
vman time
time wc /etc/hosts
hp "wc /etc/hosts"
wc /etc/hosts
shellcheck workon
workon jjj
git diff workon
workon what
rm what '$'
git reset --soft head~
git show
;a
la
cd p3/benches
cd __pycache__
v workon
git commit -am "fixed workon"
[ ! -f ye]
[ ! -f 'ye']
./gworkon a.sql
v gworkon
g gworkon print.py
gworkon print.py
print.py
trash a.sql
trash print.py
gworkon fdall.sh
rm fdall.sh
work
type -a work
wi work
mv gworkon work
work a.sh
rm a.sh
work noth.py
rm noth.py
perl -ne 'chomp;print;' work
perl -ne 'print;' work
hit 2
perl -i.bak -n -e'print if /\S/' work
v -O work work.bak
v -O work workon
v work
shellcheck work
shellcheck work | v-
shellcheck work | v -
rm work.bak
grep -v '^$' workon
cat workon
grep  '^$' workon
v sh.tar.gz
tar -cvf ~/tmp/script.tar .
fd 'ipy'
fd 'ipy' -x rm -rf
fd 'nvim' -x rm -rf
fd 'tmp' -x rm -rf
fd 'git' -x rm -rf
cd /tmp/
ls *.gz
fd t.*
lt t*
pwd
v script.tar
4
cd twit
wget "https://pdst.fm/e/chtbl.com/track/E91833/cdn.twit.tv/audio/twit/twit0905/twit0905.mp3" ##twit 8/15
ls j*
ld j*
fd j.*
fd -d 1 -tf 'j.*'
fd -d 1 -td 'j.*'
rm __pycache__
rm -rf __pycache__
v split
p3 one.py
perl -pi -e 'print "Put before first line\n" if $. == 1'
perl -pi -e 'print "Put before first line\n" if $. == 1' one.py
cat one.py
fd 'one' -x perl -pi -e 'print "Put before first line\n" if $. == 1' {\}
wi p3
cat start
cat start ss
rm start
fd -d 1 -epy -x perl -pi -e 'print "#!/usr/bin/python3.10\n" if $. == 1' {\}
hp one.py
v ss
v two.py
./two.py
v -O one.py two.py
./one.py
v one.py
./one.py ./two.py
hp one.py two.py
fd mob
fda -d 2 moby
cp jgit/mobydick.txt script
wc mobydick.txt
v mobydick.txt
wget "https://www.gutenberg.org/files/2701/2701-0.txt"
mv 2701-0.txt dick.txt
rm mobydick.txt
vman wget
wget -q -O heights.txt https://www.gutenberg.org/cache/epub/768/pg768.txt
wc dick.txt
wc heights.txt
wc heights.txt dick.txt
df -hT 
work first.pl
l ..
cp ../up.sh .
./first.pl up.sh
fd -a up
fd -a up | cl
fd ../script 'moby'
fd ~
fd . ..script
fd . -a /mnt/c
fd . -a -td /mnt/c/you
fd . -a ../script moby
fd . -a ../script 'moby'
fd . -a '../script' 'moby'
fd . -a '../script' | rg mob
fd . -a '../script' 
fd . -a dick '../script' 
free -h
fdh
fd ~/
fd . ~/
fd . git ~/
fd 'git' .  ~/
fd 'dick' .  ~/script
fd 'dick' .  ~/script -x cp {/} .
fd 'dick' .  ~/script | xargs cp .
fd 'dick' .  ~/script -x echo {/}
fd 'dick' .  ~/script 
fd 'dick' .  ~/script | v -
cp /home/steff007/script/dick.txt .
fd -a dic
fd -a dic | cl
awk 'BEGIN {srand()} !/^$/ { if (rand() <= .01) print $0}' up.sh
awk 'BEGIN {srand()} !/^$/ { if (rand() <= .01) print $0}' dick.txt
awk 'BEGIN {srand()} !/^$/ { if (rand() <= .001) print $0}' dick.txt
perl -ne 'print if (rand() < .01)' dick.txt
perl -ne 'print if (rand() < .0001)' dick.txt
perl -ne 'print if (rand() < .001)' dick.txt
perl -ne 'print if (rand() < .001)' dick.txt | nl
shuf -n $(( $(wc -l < $file) / 100)) dick.txt
shuf -n $(( $(wc -l < $dick.txt) / 100))
cat dick.txt| perl -ne '$l=$_ if rand()<(1/$.); END{print $l}'
cat dick.txt| perl -ne '$l=$_ if rand()<(2/$.); END{print $l}' #cool perl get one line
v dick.txt
cat dick.txt| perl -ne '$l=$_ if rand()<(1/$.); END{print $l}' #cool perl get one line
type -f chah
chah 2 > change &
cp init.vim /mnt/c/Users/jayst/.config/nvim/winit.vim
trash coc.nvim
trash youcompleteme
cd nvim
fd -a -d 1 
fd -a -d 1 -td 
fd -a -d 1 -td  | v -
p $HOME
p $HOME | cl
git commit -am "initial"
mv init.vim init.bak && mv winit.vim init.vim
cd .config/nvim/
fd -a -d 1 -tf 'init.vim'
v copywin
space
fd -d 1 -td | v -
yv
git log | head
se 'git log'
fd . -d 1 -td plugged
cd plugged
tar -cvf ~/tmp/nvim .
fd -d 1 -td 'plugged_'
fd -d 1 -td 'plugged_' -x rm -rf
fd -d 1 -tf 'plugged_' -x rm
fda \.git
fda -td '\.git'
fda -E .cache -td '\.git'
chah 2
tar -cvf ~/tmp/ipython.tar ~/ipython
fda trash
cd .local/share/Trash/
tree
...
trash bxxx
trash-list | v -
asdfa 2>error
cat error
rm error
fd . ../script
./first.pl
v first.pl
trash-empty 2>error
fd trash
lt trash*
v trash
type -a apps
sudo apt list --installed | rg tr
sudo find / -type d -name *trash
sudo find / -type d -name *t
sudo find / -type d -name *
sudo find / -type d
sudo find / -type d -name root
sudo find / -type d -name trash
fd . /trash
fd . /
fd . /bin/t.*
fd . /bin/t
fd . '/bin/t'
fd . '/bin/'
fd 'tr.*' . '/bin/'
fd 'trash.*' . '/bin/'
sudo apt list --installed | rg tras
sudo apt purge trash-cli
type -a trash
cat up.sh
sudo apt update
ls &>out
lsasdf &>out
;asjf >out 2>err
cat out
cat err
sudo apt-get install trash-cli -y
trash bandersnatch
fda bandersnatch
fda /mnt/c/Users/jayst/.config/nvim/plugged/youcompleteme
fda youcompleteme
trash-empty
cd .git
duh
trash ipython
wi shellcheck
lt shellcheck-v0.7.0
lt *.sh
trash shellcheck-v0.7.0
l *.sh
shellcheck ff.sh
shellcheck functions.sh | v -
shellcheck functions.sh 
cd work
trash ffmpeg
git commit -am "deletions"
lsattr ~
cd /bin/
lsattr .
vman lsattr
cat path
git commit -am "changed path in bashrc"
v .bashrc
~/script/neo.sh
fda 
fda '\.git'
cd lightline.vim
fda '\.git' -x trash
git commit -am "fixed submodules?"
v path
v .zshrc
git diff | v -
printf "%'.2f\n" 10000000000000
price=1254.43\nprintf "%'.2f\n" $price
echo 1000000000000 | gawk '{ printf "£%'\''.2f\n", $1 }'
echo 123456789 | python -c 'import sys;import re; print re.sub(r"(?<=.)(?=(?:...)+$)", ",",  sys.stdin.read());'\n 123,456,789
echo 123456789 | python -c 'import sys;import re; print(re.sub(r"(?<=.)(?=(?:...)+$)", ",",)  sys.stdin.read());'\n 123,456,789
printf "%'d" 123456
type -a printf
/bin/printf "%'d" 123456
/bin/printf "%'d\n" 123456
numfnt
cat <<'EOF' |\n13407807929942597099574024998205846127479365820592393377723561443721764030073546976801874298166903427690031858186486050853753882811946569946433649006084096\nEOF\nperl -wpe '1 while s/(\d+)(\d\d\d)/$1,$2/;'
echo 13407807929942597099574024998205846127479365820592393377723561443721764030073546976801874298166903427690031858186486050853753882811946569946433649006084096123456789 | python -c 'import sys;import re; print(re.sub(r"(?<=.)(?=(?:...)+$)", ",",)  sys.stdin.read());'\n 123,456,789
echo 13407807929942597099574024998205846127479365820592393377723561443721764030073546976801874298166903427690031858186486050853753882811946569946433649006084096
echo "123456789" | awk '{ printf("%'"'"'d\n",$1); }'
bash
printf "first 1000\nsecond 10000000\n" |\n  awk '{printf "%9s: %11\047d\n", $1, $2}'
echo 1232323 | awk '{printf(fmt,$1)}' fmt="%'6.3f\n"
echo 20130607215015 | sed ':a;s/\B[0-9]\{3\}\>/,&/;ta'
p $PATH
echo 20130607215015 | sed ':a;s/\B[0-9]\{3\}\>/,&/;ta' #cool iguess
echo 12341234 | rev | sed -E 's/([0-9]{3})/\1,/g' | rev
vman rev
echo 1234213412xxx | rev
l | rev
deci() {\necho "$1" | rev | sed -E 's/([0-9]{3})/\1,/g' | rev\n}
he ls
he sed
he wget
he printf
vman printf
tldr printf
printf "\e[1;34m%.3d\e[0m\n" 42
v colors
ls c*
v cdemo
sc c2
mv c2 simple_colors
./simple_colors
whoami
cd p
t bandersnatch
deci 1123412341234
git ls-files | v -
cd alb
type -a hf
hp './lisdir.py'
./gener.py
hp './lisdir.py' 'gener.py'
cat scan.py
hp './lisdir.py' 'gener.py' 'scan.py'
fd . '/mnt/c/you/kb'
work fdf.sh
v +4 .bashrc
alias memHogsPs='ps wwaxm -o pid,stat,vsize,rss,time,command | head -10'
memHogsPs
chattr +i maria.txt
sudo chattr +i maria.txt
v maria.txt
cp maria.txt tmp
cd tmp
rm maria.txt
lt ma*
cd cp
cd yaleb
cd  benches
hp './lisdir.py' 'gener.py' 'scan.py' 'walk.py' 'fdf.sh'
v listdir.py lisdir.py
p3 -m pip install -U scalene
python3 -m scalene lisdir.py
python3 -m scalene gener
pwd | cl
python3 -m scalene gener.py
python3 -m scalene walk.py
andy=456
p $andy
se 'export' | tail
export bar='foo'
andy=456\nexport bar='foo'
fd -epy -x nvim
git checkout  4f66d50
se 'perl.*p'
3
cat one | perl -ple 's/\d_/xxx/g'
cat one | perl -ple 's/\d/xxx/g'
se 'perl.*p' | v -
cat one
hp 'perl -p -i.bak -e 's/\d/ changed py/g' one'
hp "perl -p -i.bak -e 's/\d/ changed py/g' one"
perl -p -i.bak -e 's/\d/ changed py/g' one
v one
perl -p -i.bak -e 's/changed/python/g' one
head one
mv one xxx
fd 'xxx' -X perl -p -i.bak -e 's/python/frumious/g'
head xxx
fd 'xxx' -X perl -p -i.bak -e 's/python/frumious/g' #good perl replace in file
ll
head gener.py
rg 'pwd' *
rg 'r\'' *
rg "r\'" *
grep "r\'" *
grep "generator" *
grep "#generator" *
grep "\\" *
grep "\/" *
grep "\'\/" *
grep "\'" *
rgh
rg "\"" *
rg "\'" *
rg "'" *
rg "r'" *
rg "r'\/" *
rg "r'/" *
rg "dp.*r'/" *
rg "dp.*/mnt/c/you/alb" *
rg "dp.*/mnt/c/you/alb'" *
#this is my lin3
#and another
#wat me replace
rg '/' *
rg '/\' *
head -n4 $(ls *.py) | less -NX
v ldir.py
rg '\\' *
git checkout  320368568
git checkout  f121b872f0
git log --oneline | head
git log -3
git pop
git log -1
git stash
git checkout  6c851ea385d
git log -2
git diff head~2 head
git diff --name-only head~1 head
first_commit=$(git log -n 1 --skip 1 --pretty=format:"%H")\nsecond_commit=$(git log -n 1 --skip 2 --pretty=format:"%H")\necho "list modified files"\nfiles=$(git diff --name-only $first_commit..$second_commit)\necho "$files"
git log -n 1 --skip 2 --pretty=format:"%H"
git log -n 1 --skip 1 --pretty=format:"%H"
git log  --skip 1 --pretty=format:"%H"
git log  --skip 1 --pretty=format:"%H\n"
git log  --skip 2 --pretty=format:"%H"
git log -3 --skip 2 --pretty=format:"%H"
git log -3 
git log -3  --pretty=format:"%H"
git log -3 --one-line
echo "my name is kitty $(date)" > cat.txt
echo "my name is puppy $(date)" > dog.txt
v cat.txt
stat cat.txt
git commit -am "daily"
rm -rf .git
#perl -p -i.bak -e 's/\d/ changed py/g' one
perl -pie 's/a/xxxxxx/g' cat 
head cat
perl -pie 's/a/xxxxxx/g' cat.txt
perl -p -i -e 's/a/xxxxxx/g' cat.txt
head cat.txt
head $(ls)
perl -p -i -e 's/[a-z]/xxxxxx/g' *
cat dog.txt
echo "my name is kitty $(date)" > cat.txt; echo "my name is puppy $(date)" > dog.txt
git checkout b8ea3a9
cat cat.txt
trash gar
cd all
git log
git diff --nameonly head~2 head
se 'name.*only' | head 2
se 'name.*only' | head n2
git diff --name-only head~2 head
git diff head~2 head note/notes | v -
git diff head~1 head note/notes | v -
vmn
trash gars
t gars
git clean -fxd
cdp3
mkcd gar
cd di
perl -e '$x = "Hello world!\n"; print $x;'
se 'perl.*p' 
perl -ne 'print "$1\n" if /Messages read: (\d+)/' < heights.txt
v heights.txt
cat gar
perl -ne 'print "$1\n" if /1 (\d+)/' < gar
v gar
perl -ne 'print "$1\n" if /Messages read: (\d+)/' < gar
perl -ne 'print "$1\n" if  (\d+)/' < gar
perl -ne 'print "$1\n" if / (\d+)/' < gar
cp heights.txt p
perl -p -i -e 's/[a-z]/xxxxxx/g' p
v p
gat
git clean -fxd #wow actually trashes files
export search="/mnt/c/you"
p $searc
p $search
v env
work env.py
./env.py
USER
v env.py
eval "$(jim=476)"
jim=476
kk="$(jim=476)"
p $kk
kk=$(jim=476)
eval $(jim=476)
eval $(jim=932)
p $USER
p $jim
export dir='/mnt/c/you'
hit 4
export dir='/mnt/c/all'
fd -epy -X nvim
hp './lisdir.py' 'gener.py' 'scan.py' 'walk.py'
fd -epy --changed-within=2hours -X nvim
export dir='~/script'
export dir='~/'
1
export dir='/home/steff007'
v walk.py
export dir='/home/steff007/script'
hp "gener.py env.py lisdir.py scan.py walk.py"
hp 'gener.py' 'env.py'
./walk.py
fd -epy --changed-within=2hours | v -
man hyperfine
hp --export-asciidoc file 'env.py' 'gener.py' 'lisdir.py' 'walk.py' 'scan.py'
vman hyperfine
hp --export-json file 'env.py' 'gener.py' 'lisdir.py' 'walk.py' 'scan.py'
md ../json
mv file ../json/file.json
cd ../json
t work.py
wi python3.10
pystart
cd /mnt/c/projects/p3/json
v file
v work.py
v file.json
cd ~/script
fd -epy --changed-within=24hours | rg 'https'
fd -epy --changed-within=24hours | rg 'http'
fd -epy --changed-within=24hours | rg 'h.*'
fd -epy --changed-within=24hours
cd /mnt/c/projects/p3
fg
git diff 67950 ae8ef0c
se 'name.*only' | head -n2
git diff  67950 ae8ef0c p3/dr/lisdir.py
git diff --nameonly 67950 ae8ef0c
git diff --name-only 67950 ae8ef0c
git diff  67950 ae8ef0c p3/dir/lisdir.py
git diff head~2 head note/notes
git diff head~2 head 
git diff head~2 head | v -
git diff head~2 head p3/dir/env.py
git diff head~2 head dir/env.py
git diff  67950 ae8ef0c dir/lisdir.py
git diff  head~3 head dir/lisdir.py
git diff  head~2 head dir/lisdir.py
git diff  head~1 head dir/lisdir.py
./lisdir.py
hp 'env.py' 'gener.py' 'lisdir.py' 'walk.py' 'scan.py'
export dir='/mnt/you/lazy'
hp  'gener.py' 'lisdir.py' 'walk.py' 'scan.py'
v lisdir.py
export dir='/mnt/c/you/lazy'
hp  'gener.py' 'lisdir.py' 'walk.py' 'scan.py' 'scan2.py'
./scan2.py
hp  'gener.py'  'walk.py' 'scan.py' 'scan2.py'
mv scan2.py scan.py
hp  'gener.py'  'walk.py' 'scan.py'
v gener.py
rm ldir.py
work ju.sh
./fdf.sh
winh
hp 'fd'
fd | wc
cd p3/junk
son
git diff  head~1 head | v .
git diff  head~1 head | v -
v -O lisdir.py listdir.py
v d
fd -d 1 vim
v vimhist.txt
pip freeze |rg 'arg'
p3 -m pip install argparse
work arg.py
./arg.py 2223234
./arg.py 22
mv arg.py dem
dem 123444134
ls
lt -rt
lt -t
ls -lrt
dem aasldfkjasdfl;lksadf
v arg.py
dem 123444555555555555555555
dem 1234445555555555555555552
dem 1234445555555555555555552asf
dem 213441234asdf
dem as21441234
dem 213441234
cd /mnt/c/projects/p3/junk
v demo
ln ../dir/scan.py .
stat scan.py
rm scan.py
fd . ../dir
ln -s ../dir/scan.py
sudo apt install speedtest-cli
apt list --installed | rg 'speed'
sudo pip3 install speedtest-cli
sudo pip install speedtest-cli
se 'p3.*pip'
p3 -m pip install speedtest-cli
mkcd
mkcd speed
se 'p&'
se '&'
speedtest &>>speed
echo $(date)
echo $(date)>>speed
work spe.sh
echo "\n\n"
echo \n\n >>speed
echo '\n\n' >>speed
v spec.
echo '\n\n' &>>speed
cat speed
wi cron
ls /var/spool/cron/crontabs
sudo ls /var/spool/cron/crontabs
v /etc/crontab
alias vim="nvim"
vim /etc/crontab
v speed
fd greet
fd -a spe.sh
rm speed
wi speedtest
wi speedtest | v -
v se
speedtest
service cron start
v scan.py
v one.
v one.bak
v pf.txt
v greetings.txt
fd -d 1 -tf
v sqa
v ignore
v dem
cp dem tt
v tt
tt one two
tt one two /mnt/c/d
tt
tt /mnt/c/mnt
tt /mnt/c/mnt asdfasf
./scan.py
./scan.py /mnt/c/all
./scan.py /mnt/c/all | column
fc
./scan.py ~ | column
mv scan.py scan
cp scan ../dir
scan !
.
rg 'tables'
fd -epy | xargs rg 'table'
fd -epy | xargs rg 'import'
fd -epy | xargs rg 'import\s'
fd -epy | xargs rg 'tabulate'
v cool/sheets.py
crontab -l
ps ax | grep cron
/home/steff007/speed/spe.sh
cd you/lazy
cd p3/dir
scan /mnt/c/you/alb
scan /mnt/c/you/
scan ~as
scan as;dklfj
scan ~
scan /mnt/c/all
sudo service cron stop
rm spe
cd you
fda --changed-within=24hours
cp /mnt/c/you/https:/www.youtube.com/watch?v=Gfr50f6ZBvo/Demis_Hassabis_DeepMind_AI_Superintelligence_the_Future_of_Humanity_Lex_Fridman_Podcast_299.mp3 fridman.mp3
mv fridman.mp3 lazy/AIfridman.mp3
fda -a --changed-within=24hours | v -
rm /mnt/c/you/https:/www.youtube.com/watch?v=Gfr50f6ZBvo/Demis_Hassabis_DeepMind_AI_Superintelligence_the_Future_of_Humanity_Lex_Fridman_Podcast_299.mp3
fda -a --changed-within=24hours
cd lazy
mv Martin_Rees_Black_Holes_Alien_Life_Dark_Matter_and_the_Big_Bang_Lex_Fridman_Podcast_305.mp3 blackholes.mp3
mv Making_Python_5x_FASTER_with_Guido_van_Rossum_and_Mark_Shannon_Talk_Python_To_Me.mp3 van_rossum.mp3
fd "__.*william"
fd "__.*william" -x rm
fd "william"
mv It_s_Time_to_Pay_Attention_to_A.I._ChatGPT_and_Beyond_.mp3 chatfpt.mp3
fd "coffee" -x mv fridman_scams.mp3
fd "coffee" -x mv {/} fridman_scams.mp3
scan
fd 'guido'
fd 'guido' -x mv {/} vanRossum.mp3
fd 'lec.*4'
fd 'lec.*4' -x mv {/} communistChina.mp3
fd 'c.*span'
fd 'c.*span' -x {/} napoleonCspan.mp3
fd 'c.*span' -x mv {/} napoleonCspan.mp3
sudo service cron start
crontab -e
d
2
fd 'daugh'
fd 'daugh' -x mv {/} insaneDaughter.mp3
fd 'why.*rel' -x mv {/} harrisRel.mp3
fd | v -
git commit -m 'certain files'
tac spe | v -
v spe.sh
v /home/steff007/speed/spe.sh
v del
v error
trash-list
cd c
fd -x nvim
fd -X nvim
se 'fd.*vim'
fda
se 'fd.*vim' | tail -n20
fda -x nvim
fda -X nvim
v ~/.gitignore
git diff --name-only | v -
git reset --hard
git diff --name-only
git stash pop
git tree
git stash list
git stash drop
git log --oneline --graph --decorate --all
gitree() {\ngit log --oneline --graph --decorate --all\n}
gitree() {\necho "git log --oneline --graph --decorate --all"\ngit log --oneline --graph --decorate --all\n}
tmux
gb
git diff
git diff --staged
git push
git pull
git push -f
cd wither7007.github.io
ssp
cd speed
./spe.sh
v spe
cd ditto
v x6
cd /home/steff007/p3/dir
chah 24
fd -epy --changed-within=48hours
fd -epy --changed-within=48hours -X nvim 
hp  'gener.py'  'walk.py' 'scan.py' 'fdf.sh'
v fdf.sh
fd -epy --changed-within=48hours | xargs nvim
fd -epy --changed-within=48hours | tail -n2 |xargs nvim -O
fd -epy --changed-within=48hours | xargs nvim -O
v scan
git log -3 --oneline
git log -5 --oneline
git checkout 4e7bc3
git log -5 --oneline | v -
git add -A
git commit -m 'fixing detach?'
git checkout 4e7dbc3
git switch -
v
cd .config/nvim/plugged/nerdtree
trash nerdtree
vinit
cd junk
fd gitap
fd -a gitap | cl
.gitignore
t xxxxxxxxxx
git rm /home/steff007/gitapi
git rm /home/steff007/gitapi -r
t vv
v .gitignore
git switch master
git branch back d321cde
git switch back
gitree
t mmm
cd gitapi
rm *
v a
git init
git add .
git restore
git restore .
git rm --staged a
git rm --cached a
git add a
git commit -m 'xx'
cd dir/
mc
cd all/ps
v son.ps1
fd
fdd
fdd | column
fdc
mps
cd p3
export dir='.'
p $dir
pc
cd /mnt/c/projects/p3/dir
cd .config
ld
cd lf
v lfrc
y3
lf -doc | v -
l
t aaaaa
lfcd () {\n    tmp="$(mktemp)"\n    lf -last-dir-path="$tmp" "$@"\n    if [ -f "$tmp" ]; then\n        dir="$(cat "$tmp")"\n        rm -f "$tmp"\n        if [ -d "$dir" ]; then\n            if [ "$dir" != "$(pwd)" ]; then\n                cd "$dir"\n            fi\n        fi\n    fi\n}
alias lf="lfcd"
alias lfc="v .config/lf/lfrc"
lf
type -a lf
mem
\lf
lfc () {\n    tmp="$(mktemp)"\n    lf -last-dir-path="$tmp" "$@"\n    if [ -f "$tmp" ]; then\n        dir="$(cat "$tmp")"\n        rm -f "$tmp"\n        if [ -d "$dir" ]; then\n            if [ "$dir" != "$(pwd)" ]; then\n                cd "$dir"\n            fi\n        fi\n    fi\n}
c
v ~/functions.sh
export FUNCNEST=1000
echo $FUNCNEST
git restore functions.sh
rm aaaaa delete
gst
alias lfc="v ~/.config/lf/lfrc"
lfc
cd dir
his
fd -epy
v ipysql.py
sqlite3 
sqlite3 /home/steff007/.ipython/profile_default/history.sqlite
axit
exit
mv sql_hist sql_back
i3
ipy
ye
lfcd
cd script
v ipy
mktmp
t=$(mktemp)
p $t
history
type -f history
type -f omz_history 
p $HISTFILE
v /home/steff007/.cache/zsh/history
v functions.sh
v hf
hf&&his
h3
hisf:his
hisf&&his
source functions.sh
cd ..
..
cd
lt
